{"version":3,"sources":["scripts/app.js"],"names":["config","$translatePartialLoaderProvider","msApiProvider","addPart","register","$inject","angular","module","ChatTabController","msApi","$timeout","toggleChat","contact","vm","chatActive","replyMessage","chat","scrollToBottomOfChat","reply","dialog","push","who","message","time","speed","chatDialog","element","animate","scrollTop","scrollHeight","this","request","response","contacts","data","controller","MsWidgetController","$scope","$element","flip","isFlippable","flipped","toggleClass","isDefined","flippable","msWidgetDirective","restrict","scope","transclude","compile","tElement","addClass","iElement","iAttrs","MsWidgetCtrl","transcludeFn","clone","empty","append","msWidgetFrontDirective","require","flipWidget","msWidgetBackDirective","directive","MsTimelineController","setScrollEl","scrollEl","getScrollEl","undefined","msTimelineDirective","msTimeline","loadMore","MsTimelineCtrl","onScroll","height","threshold","loadMoreEl","position","top","unregisterOnScroll","then","removeClass","registerOnScroll","remove","on","off","extend","$on","msTimelineItemDirective","$q","init","find","event","args","cardEl","testForImage","itemLoaded","testForVisibility","deferred","defer","imgEl","length","resolve","promise","itemInViewport","itemReadyWatcher","$watch","current","old","equals","MsStepperController","registerMainForm","form","mainForm","registerStep","step","stepNumber","steps","stepTitle","sort","a","b","setupSteps","setCurrentStep","currentStepNumber","resetForm","x","$setPristine","$setUntouched","gotoFirstStep","isStepNumberValid","i","hide","show","gotoStep","isStepHidden","gotoPreviousStep","s","gotoNextStep","gotoLastStep","isFirstStep","isLastStep","isStepCurrent","isStepDisabled","disabled","isStepValid","isStepOptional","optionalStep","hideStep","filterHiddenStep","$valid","isUndefined","isFormValid","currentStep","msStepperDirective","priority","bindToController","model","templateUrl","ctrls","FormCtrl","MsStepperCtrl","msStepperStepDirective","msSplashScreenDirective","$animate","link","splashScreenRemoveEvent","leave","msSidenavHelperDirective","MdSidenavCtrl","isOpen","isLockedOpen","parent","MsShortcutsController","$cookies","$document","msNavigationService","loadShortcuts","shortcuts","results","resultsLoading","populateResults","flatNavigation","getFlatNavigation","uisref","query","filter","item","lowercase","title","search","hasShortcut","y","_id","selectedResultIndex","fromJson","get","icon","state","weight","children","_path","put","toJson","saveShortcuts","success","addShortcut","removeShortcut","splice","handleResultClick","absorbEvent","preventDefault","handleKeydown","keyCode","keys","indexOf","ensureSelectedResultIsVisible","handleMouseenter","index","ignoreMouseEvents","temporarilyIgnoreMouseEvents","cancel","mouseEventIgnoreTimeout","resultsEl","selectedItemEl","bottom","outerHeight","queryOptions","debounce","sortableOptions","ghostClass","forceFallback","fallbackClass","onSort","msShortcutsDirective","MsSearchBarController","collapsed","onSearchEvaluated","$parent","$eval","onSearch","isArray","isPromise","isNull","expand","onExpand","isFunction","collapse","onCollapse","onResultClick","msSearchBarDirective","inputEl","bodyEl","focus","msScrollConfigProvider","configuration","defaultConfiguration","wheelSpeed","wheelPropagation","swipePropagation","minScrollbarLength","maxScrollbarLength","useBothWheelAxes","useKeyboard","suppressScrollX","suppressScrollY","scrollXMarginOffset","scrollYMarginOffset","stopPropagationOnClick","$get","getConfig","service","msScrollDirective","msScrollConfig","msUtils","fuseConfig","isMobile","updateScrollbar","PerfectScrollbar","update","options","msScroll","initialize","prop","destroy","provider","msResponsiveTableDirective","wrapper","after","msRandomClassDirective","msRandomClass","randomClass","Math","floor","random","msNavigationServiceProvider","saveItem","path","isString","$log","error","parts","split","id","_findOrCreateParent","updateItem","_getUiSref","isNumber","deleteItem","navigation","p","sortByWeight","_byWeight","pop","createParent","join","parseInt","stateParams","isObject","injector","clearNavigation","navigationScope","setActiveItem","node","activeItem","getActiveItem","getNavigation","root","_flattenNavigation","setNavigationScope","setFolded","status","folded","getFolded","setFoldedOpen","foldedOpen","getFoldedOpen","toggleFolded","flatNav","navToPush","copy","concat","MsNavigationController","toggleHorizontalMobileMenu","msNavigationDirective","$rootScope","$mdSidenav","$broadcast","setFoldExpander","$emit","removeFoldCollapser","foldExpanderEl","onFoldExpanderHover","setFoldCollapser","foldCollapserEl","onFoldCollapserHover","sidenav","close","MsNavigationNodeController","$state","hasChildren","group","collapsable","name","includes","params","$evalAsync","givenPathParts","activePathParts","toggleCollapsed","collapseEl","offsetHeight","display","animateHeightClass","css","expandEl","visibility","getClass","isHidden","hidden","msNavigationNodeDirective","MsNavigationNodeCtrl","msNavigationItemDirective","msNavigationHorizontalDirective","MsNavigationHorizontalNodeController","isActive","msNavigationHorizontalNodeDirective","MsNavigationHorizontalNodeCtrl","msNavigationHorizontalItemDirective","$mdMedia","onClick","msNavFoldService","setFoldable","foldable","isNavFoldedOpen","toggleFold","openFolded","closeFolded","msNavIsFoldedDirective","isFoldedOpen","isFolded","fold","unfold","body","sidenavEl","openOverlay","closeOverlay","msNavIsFolded","MsNavController","isDisabled","disable","enable","setToggleItem","toggleItems","getLockedItems","lockedItems","setLockedItem","clearLockedItems","msNavDirective","$mdComponentRegistry","stateChangeSuccessEvent","when","msNavTitleDirective","msNavButtonDirective","msNavToggleDirective","tAttrs","attr","MsNavCtrl","toggle","isCollapsed","isExpanded","reject","elementToExpand","classes","expandAnimation","expanded","elementToCollapse","collapseAnimation","links","states","regExp","forEach","replace","locked","lockedItem","currentState","shouldExpand","factory","msMaterialColorPickerController","$mdColorPalette","$mdMenu","fuseGenerator","activateHueSelection","palette","hues","selectedPalette","selectedHues","selectColor","hue","updateSelectedColor","updateModel","removeColor","selectedColor","class","setSelectedColor","modelCtrl","$viewValue","msModelType","color","bgColorValue","rgba","palettes","value","fgColorValue","contrast","$selectedColor","$setViewValue","msMaterialColorPicker","ngModel","attrs","controllers","ctrl","el","nodeType","replaceWith","msMasonryController","$window","defaultOpts","watchContainerResize","waitImagesLoaded","callback","imagesLoaded","imgLoad","container","width","newValue","oldValue","reLayout","start","containerPos","getBoundingClientRect","updateColumnOptions","items","referenceArr","Array","apply","columnCount","map","xPos","yPos","columnWidth","refTop","min","column","round","transform","reLayoutTimeout","reLayoutDebounce","responsive","md","sm","xs","msMasonry","attributes","pre","post","msMasonryItem","newVal","oldVal","msInfoBarDirective","removeInfoBar","bodyClass","$destroy","MsFormWizardController","registerForm","forms","previousStep","selectedIndex","nextStep","firstStep","lastStep","totalSteps","currentStepInvalid","$invalid","previousStepInvalid","formsIncomplete","msFormWizardDirective","msFormWizardFormDirective","formCtrl","MsFormWizardCtrl","msDatepickerFixConfigProvider","formatter","val","Date","parser","offset","moment","utcOffset","date","add","msDatepickerFix","msDatepickerFixConfig","elem","$formatters","unshift","$parsers","msCardDirective","templatePath","card","template","cardTemplateLoaded","$stateProvider","url","views","content@app","SampleData","translate","SampleController","helloText","fuseThemingProvider","setRegisteredPalettes","_registeredPalettes","registeredPalettes","setRegisteredThemes","_registeredThemes","registeredThemes","invoke","_$cookies","getRegisteredPalettes","getRegisteredThemes","setActiveTheme","themeName","themes","list","warn","active","theme","setThemesList","themeList","$mdThemingProvider","fusePalettes","fuseThemes","customTheme","getObject","alwaysWatchTheme","definePalette","primaryPalette","primary","accentPalette","accent","warnPalette","backgroundPalette","background","_PALETTES","_THEMES","default","hue-1","hue-2","hue-3","pink","teal","constant","50","100","200","300","400","500","600","700","800","900","A100","A200","A400","A700","contrastDefaultColor","contrastDarkColors","contrastStrongLightColors","fuseGeneratorService","fuseTheming","generate","registeredTheme","colors","colorType","colorTypeName","levels","contrast1","contrast2","contrast3","contrast4","hue1","hue2","hue3","processAndStoreThemes","styleVars","colorTypes","colorLevelName","colorName","ucfirst","render","_themes","selectedTheme","cssTemplate","regex","RegExp","Object","matched","headEl","styleEl","html","_contrastLevel","contrastLevel","applyContrast","contrastLevels","white","1","2","3","4","black","string","charAt","toUpperCase","slice","MsThemeOptionsController","updateLayoutMode","layoutMode","updateLayoutStyle","layoutStyle","location","reload","msThemeOptions","panelOpen","toggleOptionsPanel","closeOptionsPanel","openOptionsPanel","backdropEl","exists","detectBrowser","searchString","dataString","dataProp","versionSearchString","versionSearch","identity","subString","searchVersion","substring","browserInfo","browserData","navigator","userAgent","vendor","opera","osData","platform","browser","version","appVersion","os","toLowerCase","guidGenerator","S4","toString","mobileDetect","mobile","toggleInArray","array","MobileDetect","setBaseUrl","baseUrl","getBaseUrl","getApiObject","api","key","resource","paramDefaults","actions","$resource","action","parameters","actionParts","method","apiObject","resourceObject","apiResolverService","resourceParts","l","filterByTags","tags","filtered","match","every","tag","tagExists","itemTag","filterSingleByTags","itemTags","filterByPropIds","parameter","ids","j","filterByIds","toTrustedFilter","$sce","trustAsHtml","htmlToPlainTextFilter","text","String","nospaceFilter","humanizeDocFilter","doc","type","$1","label","altDate","diff","now","fromNow","format","calendar","hljsDirective","$interpolate","code","contents","codeElement","lines","line","trim","firstLineWhitespace","startingWhitespaceRegex","highlightedCode","hljs","highlight","language","lang","shouldInterpolate","contentParent","fuseConfigProvider","fuseConfiguration","disableCustomScrollbars","disableMdInkRippleOnMobile","disableCustomScrollbarsOnMobile","configName","setConfig","configValue","ToolbarController","$translate","$mdToast","userStatus","userStatusOptions","selectedLanguage","languages","preferredLanguage","toggleSidenav","sidenavId","setUserStatus","logout","changeLanguage","hideDelay","use","toggleMsNavigationFolded","searchResultClick","go","global","en","translation","flag","es","tr","QuickPanelController","settings","notify","cloud","retro","activities","events","notes","NavigationController","msScrollOptions","MainController","targetScope","$id","runBlock","htmlClass","run","$ariaProvider","$logProvider","$translateProvider","debugEnabled","useLoader","urlTemplate","useSanitizeValueStrategy","tabindex","stateChangeStartEvent","loadingProgress","routeConfig","$urlRouterProvider","$locationProvider","html5Mode","otherwise","layouts","verticalNavigation","main","toolbar","verticalNavigationFullwidthToolbar","verticalNavigationFullwidthToolbar2","horizontalNavigation","contentOnly","contentWithToolbar","abstract","main@","toolbar@app","navigation@app","quickPanel@app","IndexController","apiService","$templateCache"],"mappings":"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","file":"scripts/app-9bdd4044df.js","sourcesContent":["(function ()\n{\n    'use strict';\n\n    angular\n        .module('app.quick-panel', [])\n        .config(config);\n\n    /** @ngInject */\n    function config($translatePartialLoaderProvider, msApiProvider)\n    {\n        // Translation\n        $translatePartialLoaderProvider.addPart('app/quick-panel');\n\n        // Api\n        msApiProvider.register('quickPanel.activities', ['app/data/quick-panel/activities.json']);\n        msApiProvider.register('quickPanel.contacts', ['app/data/quick-panel/contacts.json']);\n        msApiProvider.register('quickPanel.events', ['app/data/quick-panel/events.json']);\n        msApiProvider.register('quickPanel.notes', ['app/data/quick-panel/notes.json']);\n    }\n})();\n\n(function ()\n{\n    'use strict';\n\n    angular\n        .module('app.quick-panel')\n        .controller('ChatTabController', ChatTabController);\n\n    /** @ngInject */\n    function ChatTabController(msApi, $timeout)\n    {\n        var vm = this;\n\n        // Data\n        vm.chat = {};\n        vm.chatActive = false;\n        vm.replyMessage = '';\n\n        msApi.request('quickPanel.contacts@get', {},\n            // Success\n            function (response)\n            {\n                vm.contacts = response.data;\n            }\n        );\n\n        // Methods\n        vm.toggleChat = toggleChat;\n        vm.reply = reply;\n\n        //////////\n\n        function toggleChat(contact)\n        {\n            vm.chatActive = !vm.chatActive;\n\n            if ( vm.chatActive )\n            {\n                vm.replyMessage = '';\n                vm.chat.contact = contact;\n                scrollToBottomOfChat(0);\n            }\n        }\n\n        function reply()\n        {\n            if ( vm.replyMessage === '' )\n            {\n                return;\n            }\n\n            if ( !vm.chat.contact.dialog )\n            {\n                vm.chat.contact.dialog = [];\n            }\n\n            vm.chat.contact.dialog.push({\n                who    : 'user',\n                message: vm.replyMessage,\n                time   : 'Just now'\n            });\n\n            vm.replyMessage = '';\n\n            scrollToBottomOfChat(400);\n        }\n\n        function scrollToBottomOfChat(speed)\n        {\n            var chatDialog = angular.element('#chat-dialog');\n\n            $timeout(function ()\n            {\n                chatDialog.animate({\n                    scrollTop: chatDialog[0].scrollHeight\n                }, speed);\n            }, 0);\n\n        }\n    }\n\n})();\n(function ()\n{\n    'use strict';\n\n    angular\n        .module('app.core',\n            [\n                'ngAnimate',\n                'ngAria',\n                'ngCookies',\n                'ngMessages',\n                'ngResource',\n                'ngSanitize',\n                'ngMaterial',\n                'pascalprecht.translate',\n                'ui.router'\n                \n            ]);\n})();\n(function ()\n{\n    'use strict';\n\n    angular\n        .module('app.core')\n        .controller('MsWidgetController', MsWidgetController)\n        .directive('msWidget', msWidgetDirective)\n        .directive('msWidgetFront', msWidgetFrontDirective)\n        .directive('msWidgetBack', msWidgetBackDirective);\n\n    /** @ngInject */\n    function MsWidgetController($scope, $element)\n    {\n        var vm = this;\n\n        // Data\n        vm.flipped = false;\n\n        // Methods\n        vm.flip = flip;\n\n        //////////\n\n        /**\n         * Flip the widget\n         */\n        function flip()\n        {\n            if ( !isFlippable() )\n            {\n                return;\n            }\n\n            // Toggle flipped status\n            vm.flipped = !vm.flipped;\n\n            // Toggle the 'flipped' class\n            $element.toggleClass('flipped', vm.flipped);\n        }\n\n        /**\n         * Check if widget is flippable\n         *\n         * @returns {boolean}\n         */\n        function isFlippable()\n        {\n            return (angular.isDefined($scope.flippable) && $scope.flippable === true);\n        }\n    }\n\n    /** @ngInject */\n    function msWidgetDirective()\n    {\n        return {\n            restrict  : 'E',\n            scope     : {\n                flippable: '=?'\n            },\n            controller: 'MsWidgetController',\n            transclude: true,\n            compile   : function (tElement)\n            {\n                tElement.addClass('ms-widget');\n\n                return function postLink(scope, iElement, iAttrs, MsWidgetCtrl, transcludeFn)\n                {\n                    // Custom transclusion\n                    transcludeFn(function (clone)\n                    {\n                        iElement.empty();\n                        iElement.append(clone);\n                    });\n\n                    //////////\n                };\n            }\n        };\n    }\n\n    /** @ngInject */\n    function msWidgetFrontDirective()\n    {\n        return {\n            restrict  : 'E',\n            require   : '^msWidget',\n            transclude: true,\n            compile   : function (tElement)\n            {\n                tElement.addClass('ms-widget-front');\n\n                return function postLink(scope, iElement, iAttrs, MsWidgetCtrl, transcludeFn)\n                {\n                    // Custom transclusion\n                    transcludeFn(function (clone)\n                    {\n                        iElement.empty();\n                        iElement.append(clone);\n                    });\n\n                    // Methods\n                    scope.flipWidget = MsWidgetCtrl.flip;\n                };\n            }\n        };\n    }\n\n    /** @ngInject */\n    function msWidgetBackDirective()\n    {\n        return {\n            restrict  : 'E',\n            require   : '^msWidget',\n            transclude: true,\n            compile   : function (tElement)\n            {\n                tElement.addClass('ms-widget-back');\n\n                return function postLink(scope, iElement, iAttrs, MsWidgetCtrl, transcludeFn)\n                {\n                    // Custom transclusion\n                    transcludeFn(function (clone)\n                    {\n                        iElement.empty();\n                        iElement.append(clone);\n                    });\n\n                    // Methods\n                    scope.flipWidget = MsWidgetCtrl.flip;\n                };\n            }\n        };\n    }\n\n})();\n(function ()\n{\n    'use strict';\n\n    angular\n        .module('app.core')\n        .controller('MsTimelineController', MsTimelineController)\n        .directive('msTimeline', msTimelineDirective)\n        .directive('msTimelineItem', msTimelineItemDirective);\n\n    /** @ngInject */\n    function MsTimelineController()\n    {\n        var vm = this;\n\n        // Data\n        vm.scrollEl = undefined;\n\n        // Methods\n        vm.setScrollEl = setScrollEl;\n        vm.getScrollEl = getScrollEl;\n\n        //////////\n\n        /**\n         * Set scroll element\n         *\n         * @param scrollEl\n         */\n        function setScrollEl(scrollEl)\n        {\n            vm.scrollEl = scrollEl;\n        }\n\n        /**\n         * Get scroll element\n         *\n         * @returns {undefined|*}\n         */\n        function getScrollEl()\n        {\n            return vm.scrollEl;\n        }\n    }\n\n    /** @ngInject */\n    function msTimelineDirective()\n    {\n        return {\n            scope     : {\n                msTimeline: '=?',\n                loadMore  : '&?msTimelineLoadMore'\n            },\n            controller: 'MsTimelineController',\n            compile   : function (tElement)\n            {\n                tElement.addClass('ms-timeline');\n\n                return function postLink(scope, iElement, iAttrs, MsTimelineCtrl)\n                {\n                    // Create an element for triggering the load more action and append it\n                    var loadMoreEl = angular.element('<div class=\"ms-timeline-loader md-accent-bg md-whiteframe-4dp\"><span class=\"spinner animate-rotate\"></span></div>');\n                    iElement.append(loadMoreEl);\n\n                    // Default config\n                    var config = {\n                        scrollEl: '#content'\n                    };\n\n                    // Extend the configuration\n                    config = angular.extend(config, scope.msTimeline, {});\n                    \n                    // Grab the scrollable element and store it in the controller for general use\n                    var scrollEl = angular.element(config.scrollEl);\n                    MsTimelineCtrl.setScrollEl(scrollEl);\n\n                    // Threshold\n                    var threshold = 144;\n\n                    // Register onScroll event for the first time\n                    registerOnScroll();\n\n                    /**\n                     * onScroll Event\n                     */\n                    function onScroll()\n                    {\n                        if ( scrollEl.scrollTop() + scrollEl.height() + threshold > loadMoreEl.position().top )\n                        {\n                            // Show the loader\n                            loadMoreEl.addClass('show');\n\n                            // Unregister scroll event to prevent triggering the function over and over again\n                            unregisterOnScroll();\n\n                            // Trigger load more event\n                            scope.loadMore().then(\n                                // Success\n                                function ()\n                                {\n                                    // Hide the loader\n                                    loadMoreEl.removeClass('show');\n\n                                    // Register the onScroll event again\n                                    registerOnScroll();\n                                },\n\n                                // Error\n                                function ()\n                                {\n                                    // Remove the loader completely\n                                    loadMoreEl.remove();\n                                }\n                            );\n                        }\n                    }\n\n                    /**\n                     * onScroll event registerer\n                     */\n                    function registerOnScroll()\n                    {\n                        scrollEl.on('scroll', onScroll);\n                    }\n\n                    /**\n                     * onScroll event unregisterer\n                     */\n                    function unregisterOnScroll()\n                    {\n                        scrollEl.off('scroll', onScroll);\n                    }\n\n                    // Cleanup\n                    scope.$on('$destroy', function ()\n                    {\n                        unregisterOnScroll();\n                    });\n                };\n            }\n        };\n    }\n\n    /** @ngInject */\n    function msTimelineItemDirective($timeout, $q)\n    {\n        return {\n            scope  : true,\n            require: '^msTimeline',\n            compile: function (tElement)\n            {\n                tElement.addClass('ms-timeline-item').addClass('hidden');\n\n                return function postLink(scope, iElement, iAttrs, MsTimelineCtrl)\n                {\n                    var threshold = 72,\n                        itemLoaded = false,\n                        itemInViewport = false,\n                        scrollEl = MsTimelineCtrl.getScrollEl();\n\n                    //////////\n\n                    init();\n\n                    /**\n                     * Initialize\n                     */\n                    function init()\n                    {\n                        // Check if the timeline item has ms-card\n                        if ( iElement.find('ms-card') )\n                        {\n                            // If the ms-card template loaded...\n                            scope.$on('msCard::cardTemplateLoaded', function (event, args)\n                            {\n                                var cardEl = angular.element(args[0]);\n\n                                // Test the card to see if there is any image on it\n                                testForImage(cardEl).then(function ()\n                                {\n                                    $timeout(function ()\n                                    {\n                                        itemLoaded = true;\n                                    });\n                                });\n                            });\n                        }\n                        else\n                        {\n                            // Test the element to see if there is any image on it\n                            testForImage(iElement).then(function ()\n                            {\n                                $timeout(function ()\n                                {\n                                    itemLoaded = true;\n                                });\n                            });\n                        }\n\n                        // Check if the loaded element also in the viewport\n                        scrollEl.on('scroll', testForVisibility);\n\n                        // Test for visibility for the first time without waiting for the scroll event\n                        testForVisibility();\n                    }\n\n                    // Item ready watcher\n                    var itemReadyWatcher = scope.$watch(\n                        function ()\n                        {\n                            return itemLoaded && itemInViewport;\n                        },\n                        function (current, old)\n                        {\n                            if ( angular.equals(current, old) )\n                            {\n                                return;\n                            }\n\n                            if ( current )\n                            {\n                                iElement.removeClass('hidden').addClass('animate');\n\n                                // Unbind itemReadyWatcher\n                                itemReadyWatcher();\n                            }\n                        }, true);\n\n                    /**\n                     * Test the given element for image\n                     *\n                     * @param element\n                     * @returns promise\n                     */\n                    function testForImage(element)\n                    {\n                        var deferred = $q.defer(),\n                            imgEl = element.find('img');\n\n                        if ( imgEl.length > 0 )\n                        {\n                            imgEl.on('load', function ()\n                            {\n                                deferred.resolve('Image is loaded');\n                            });\n                        }\n                        else\n                        {\n                            deferred.resolve('No images');\n                        }\n\n                        return deferred.promise;\n                    }\n\n                    /**\n                     * Test the element for visibility\n                     */\n                    function testForVisibility()\n                    {\n                        if ( scrollEl.scrollTop() + scrollEl.height() > iElement.position().top + threshold )\n                        {\n                            $timeout(function ()\n                            {\n                                itemInViewport = true;\n                            });\n\n                            // Unbind the scroll event\n                            scrollEl.off('scroll', testForVisibility);\n                        }\n                    }\n                };\n            }\n        };\n    }\n})();\n(function ()\n{\n    'use strict';\n\n    angular\n        .module('app.core')\n        .controller('MsStepperController', MsStepperController)\n        .directive('msStepper', msStepperDirective)\n        .directive('msStepperStep', msStepperStepDirective);\n\n    /** @ngInject */\n    function MsStepperController($timeout)\n    {\n        var vm = this;\n\n        // Data\n        vm.mainForm = undefined;\n\n        vm.steps = [];\n        vm.currentStep = undefined;\n        vm.currentStepNumber = 1;\n\n        // Methods\n        vm.registerMainForm = registerMainForm;\n        vm.registerStep = registerStep;\n        vm.setupSteps = setupSteps;\n        vm.resetForm = resetForm;\n\n        vm.setCurrentStep = setCurrentStep;\n\n        vm.gotoStep = gotoStep;\n        vm.gotoPreviousStep = gotoPreviousStep;\n        vm.gotoNextStep = gotoNextStep;\n        vm.gotoFirstStep = gotoFirstStep;\n        vm.gotoLastStep = gotoLastStep;\n\n        vm.isFirstStep = isFirstStep;\n        vm.isLastStep = isLastStep;\n\n        vm.isStepCurrent = isStepCurrent;\n        vm.isStepDisabled = isStepDisabled;\n        vm.isStepOptional = isStepOptional;\n        vm.isStepHidden = isStepHidden;\n        vm.filterHiddenStep = filterHiddenStep;\n        vm.isStepValid = isStepValid;\n        vm.isStepNumberValid = isStepNumberValid;\n\n        vm.isFormValid = isFormValid;\n\n        //////////\n\n        /**\n         * Register the main form\n         *\n         * @param form\n         */\n        function registerMainForm(form)\n        {\n            vm.mainForm = form;\n        }\n\n        /**\n         * Register a step\n         *\n         * @param element\n         * @param scope\n         * @param form\n         */\n        function registerStep(element, scope, form)\n        {\n            var step = {\n                element   : element,\n                scope     : scope,\n                form      : form,\n                stepNumber: scope.step || (vm.steps.length + 1),\n                stepTitle : scope.stepTitle\n            };\n\n            // Push the step into steps array\n            vm.steps.push(step);\n\n            // Sort steps by stepNumber\n            vm.steps.sort(function (a, b)\n            {\n                return a.stepNumber - b.stepNumber;\n            });\n        }\n\n        /**\n         * Setup steps for the first time\n         */\n        function setupSteps()\n        {\n            vm.setCurrentStep(vm.currentStepNumber);\n        }\n\n        /**\n         * Reset steps and the main form\n         */\n        function resetForm()\n        {\n            // Timeout is required here because we need to\n            // let form model to reset before setting the\n            // statuses\n            $timeout(function ()\n            {\n                // Reset all the steps\n                for ( var x = 0; x < vm.steps.length; x++ )\n                {\n                    vm.steps[x].form.$setPristine();\n                    vm.steps[x].form.$setUntouched();\n                }\n\n                // Reset the main form\n                vm.mainForm.$setPristine();\n                vm.mainForm.$setUntouched();\n\n                // Go to first step\n                gotoFirstStep();\n            });\n        }\n\n        /**\n         * Set current step\n         *\n         * @param stepNumber\n         */\n        function setCurrentStep(stepNumber)\n        {\n            // If the stepNumber is not a valid step number, bail...\n            if ( !isStepNumberValid(stepNumber) )\n            {\n                return;\n            }\n\n            // Update the current step number\n            vm.currentStepNumber = stepNumber;\n\n            // Hide all steps\n            for ( var i = 0; i < vm.steps.length; i++ )\n            {\n                vm.steps[i].element.hide();\n            }\n\n            // Show the current step\n            vm.steps[vm.currentStepNumber - 1].element.show();\n        }\n\n        /**\n         * Go to a step\n         *\n         * @param stepNumber\n         */\n        function gotoStep(stepNumber)\n        {\n            // If the step we are about to go\n            // is hidden, bail...\n            if ( isStepHidden(stepNumber) )\n            {\n                return;\n            }\n\n            vm.setCurrentStep(stepNumber);\n        }\n\n        /**\n         * Go to the previous step\n         */\n        function gotoPreviousStep()\n        {\n            var stepNumber = vm.currentStepNumber - 1;\n\n            // Test the previous steps and make sure\n            // we will land to a one that is not hidden\n            for ( var s = stepNumber; s >= 1; s-- )\n            {\n                if ( !isStepHidden(s) )\n                {\n                    stepNumber = s;\n                    break;\n                }\n            }\n\n            vm.setCurrentStep(stepNumber);\n        }\n\n        /**\n         * Go to the next step\n         */\n        function gotoNextStep()\n        {\n            var stepNumber = vm.currentStepNumber + 1;\n\n            // Test the following steps and make sure\n            // we will land to a one that is not hidden\n            for ( var s = stepNumber; s <= vm.steps.length; s++ )\n            {\n                if ( !isStepHidden(s) )\n                {\n                    stepNumber = s;\n                    break;\n                }\n            }\n\n            vm.setCurrentStep(stepNumber);\n        }\n\n        /**\n         * Go to the first step\n         */\n        function gotoFirstStep()\n        {\n            vm.setCurrentStep(1);\n        }\n\n        /**\n         * Go to the last step\n         */\n        function gotoLastStep()\n        {\n            vm.setCurrentStep(vm.steps.length);\n        }\n\n        /**\n         * Check if the current step is the first step\n         *\n         * @returns {boolean}\n         */\n        function isFirstStep()\n        {\n            return vm.currentStepNumber === 1;\n        }\n\n        /**\n         * Check if the current step is the last step\n         *\n         * @returns {boolean}\n         */\n        function isLastStep()\n        {\n            return vm.currentStepNumber === vm.steps.length;\n        }\n\n        /**\n         * Check if the given step is the current one\n         *\n         * @param stepNumber\n         * @returns {null|boolean}\n         */\n        function isStepCurrent(stepNumber)\n        {\n            // If the stepNumber is not a valid step number, bail...\n            if ( !isStepNumberValid(stepNumber) )\n            {\n                return null;\n            }\n\n            return vm.currentStepNumber === stepNumber;\n        }\n\n        /**\n         * Check if the given step should be disabled\n         *\n         * @param stepNumber\n         * @returns {null|boolean}\n         */\n        function isStepDisabled(stepNumber)\n        {\n            // If the stepNumber is not a valid step number, bail...\n            if ( !isStepNumberValid(stepNumber) )\n            {\n                return null;\n            }\n\n            var disabled = false;\n\n            for ( var i = 1; i < stepNumber; i++ )\n            {\n                if ( !isStepValid(i) )\n                {\n                    disabled = true;\n                    break;\n                }\n            }\n\n            return disabled;\n        }\n\n        /**\n         * Check if the given step is optional\n         *\n         * @param stepNumber\n         * @returns {null|boolean}\n         */\n        function isStepOptional(stepNumber)\n        {\n            // If the stepNumber is not a valid step number, bail...\n            if ( !isStepNumberValid(stepNumber) )\n            {\n                return null;\n            }\n\n            return vm.steps[stepNumber - 1].scope.optionalStep;\n        }\n\n        /**\n         * Check if the given step is hidden\n         *\n         * @param stepNumber\n         * @returns {null|boolean}\n         */\n        function isStepHidden(stepNumber)\n        {\n            // If the stepNumber is not a valid step number, bail...\n            if ( !isStepNumberValid(stepNumber) )\n            {\n                return null;\n            }\n\n            return !!vm.steps[stepNumber - 1].scope.hideStep;\n        }\n\n        /**\n         * Check if the given step is hidden as a filter\n         *\n         * @param step\n         * @returns {boolean}\n         */\n        function filterHiddenStep(step)\n        {\n            return !isStepHidden(step.stepNumber);\n        }\n\n        /**\n         * Check if the given step is valid\n         *\n         * @param stepNumber\n         * @returns {null|boolean}\n         */\n        function isStepValid(stepNumber)\n        {\n            // If the stepNumber is not a valid step number, bail...\n            if ( !isStepNumberValid(stepNumber) )\n            {\n                return null;\n            }\n\n            // If the step is optional, always return true\n            if ( isStepOptional(stepNumber) )\n            {\n                return true;\n            }\n\n            return vm.steps[stepNumber - 1].form.$valid;\n        }\n\n        /**\n         * Check if the given step number is a valid step number\n         *\n         * @param stepNumber\n         * @returns {boolean}\n         */\n        function isStepNumberValid(stepNumber)\n        {\n            return !(angular.isUndefined(stepNumber) || stepNumber < 1 || stepNumber > vm.steps.length);\n        }\n\n        /**\n         * Check if the entire form is valid\n         *\n         * @returns {boolean}\n         */\n        function isFormValid()\n        {\n            return vm.mainForm.$valid;\n        }\n    }\n\n    /** @ngInject */\n    function msStepperDirective()\n    {\n        return {\n            restrict        : 'A',\n            require         : ['form', 'msStepper'],\n            priority        : 1001,\n            controller      : 'MsStepperController as MsStepper',\n            bindToController: {\n                model: '=ngModel'\n            },\n            transclude      : true,\n            templateUrl     : 'app/core/directives/ms-stepper/templates/horizontal/horizontal.html',\n            compile         : function (tElement)\n            {\n                tElement.addClass('ms-stepper');\n\n                return function postLink(scope, iElement, iAttrs, ctrls)\n                {\n                    var FormCtrl = ctrls[0],\n                        MsStepperCtrl = ctrls[1];\n\n                    // Register the main form and setup\n                    // the steps for the first time\n                    MsStepperCtrl.registerMainForm(FormCtrl);\n                    MsStepperCtrl.setupSteps();\n                };\n            }\n        };\n    }\n\n    /** @ngInject */\n    function msStepperStepDirective()\n    {\n        return {\n            restrict: 'E',\n            require : ['form', '^msStepper'],\n            priority: 1000,\n            scope   : {\n                step        : '=?',\n                stepTitle   : '=?',\n                optionalStep: '=?',\n                hideStep    : '=?'\n            },\n            compile : function (tElement)\n            {\n                tElement.addClass('ms-stepper-step');\n\n                return function postLink(scope, iElement, iAttrs, ctrls)\n                {\n                    var FormCtrl = ctrls[0],\n                        MsStepperCtrl = ctrls[1];\n\n                    // Is it an optional step?\n                    scope.optionalStep = angular.isDefined(iAttrs.optionalStep);\n\n                    // Register the step\n                    MsStepperCtrl.registerStep(iElement, scope, FormCtrl);\n\n                    // Hide the step by default\n                    iElement.hide();\n                };\n            }\n        };\n    }\n})();\n(function ()\n{\n    'use strict';\n\n    angular\n        .module('app.core')\n        .directive('msSplashScreen', msSplashScreenDirective);\n\n    /** @ngInject */\n    function msSplashScreenDirective($animate)\n    {\n        return {\n            restrict: 'E',\n            link    : function (scope, iElement)\n            {\n                var splashScreenRemoveEvent = scope.$on('msSplashScreen::remove', function ()\n                {\n                    $animate.leave(iElement).then(function ()\n                    {\n                        // De-register scope event\n                        splashScreenRemoveEvent();\n\n                        // Null-ify everything else\n                        scope = iElement = null;\n                    });\n                });\n            }\n        };\n    }\n})();\n(function ()\n{\n    'use strict';\n\n    angular\n        .module('app.core')\n        .directive('msSidenavHelper', msSidenavHelperDirective);\n\n    /** @ngInject */\n    function msSidenavHelperDirective()\n    {\n        return {\n            restrict: 'A',\n            require : '^mdSidenav',\n            link    : function (scope, iElement, iAttrs, MdSidenavCtrl)\n            {\n                // Watch md-sidenav open & locked open statuses\n                // and add class to the \".page-layout\" if only\n                // the sidenav open and NOT locked open\n                scope.$watch(function ()\n                {\n                    return MdSidenavCtrl.isOpen() && !MdSidenavCtrl.isLockedOpen();\n                }, function (current)\n                {\n                    if ( angular.isUndefined(current) )\n                    {\n                        return;\n                    }\n\n                    iElement.parent().toggleClass('full-height', current);\n                    angular.element('html').toggleClass('sidenav-open', current);\n                });\n            }\n        };\n    }\n})();\n(function ()\n{\n    'use strict';\n\n    angular\n        .module('app.core')\n        .controller('MsShortcutsController', MsShortcutsController)\n        .directive('msShortcuts', msShortcutsDirective);\n\n    /** @ngInject */\n    function MsShortcutsController($scope, $cookies, $document, $timeout, $q, msNavigationService)\n    {\n        var vm = this;\n\n        // Data\n        vm.query = '';\n        vm.queryOptions = {\n            debounce: 300\n        };\n        vm.resultsLoading = false;\n        vm.selectedResultIndex = 0;\n        vm.ignoreMouseEvents = false;\n\n        vm.results = null;\n        vm.shortcuts = [];\n\n        vm.sortableOptions = {\n            ghostClass   : 'ghost',\n            forceFallback: true,\n            fallbackClass: 'dragging',\n            onSort       : function ()\n            {\n                vm.saveShortcuts();\n            }\n        };\n\n        // Methods\n        vm.populateResults = populateResults;\n        vm.loadShortcuts = loadShortcuts;\n        vm.saveShortcuts = saveShortcuts;\n        vm.addShortcut = addShortcut;\n        vm.removeShortcut = removeShortcut;\n        vm.handleResultClick = handleResultClick;\n\n        vm.absorbEvent = absorbEvent;\n        vm.handleKeydown = handleKeydown;\n        vm.handleMouseenter = handleMouseenter;\n        vm.temporarilyIgnoreMouseEvents = temporarilyIgnoreMouseEvents;\n        vm.ensureSelectedResultIsVisible = ensureSelectedResultIsVisible;\n\n        //////////\n\n        init();\n\n        function init()\n        {\n            // Load the shortcuts\n            vm.loadShortcuts().then(\n                // Success\n                function (response)\n                {\n                    vm.shortcuts = response;\n\n                    // Add shortcuts as results by default\n                    if ( vm.shortcuts.length > 0 )\n                    {\n                        vm.results = response;\n                    }\n                }\n            );\n\n            // Watch the model changes to trigger the search\n            $scope.$watch('MsShortcuts.query', function (current, old)\n            {\n                if ( angular.isUndefined(current) )\n                {\n                    return;\n                }\n\n                if ( angular.equals(current, old) )\n                {\n                    return;\n                }\n\n                // Show the loader\n                vm.resultsLoading = true;\n\n                // Populate the results\n                vm.populateResults().then(\n                    // Success\n                    function (response)\n                    {\n                        vm.results = response;\n                    },\n                    // Error\n                    function ()\n                    {\n                        vm.results = [];\n                    }\n                ).finally(\n                    function ()\n                    {\n                        // Hide the loader\n                        vm.resultsLoading = false;\n                    }\n                );\n            });\n        }\n\n        /**\n         * Populate the results\n         */\n        function populateResults()\n        {\n            var results = [],\n                flatNavigation = msNavigationService.getFlatNavigation(),\n                deferred = $q.defer();\n\n            // Iterate through the navigation array and\n            // make sure it doesn't have any groups or\n            // none ui-sref items\n            for ( var x = 0; x < flatNavigation.length; x++ )\n            {\n                if ( flatNavigation[x].uisref )\n                {\n                    results.push(flatNavigation[x]);\n                }\n            }\n\n            // If there is a query, filter the results\n            if ( vm.query )\n            {\n                results = results.filter(function (item)\n                {\n                    if ( angular.lowercase(item.title).search(angular.lowercase(vm.query)) > -1 )\n                    {\n                        return true;\n                    }\n                });\n\n                // Iterate through one last time and\n                // add required properties to items\n                for ( var i = 0; i < results.length; i++ )\n                {\n                    // Add false to hasShortcut by default\n                    results[i].hasShortcut = false;\n\n                    // Test if the item is in the shortcuts list\n                    for ( var y = 0; y < vm.shortcuts.length; y++ )\n                    {\n                        if ( vm.shortcuts[y]._id === results[i]._id )\n                        {\n                            results[i].hasShortcut = true;\n                            break;\n                        }\n                    }\n                }\n            }\n            else\n            {\n                // If the query is empty, that means\n                // there is nothing to search for so\n                // we will populate the results with\n                // current shortcuts if there is any\n                if ( vm.shortcuts.length > 0 )\n                {\n                    results = vm.shortcuts;\n                }\n            }\n\n            // Reset the selected result\n            vm.selectedResultIndex = 0;\n\n            // Fake the service delay\n            $timeout(function ()\n            {\n                // Resolve the promise\n                deferred.resolve(results);\n            }, 250);\n\n            // Return a promise\n            return deferred.promise;\n        }\n\n        /**\n         * Load shortcuts\n         */\n        function loadShortcuts()\n        {\n            var deferred = $q.defer();\n\n            // For the demo purposes, we will\n            // load the shortcuts from the cookies.\n            // But here you can make an API call\n            // to load them from the DB.\n            var shortcuts = angular.fromJson($cookies.get('FUSE.shortcuts'));\n\n            // No cookie available. Generate one\n            // for the demo purposes...\n            if ( angular.isUndefined(shortcuts) )\n            {\n                shortcuts = [\n                    {\n                        'title'      : 'Sample',\n                        'icon'       : 'icon-tile-four',\n                        'state'      : 'app.sample',\n                        'weight'     : 1,\n                        'children'   : [],\n                        '_id'        : 'sample',\n                        '_path'      : 'apps.sample',\n                        'uisref'     : 'app.sample',\n                        'hasShortcut': true\n                    }\n                ];\n\n                $cookies.put('FUSE.shortcuts', angular.toJson(shortcuts));\n            }\n\n            // Resolve the promise\n            deferred.resolve(shortcuts);\n\n            return deferred.promise;\n        }\n\n        /**\n         * Save the shortcuts\n         */\n        function saveShortcuts()\n        {\n            var deferred = $q.defer();\n\n            // For the demo purposes, we will\n            // keep the shortcuts in the cookies.\n            // But here you can make an API call\n            // to save them to the DB.\n            $cookies.put('FUSE.shortcuts', angular.toJson(vm.shortcuts));\n\n            // Fake the service delay\n            $timeout(function ()\n            {\n                deferred.resolve({'success': true});\n            }, 250);\n\n            return deferred.promise;\n        }\n\n        /**\n         * Add item as shortcut\n         *\n         * @param item\n         */\n        function addShortcut(item)\n        {\n            // Update the hasShortcut status\n            item.hasShortcut = true;\n\n            // Add as a shortcut\n            vm.shortcuts.push(item);\n\n            // Save the shortcuts\n            vm.saveShortcuts();\n        }\n\n        /**\n         * Remove item from shortcuts\n         *\n         * @param item\n         */\n        function removeShortcut(item)\n        {\n            // Update the hasShortcut status\n            item.hasShortcut = false;\n\n            // Remove the shortcut\n            for ( var x = 0; x < vm.shortcuts.length; x++ )\n            {\n                if ( vm.shortcuts[x]._id === item._id )\n                {\n                    // Remove the x-th item from the array\n                    vm.shortcuts.splice(x, 1);\n\n                    // If we aren't searching for anything...\n                    if ( !vm.query )\n                    {\n                        // If all the shortcuts have been removed,\n                        // null-ify the results\n                        if ( vm.shortcuts.length === 0 )\n                        {\n                            vm.results = null;\n                        }\n                        // Otherwise update the selected index\n                        else\n                        {\n                            if ( x >= vm.shortcuts.length )\n                            {\n                                vm.selectedResultIndex = vm.shortcuts.length - 1;\n                            }\n                        }\n                    }\n                }\n            }\n\n            // Save the shortcuts\n            vm.saveShortcuts();\n        }\n\n        /**\n         * Handle the result click\n         *\n         * @param item\n         */\n        function handleResultClick(item)\n        {\n            // Add or remove the shortcut\n            if ( item.hasShortcut )\n            {\n                vm.removeShortcut(item);\n            }\n            else\n            {\n                vm.addShortcut(item);\n            }\n        }\n\n        /**\n         * Absorb the given event\n         *\n         * @param event\n         */\n        function absorbEvent(event)\n        {\n            event.preventDefault();\n        }\n\n        /**\n         * Handle keydown\n         *\n         * @param event\n         */\n        function handleKeydown(event)\n        {\n            var keyCode = event.keyCode,\n                keys = [38, 40];\n\n            // Prevent the default action if\n            // one of the keys are pressed that\n            // we are listening\n            if ( keys.indexOf(keyCode) > -1 )\n            {\n                event.preventDefault();\n            }\n\n            switch ( keyCode )\n            {\n                // Enter\n                case 13:\n\n                    // Trigger result click\n                    vm.handleResultClick(vm.results[vm.selectedResultIndex]);\n\n                    break;\n\n                // Up Arrow\n                case 38:\n\n                    // Decrease the selected result index\n                    if ( vm.selectedResultIndex - 1 >= 0 )\n                    {\n                        // Decrease the selected index\n                        vm.selectedResultIndex--;\n\n                        // Make sure the selected result is in the view\n                        vm.ensureSelectedResultIsVisible();\n                    }\n\n                    break;\n\n                // Down Arrow\n                case 40:\n\n                    // Increase the selected result index\n                    if ( vm.selectedResultIndex + 1 < vm.results.length )\n                    {\n                        // Increase the selected index\n                        vm.selectedResultIndex++;\n\n                        // Make sure the selected result is in the view\n                        vm.ensureSelectedResultIsVisible();\n                    }\n\n                    break;\n\n                default:\n                    break;\n            }\n        }\n\n        /**\n         * Handle mouseenter\n         *\n         * @param index\n         */\n        function handleMouseenter(index)\n        {\n            if ( vm.ignoreMouseEvents )\n            {\n                return;\n            }\n\n            // Update the selected result index\n            // with the given index\n            vm.selectedResultIndex = index;\n        }\n\n        /**\n         * Set a variable for a limited time\n         * to make other functions to ignore\n         * the mouse events\n         */\n        function temporarilyIgnoreMouseEvents()\n        {\n            // Set the variable\n            vm.ignoreMouseEvents = true;\n\n            // Cancel the previous timeout\n            $timeout.cancel(vm.mouseEventIgnoreTimeout);\n\n            // Set the timeout\n            vm.mouseEventIgnoreTimeout = $timeout(function ()\n            {\n                vm.ignoreMouseEvents = false;\n            }, 250);\n        }\n\n        /**\n         * Ensure the selected result will\n         * always be visible on the results\n         * area\n         */\n        function ensureSelectedResultIsVisible()\n        {\n            var resultsEl = $document.find('#ms-shortcut-add-menu').find('.results'),\n                selectedItemEl = angular.element(resultsEl.find('.result')[vm.selectedResultIndex]);\n\n            if ( resultsEl && selectedItemEl )\n            {\n                var top = selectedItemEl.position().top - 8,\n                    bottom = selectedItemEl.position().top + selectedItemEl.outerHeight() + 8;\n\n                // Start ignoring mouse events\n                vm.temporarilyIgnoreMouseEvents();\n\n                if ( resultsEl.scrollTop() > top )\n                {\n                    resultsEl.scrollTop(top);\n                }\n\n                if ( bottom > (resultsEl.height() + resultsEl.scrollTop()) )\n                {\n                    resultsEl.scrollTop(bottom - resultsEl.height());\n                }\n            }\n        }\n    }\n\n    /** @ngInject */\n    function msShortcutsDirective()\n    {\n        return {\n            restrict        : 'E',\n            scope           : {},\n            require         : 'msShortcuts',\n            controller      : 'MsShortcutsController as MsShortcuts',\n            bindToController: {},\n            templateUrl     : 'app/core/directives/ms-shortcuts/ms-shortcuts.html',\n            compile         : function (tElement)\n            {\n                // Add class\n                tElement.addClass('ms-shortcuts');\n\n                return function postLink(scope, iElement)\n                {\n                    // Data\n\n                };\n            }\n        };\n    }\n})();\n(function ()\n{\n    'use strict';\n\n    angular\n        .module('app.core')\n        .controller('MsSearchBarController', MsSearchBarController)\n        .directive('msSearchBar', msSearchBarDirective);\n\n    /** @ngInject */\n    function MsSearchBarController($scope, $element, $timeout)\n    {\n        var vm = this;\n\n        // Data\n        vm.collapsed = true;\n        vm.query = '';\n        vm.queryOptions = {\n            debounce: vm.debounce || 0\n        };\n        vm.resultsLoading = false;\n        vm.results = null;\n        vm.selectedResultIndex = 0;\n        vm.ignoreMouseEvents = false;\n\n        // Methods\n        vm.populateResults = populateResults;\n\n        vm.expand = expand;\n        vm.collapse = collapse;\n\n        vm.absorbEvent = absorbEvent;\n        vm.handleKeydown = handleKeydown;\n        vm.handleMouseenter = handleMouseenter;\n        vm.temporarilyIgnoreMouseEvents = temporarilyIgnoreMouseEvents;\n        vm.handleResultClick = handleResultClick;\n        vm.ensureSelectedResultIsVisible = ensureSelectedResultIsVisible;\n\n        //////////\n\n        init();\n\n        function init()\n        {\n            // Watch the model changes to trigger the search\n            $scope.$watch('MsSearchBar.query', function (current, old)\n            {\n                if ( angular.isUndefined(current) )\n                {\n                    return;\n                }\n\n                if ( angular.equals(current, old) )\n                {\n                    return;\n                }\n\n                if ( vm.collapsed )\n                {\n                    return;\n                }\n\n                // Evaluate the onSearch function to access the\n                // function itself\n                var onSearchEvaluated = $scope.$parent.$eval(vm.onSearch, {query: current}),\n                    isArray = angular.isArray(onSearchEvaluated),\n                    isPromise = (onSearchEvaluated && !!onSearchEvaluated.then);\n\n                if ( isArray )\n                {\n                    // Populate the results\n                    vm.populateResults(onSearchEvaluated);\n                }\n\n                if ( isPromise )\n                {\n                    // Show the loader\n                    vm.resultsLoading = true;\n\n                    onSearchEvaluated.then(\n                        // Success\n                        function (response)\n                        {\n                            // Populate the results\n                            vm.populateResults(response);\n                        },\n                        // Error\n                        function ()\n                        {\n                            // Assign an empty array to show\n                            // the no-results screen\n                            vm.populateResults([]);\n                        }\n                    ).finally(function ()\n                        {\n                            // Hide the loader\n                            vm.resultsLoading = false;\n                        }\n                    );\n                }\n            });\n        }\n\n        /**\n         * Populate the results\n         *\n         * @param results\n         */\n        function populateResults(results)\n        {\n            // Before doing anything,\n            // make sure the search bar is expanded\n            if ( vm.collapsed )\n            {\n                return;\n            }\n\n            var isArray = angular.isArray(results),\n                isNull = results === null;\n\n            // Only accept arrays and null values\n            if ( !isArray && !isNull )\n            {\n                return;\n            }\n\n            // Reset the selected result\n            vm.selectedResultIndex = 0;\n\n            // Populate the results\n            vm.results = results;\n        }\n\n        /**\n         * Expand\n         */\n        function expand()\n        {\n            // Set collapsed status\n            vm.collapsed = false;\n\n            // Call expand on scope\n            $scope.expand();\n\n            // Callback\n            if ( vm.onExpand && angular.isFunction(vm.onExpand) )\n            {\n                vm.onExpand();\n            }\n        }\n\n        /**\n         * Collapse\n         */\n        function collapse()\n        {\n            // Empty the query\n            vm.query = '';\n\n            // Empty results to hide the results view\n            vm.populateResults(null);\n\n            // Set collapsed status\n            vm.collapsed = true;\n\n            // Call collapse on scope\n            $scope.collapse();\n\n            // Callback\n            if ( vm.onCollapse && angular.isFunction(vm.onCollapse) )\n            {\n                vm.onCollapse();\n            }\n        }\n\n        /**\n         * Absorb the given event\n         *\n         * @param event\n         */\n        function absorbEvent(event)\n        {\n            event.preventDefault();\n        }\n\n        /**\n         * Handle keydown\n         *\n         * @param event\n         */\n        function handleKeydown(event)\n        {\n            var keyCode = event.keyCode,\n                keys = [27, 38, 40];\n\n            // Prevent the default action if\n            // one of the keys are pressed that\n            // we are listening\n            if ( keys.indexOf(keyCode) > -1 )\n            {\n                event.preventDefault();\n            }\n\n            switch ( keyCode )\n            {\n                // Enter\n                case 13:\n\n                    // Trigger result click\n                    vm.handleResultClick(vm.results[vm.selectedResultIndex]);\n\n                    break;\n\n                // Escape\n                case 27:\n\n                    // Collapse the search bar\n                    vm.collapse();\n\n                    break;\n\n                // Up Arrow\n                case 38:\n\n                    // Decrease the selected result index\n                    if ( vm.selectedResultIndex - 1 >= 0 )\n                    {\n                        // Decrease the selected index\n                        vm.selectedResultIndex--;\n\n                        // Make sure the selected result is in the view\n                        vm.ensureSelectedResultIsVisible();\n                    }\n\n                    break;\n\n                // Down Arrow\n                case 40:\n\n                    if ( !vm.results )\n                    {\n                        return;\n                    }\n\n                    // Increase the selected result index\n                    if ( vm.selectedResultIndex + 1 < vm.results.length )\n                    {\n                        // Increase the selected index\n                        vm.selectedResultIndex++;\n\n                        // Make sure the selected result is in the view\n                        vm.ensureSelectedResultIsVisible();\n                    }\n\n                    break;\n\n                default:\n                    break;\n            }\n        }\n\n        /**\n         * Handle mouseenter\n         *\n         * @param index\n         */\n        function handleMouseenter(index)\n        {\n            if ( vm.ignoreMouseEvents )\n            {\n                return;\n            }\n\n            // Update the selected result index\n            // with the given index\n            vm.selectedResultIndex = index;\n        }\n\n        /**\n         * Set a variable for a limited time\n         * to make other functions to ignore\n         * the mouse events\n         */\n        function temporarilyIgnoreMouseEvents()\n        {\n            // Set the variable\n            vm.ignoreMouseEvents = true;\n\n            // Cancel the previous timeout\n            $timeout.cancel(vm.mouseEventIgnoreTimeout);\n\n            // Set the timeout\n            vm.mouseEventIgnoreTimeout = $timeout(function ()\n            {\n                vm.ignoreMouseEvents = false;\n            }, 250);\n        }\n\n        /**\n         * Handle the result click\n         *\n         * @param item\n         */\n        function handleResultClick(item)\n        {\n            if ( vm.onResultClick )\n            {\n                vm.onResultClick({item: item});\n            }\n\n            // Collapse the search bar\n            vm.collapse();\n        }\n\n        /**\n         * Ensure the selected result will\n         * always be visible on the results\n         * area\n         */\n        function ensureSelectedResultIsVisible()\n        {\n            var resultsEl = $element.find('.ms-search-bar-results'),\n                selectedItemEl = angular.element(resultsEl.find('.result')[vm.selectedResultIndex]);\n\n            if ( resultsEl && selectedItemEl )\n            {\n                var top = selectedItemEl.position().top - 8,\n                    bottom = selectedItemEl.position().top + selectedItemEl.outerHeight() + 8;\n\n                // Start ignoring mouse events\n                vm.temporarilyIgnoreMouseEvents();\n\n                if ( resultsEl.scrollTop() > top )\n                {\n                    resultsEl.scrollTop(top);\n                }\n\n                if ( bottom > (resultsEl.height() + resultsEl.scrollTop()) )\n                {\n                    resultsEl.scrollTop(bottom - resultsEl.height());\n                }\n            }\n        }\n    }\n\n    /** @ngInject */\n    function msSearchBarDirective($document)\n    {\n        return {\n            restrict        : 'E',\n            scope           : {},\n            require         : 'msSearchBar',\n            controller      : 'MsSearchBarController as MsSearchBar',\n            bindToController: {\n                debounce     : '=?',\n                onSearch     : '@',\n                onResultClick: '&?',\n                onExpand     : '&?',\n                onCollapse   : '&?'\n            },\n            templateUrl     : 'app/core/directives/ms-search-bar/ms-search-bar.html',\n            compile         : function (tElement)\n            {\n                // Add class\n                tElement.addClass('ms-search-bar');\n\n                return function postLink(scope, iElement)\n                {\n                    // Data\n                    var inputEl,\n                        bodyEl = $document.find('body');\n\n                    // Methods\n                    scope.collapse = collapse;\n                    scope.expand = expand;\n\n                    //////////\n\n                    // Initialize\n                    init();\n\n                    /**\n                     * Initialize\n                     */\n                    function init()\n                    {\n                        // Grab the input element\n                        inputEl = iElement.find('#ms-search-bar-input');\n                    }\n\n                    /**\n                     * Expand action\n                     */\n                    function expand()\n                    {\n                        // Add expanded class\n                        iElement.addClass('expanded');\n\n                        // Add helper class to the body\n                        bodyEl.addClass('ms-search-bar-expanded');\n\n                        // Focus on the input\n                        inputEl.focus();\n                    }\n\n                    /**\n                     * Collapse action\n                     */\n                    function collapse()\n                    {\n                        // Remove expanded class\n                        iElement.removeClass('expanded');\n\n                        // Remove helper class from the body\n                        bodyEl.removeClass('ms-search-bar-expanded');\n                    }\n                };\n            }\n        };\n    }\n})();\n(function ()\n{\n    'use strict';\n\n    angular\n        .module('app.core')\n        .provider('msScrollConfig', msScrollConfigProvider)\n        .directive('msScroll', msScrollDirective);\n\n    /** @ngInject */\n    function msScrollConfigProvider()\n    {\n        // Default configuration\n        var defaultConfiguration = {\n            wheelSpeed            : 1,\n            wheelPropagation      : false,\n            swipePropagation      : true,\n            minScrollbarLength    : null,\n            maxScrollbarLength    : null,\n            useBothWheelAxes      : false,\n            useKeyboard           : true,\n            suppressScrollX       : false,\n            suppressScrollY       : false,\n            scrollXMarginOffset   : 0,\n            scrollYMarginOffset   : 0,\n            stopPropagationOnClick: true\n        };\n\n        // Methods\n        this.config = config;\n\n        //////////\n\n        /**\n         * Extend default configuration with the given one\n         *\n         * @param configuration\n         */\n        function config(configuration)\n        {\n            defaultConfiguration = angular.extend({}, defaultConfiguration, configuration);\n        }\n\n        /**\n         * Service\n         */\n        this.$get = function ()\n        {\n            var service = {\n                getConfig: getConfig\n            };\n\n            return service;\n\n            //////////\n\n            /**\n             * Return the config\n             */\n            function getConfig()\n            {\n                return defaultConfiguration;\n            }\n        };\n    }\n\n    /** @ngInject */\n    function msScrollDirective($timeout, msScrollConfig, msUtils, fuseConfig)\n    {\n        return {\n            restrict: 'AE',\n            compile : function (tElement)\n            {\n                // Do not replace scrollbars if\n                // 'disableCustomScrollbars' config enabled\n                if ( fuseConfig.getConfig('disableCustomScrollbars') )\n                {\n                    return;\n                }\n\n                // Do not replace scrollbars on mobile devices\n                // if 'disableCustomScrollbarsOnMobile' config enabled\n                if ( fuseConfig.getConfig('disableCustomScrollbarsOnMobile') && msUtils.isMobile() )\n                {\n                    return;\n                }\n\n                // Add class\n                tElement.addClass('ms-scroll');\n\n                return function postLink(scope, iElement, iAttrs)\n                {\n                    var options = {};\n\n                    // If options supplied, evaluate the given\n                    // value. This is because we don't want to\n                    // have an isolated scope but still be able\n                    // to use scope variables.\n                    // We don't want an isolated scope because\n                    // we should be able to use this everywhere\n                    // especially with other directives\n                    if ( iAttrs.msScroll )\n                    {\n                        options = scope.$eval(iAttrs.msScroll);\n                    }\n\n                    // Extend the given config with the ones from provider\n                    options = angular.extend({}, msScrollConfig.getConfig(), options);\n\n                    // Initialize the scrollbar\n                    $timeout(function ()\n                    {\n                        PerfectScrollbar.initialize(iElement[0], options);\n                    }, 0);\n\n                    // Update the scrollbar on element mouseenter\n                    iElement.on('mouseenter', updateScrollbar);\n\n                    // Watch scrollHeight and update\n                    // the scrollbar if it changes\n                    scope.$watch(function ()\n                    {\n                        return iElement.prop('scrollHeight');\n                    }, function (current, old)\n                    {\n                        if ( angular.isUndefined(current) || angular.equals(current, old) )\n                        {\n                            return;\n                        }\n\n                        updateScrollbar();\n                    });\n\n                    // Watch scrollWidth and update\n                    // the scrollbar if it changes\n                    scope.$watch(function ()\n                    {\n                        return iElement.prop('scrollWidth');\n                    }, function (current, old)\n                    {\n                        if ( angular.isUndefined(current) || angular.equals(current, old) )\n                        {\n                            return;\n                        }\n\n                        updateScrollbar();\n                    });\n\n                    /**\n                     * Update the scrollbar\n                     */\n                    function updateScrollbar()\n                    {\n                        PerfectScrollbar.update(iElement[0]);\n                    }\n\n                    // Cleanup on destroy\n                    scope.$on('$destroy', function ()\n                    {\n                        iElement.off('mouseenter');\n                        PerfectScrollbar.destroy(iElement[0]);\n                    });\n                };\n            }\n        };\n    }\n})();\n(function ()\n{\n    'use strict';\n\n    angular\n        .module('app.core')\n        .directive('msResponsiveTable', msResponsiveTableDirective);\n\n    /** @ngInject */\n    function msResponsiveTableDirective()\n    {\n        return {\n            restrict: 'A',\n            link    : function (scope, iElement)\n            {\n                // Wrap the table\n                var wrapper = angular.element('<div class=\"ms-responsive-table-wrapper\"></div>');\n                iElement.after(wrapper);\n                wrapper.append(iElement);\n\n                //////////\n            }\n        };\n    }\n})();\n(function ()\n{\n    'use strict';\n\n    angular\n        .module('app.core')\n        .directive('msRandomClass', msRandomClassDirective);\n\n    /** @ngInject */\n    function msRandomClassDirective()\n    {\n        return {\n            restrict: 'A',\n            scope   : {\n                msRandomClass: '='\n            },\n            link    : function (scope, iElement)\n            {\n                var randomClass = scope.msRandomClass[Math.floor(Math.random() * (scope.msRandomClass.length))];\n                iElement.addClass(randomClass);\n            }\n        };\n    }\n})();\n(function ()\n{\n    'use strict';\n\n    angular\n        .module('app.core')\n        .provider('msNavigationService', msNavigationServiceProvider)\n        .controller('MsNavigationController', MsNavigationController)\n        // Vertical\n        .directive('msNavigation', msNavigationDirective)\n        .controller('MsNavigationNodeController', MsNavigationNodeController)\n        .directive('msNavigationNode', msNavigationNodeDirective)\n        .directive('msNavigationItem', msNavigationItemDirective)\n        //Horizontal\n        .directive('msNavigationHorizontal', msNavigationHorizontalDirective)\n        .controller('MsNavigationHorizontalNodeController', MsNavigationHorizontalNodeController)\n        .directive('msNavigationHorizontalNode', msNavigationHorizontalNodeDirective)\n        .directive('msNavigationHorizontalItem', msNavigationHorizontalItemDirective);\n\n    /** @ngInject */\n    function msNavigationServiceProvider()\n    {\n        // Inject $log service\n        var $log = angular.injector(['ng']).get('$log');\n\n        // Navigation array\n        var navigation = [];\n\n        var service = this;\n\n        // Methods\n        service.saveItem = saveItem;\n        service.deleteItem = deleteItem;\n        service.sortByWeight = sortByWeight;\n\n        //////////\n\n        /**\n         * Create or update the navigation item\n         *\n         * @param path\n         * @param item\n         */\n        function saveItem(path, item)\n        {\n            if ( !angular.isString(path) )\n            {\n                $log.error('path must be a string (eg. `dashboard.project`)');\n                return;\n            }\n\n            var parts = path.split('.');\n\n            // Generate the object id from the parts\n            var id = parts[parts.length - 1];\n\n            // Get the parent item from the parts\n            var parent = _findOrCreateParent(parts);\n\n            // Decide if we are going to update or create\n            var updateItem = false;\n\n            for ( var i = 0; i < parent.length; i++ )\n            {\n                if ( parent[i]._id === id )\n                {\n                    updateItem = parent[i];\n\n                    break;\n                }\n            }\n\n            // Update\n            if ( updateItem )\n            {\n                angular.extend(updateItem, item);\n\n                // Add proper ui-sref\n                updateItem.uisref = _getUiSref(updateItem);\n            }\n            // Create\n            else\n            {\n                // Create an empty children array in the item\n                item.children = [];\n\n                // Add the default weight if not provided or if it's not a number\n                if ( angular.isUndefined(item.weight) || !angular.isNumber(item.weight) )\n                {\n                    item.weight = 1;\n                }\n\n                // Add the item id\n                item._id = id;\n\n                // Add the item path\n                item._path = path;\n\n                // Add proper ui-sref\n                item.uisref = _getUiSref(item);\n\n                // Push the item into the array\n                parent.push(item);\n            }\n        }\n\n        /**\n         * Delete navigation item\n         *\n         * @param path\n         */\n        function deleteItem(path)\n        {\n            if ( !angular.isString(path) )\n            {\n                $log.error('path must be a string (eg. `dashboard.project`)');\n                return;\n            }\n\n            // Locate the item by using given path\n            var item = navigation,\n                parts = path.split('.');\n\n            for ( var p = 0; p < parts.length; p++ )\n            {\n                var id = parts[p];\n\n                for ( var i = 0; i < item.length; i++ )\n                {\n                    if ( item[i]._id === id )\n                    {\n                        // If we have a matching path,\n                        // we have found our object:\n                        // remove it.\n                        if ( item[i]._path === path )\n                        {\n                            item.splice(i, 1);\n                            return true;\n                        }\n\n                        // Otherwise grab the children of\n                        // the current item and continue\n                        item = item[i].children;\n                        break;\n                    }\n                }\n            }\n\n            return false;\n        }\n\n        /**\n         * Sort the navigation items by their weights\n         *\n         * @param parent\n         */\n        function sortByWeight(parent)\n        {\n            // If parent not provided, sort the root items\n            if ( !parent )\n            {\n                parent = navigation;\n                parent.sort(_byWeight);\n            }\n\n            // Sort the children\n            for ( var i = 0; i < parent.length; i++ )\n            {\n                var children = parent[i].children;\n\n                if ( children.length > 1 )\n                {\n                    children.sort(_byWeight);\n                }\n\n                if ( children.length > 0 )\n                {\n                    sortByWeight(children);\n                }\n            }\n        }\n\n        /* ----------------- */\n        /* Private Functions */\n        /* ----------------- */\n\n        /**\n         * Find or create parent\n         *\n         * @param parts\n         * @returns {Array|Boolean}\n         * @private\n         */\n        function _findOrCreateParent(parts)\n        {\n            // Store the main navigation\n            var parent = navigation;\n\n            // If it's going to be a root item\n            // return the navigation itself\n            if ( parts.length === 1 )\n            {\n                return parent;\n            }\n\n            // Remove the last element from the parts as\n            // we don't need that to figure out the parent\n            parts.pop();\n\n            // Find and return the parent\n            for ( var i = 0; i < parts.length; i++ )\n            {\n                var _id = parts[i],\n                    createParent = true;\n\n                for ( var p = 0; p < parent.length; p++ )\n                {\n                    if ( parent[p]._id === _id )\n                    {\n                        parent = parent[p].children;\n                        createParent = false;\n\n                        break;\n                    }\n                }\n\n                // If there is no parent found, create one, push\n                // it into the current parent and assign it as a\n                // new parent\n                if ( createParent )\n                {\n                    var item = {\n                        _id     : _id,\n                        _path   : parts.join('.'),\n                        title   : _id,\n                        weight  : 1,\n                        children: []\n                    };\n\n                    parent.push(item);\n                    parent = item.children;\n                }\n            }\n\n            return parent;\n        }\n\n        /**\n         * Sort by weight\n         *\n         * @param x\n         * @param y\n         * @returns {number}\n         * @private\n         */\n        function _byWeight(x, y)\n        {\n            return parseInt(x.weight) - parseInt(y.weight);\n        }\n\n        /**\n         * Setup the ui-sref using state & state parameters\n         *\n         * @param item\n         * @returns {string}\n         * @private\n         */\n        function _getUiSref(item)\n        {\n            var uisref = '';\n\n            if ( angular.isDefined(item.state) )\n            {\n                uisref = item.state;\n\n                if ( angular.isDefined(item.stateParams) && angular.isObject(item.stateParams) )\n                {\n                    uisref = uisref + '(' + angular.toJson(item.stateParams) + ')';\n                }\n            }\n\n            return uisref;\n        }\n\n        /* ----------------- */\n        /* Service           */\n        /* ----------------- */\n\n        this.$get = function ()\n        {\n            var activeItem = null,\n                navigationScope = null,\n                folded = null,\n                foldedOpen = null,\n                _flatNavigation = [];\n\n            var service = {\n                saveItem          : saveItem,\n                deleteItem        : deleteItem,\n                sort              : sortByWeight,\n                clearNavigation   : clearNavigation,\n                setActiveItem     : setActiveItem,\n                getActiveItem     : getActiveItem,\n                getNavigation     : getNavigation,\n                getFlatNavigation : getFlatNavigation,\n                setNavigationScope: setNavigationScope,\n                setFolded         : setFolded,\n                getFolded         : getFolded,\n                setFoldedOpen     : setFoldedOpen,\n                getFoldedOpen     : getFoldedOpen,\n                toggleFolded      : toggleFolded\n            };\n\n            return service;\n\n            //////////\n\n            /**\n             * Clear the entire navigation\n             */\n            function clearNavigation()\n            {\n                // Clear the navigation array\n                navigation = [];\n\n                // Clear the vm.navigation from main controller\n                if ( navigationScope )\n                {\n                    navigationScope.vm.navigation = [];\n                }\n            }\n\n            /**\n             * Set active item\n             *\n             * @param node\n             * @param scope\n             */\n            function setActiveItem(node, scope)\n            {\n                activeItem = {\n                    node : node,\n                    scope: scope\n                };\n            }\n\n            /**\n             * Return active item\n             */\n            function getActiveItem()\n            {\n                return activeItem;\n            }\n\n            /**\n             * Return navigation array\n             *\n             * @param root\n             * @returns Array\n             */\n            function getNavigation(root)\n            {\n                if ( root )\n                {\n                    for ( var i = 0; i < navigation.length; i++ )\n                    {\n                        if ( navigation[i]._id === root )\n                        {\n                            return [navigation[i]];\n                        }\n                    }\n\n                    return null;\n                }\n\n                return navigation;\n            }\n\n            /**\n             * Return flat navigation array\n             *\n             * @param root\n             * @returns Array\n             */\n            function getFlatNavigation(root)\n            {\n                // Get the correct navigation array\n                var navigation = getNavigation(root);\n\n                // Flatten the navigation object\n                return _flattenNavigation(navigation);\n            }\n\n            /**\n             * Store navigation's scope for later use\n             *\n             * @param scope\n             */\n            function setNavigationScope(scope)\n            {\n                navigationScope = scope;\n            }\n\n            /**\n             * Set folded status\n             *\n             * @param status\n             */\n            function setFolded(status)\n            {\n                folded = status;\n            }\n\n            /**\n             * Return folded status\n             *\n             * @returns {*}\n             */\n            function getFolded()\n            {\n                return folded;\n            }\n\n            /**\n             * Set folded open status\n             *\n             * @param status\n             */\n            function setFoldedOpen(status)\n            {\n                foldedOpen = status;\n            }\n\n            /**\n             * Return folded open status\n             *\n             * @returns {*}\n             */\n            function getFoldedOpen()\n            {\n                return foldedOpen;\n            }\n\n\n            /**\n             * Toggle fold on stored navigation's scope\n             */\n            function toggleFolded()\n            {\n                navigationScope.toggleFolded();\n            }\n\n            /**\n             * Flatten the given navigation\n             *\n             * @param navigation\n             * @private\n             */\n            function _flattenNavigation(navigation)\n            {\n                var flatNav = [];\n\n                for ( var x = 0; x < navigation.length; x++ )\n                {\n                    // Copy and clear the children of the\n                    // navigation that we want to push\n                    var navToPush = angular.copy(navigation[x]);\n                    navToPush.children = [];\n\n                    // Push the item\n                    flatNav.push(navToPush);\n\n                    // If there are child items in this navigation,\n                    // do some nested function magic\n                    if ( navigation[x].children.length > 0 )\n                    {\n                        flatNav = flatNav.concat(_flattenNavigation(navigation[x].children));\n                    }\n                }\n\n                return flatNav;\n            }\n        };\n    }\n\n    /** @ngInject */\n    function MsNavigationController($scope, msNavigationService)\n    {\n        var vm = this;\n\n        // Data\n        if ( $scope.root )\n        {\n            vm.navigation = msNavigationService.getNavigation($scope.root);\n        }\n        else\n        {\n            vm.navigation = msNavigationService.getNavigation();\n        }\n\n        // Methods\n        vm.toggleHorizontalMobileMenu = toggleHorizontalMobileMenu;\n\n        //////////\n\n        init();\n\n        /**\n         * Initialize\n         */\n        function init()\n        {\n            // Sort the navigation before doing anything else\n            msNavigationService.sort();\n        }\n\n        /**\n         * Toggle horizontal mobile menu\n         */\n        function toggleHorizontalMobileMenu()\n        {\n            angular.element('body').toggleClass('ms-navigation-horizontal-mobile-menu-active');\n        }\n    }\n\n    /** @ngInject */\n    function msNavigationDirective($rootScope, $timeout, $mdSidenav, msNavigationService)\n    {\n        return {\n            restrict   : 'E',\n            scope      : {\n                folded: '=',\n                root  : '@'\n            },\n            controller : 'MsNavigationController as vm',\n            templateUrl: 'app/core/directives/ms-navigation/templates/vertical.html',\n            transclude : true,\n            compile    : function (tElement)\n            {\n                tElement.addClass('ms-navigation');\n\n                return function postLink(scope, iElement)\n                {\n                    var bodyEl = angular.element('body'),\n                        foldExpanderEl = angular.element('<div id=\"ms-navigation-fold-expander\"></div>'),\n                        foldCollapserEl = angular.element('<div id=\"ms-navigation-fold-collapser\"></div>'),\n                        sidenav = $mdSidenav('navigation');\n\n                    // Store the navigation in the service for public access\n                    msNavigationService.setNavigationScope(scope);\n\n                    // Initialize\n                    init();\n\n                    /**\n                     * Initialize\n                     */\n                    function init()\n                    {\n                        // Set the folded status for the first time.\n                        // First, we have to check if we have a folded\n                        // status available in the service already. This\n                        // will prevent navigation to act weird if we already\n                        // set the fold status, remove the navigation and\n                        // then re-initialize it, which happens if we\n                        // change to a view without a navigation and then\n                        // come back with history.back() function.\n\n                        // If the service didn't initialize before, set\n                        // the folded status from scope, otherwise we\n                        // won't touch anything because the folded status\n                        // already set in the service...\n                        if ( msNavigationService.getFolded() === null )\n                        {\n                            msNavigationService.setFolded(scope.folded);\n                        }\n\n                        if ( msNavigationService.getFolded() )\n                        {\n                            // Collapse everything.\n                            // This must be inside a $timeout because by the\n                            // time we call this, the 'msNavigation::collapse'\n                            // event listener is not registered yet. $timeout\n                            // will ensure that it will be called after it is\n                            // registered.\n                            $timeout(function ()\n                            {\n                                $rootScope.$broadcast('msNavigation::collapse');\n                            });\n\n                            // Add class to the body\n                            bodyEl.addClass('ms-navigation-folded');\n\n                            // Set fold expander\n                            setFoldExpander();\n                        }\n                    }\n\n                    // Sidenav locked open status watcher\n                    scope.$watch(function ()\n                    {\n                        return sidenav.isLockedOpen();\n                    }, function (current, old)\n                    {\n                        if ( angular.isUndefined(current) || angular.equals(current, old) )\n                        {\n                            return;\n                        }\n\n                        var folded = msNavigationService.getFolded();\n\n                        if ( folded )\n                        {\n                            if ( current )\n                            {\n                                // Collapse everything\n                                $rootScope.$broadcast('msNavigation::collapse');\n                            }\n                            else\n                            {\n                                // Expand the active one and its parents\n                                var activeItem = msNavigationService.getActiveItem();\n                                if ( activeItem )\n                                {\n                                    activeItem.scope.$emit('msNavigation::stateMatched');\n                                }\n                            }\n                        }\n                    });\n\n                    // Folded status watcher\n                    scope.$watch('folded', function (current, old)\n                    {\n                        if ( angular.isUndefined(current) || angular.equals(current, old) )\n                        {\n                            return;\n                        }\n\n                        setFolded(current);\n                    });\n\n                    /**\n                     * Set folded status\n                     *\n                     * @param folded\n                     */\n                    function setFolded(folded)\n                    {\n                        // Store folded status on the service for global access\n                        msNavigationService.setFolded(folded);\n\n                        if ( folded )\n                        {\n                            // Collapse everything\n                            $rootScope.$broadcast('msNavigation::collapse');\n\n                            // Add class to the body\n                            bodyEl.addClass('ms-navigation-folded');\n\n                            // Set fold expander\n                            setFoldExpander();\n                        }\n                        else\n                        {\n                            // Expand the active one and its parents\n                            var activeItem = msNavigationService.getActiveItem();\n                            if ( activeItem )\n                            {\n                                activeItem.scope.$emit('msNavigation::stateMatched');\n                            }\n\n                            // Remove body class\n                            bodyEl.removeClass('ms-navigation-folded ms-navigation-folded-open');\n\n                            // Remove fold collapser\n                            removeFoldCollapser();\n                        }\n                    }\n\n                    /**\n                     * Set fold expander\n                     */\n                    function setFoldExpander()\n                    {\n                        iElement.parent().append(foldExpanderEl);\n\n                        // Let everything settle for a moment\n                        // before registering the event listener\n                        $timeout(function ()\n                        {\n                            foldExpanderEl.on('mouseenter touchstart', onFoldExpanderHover);\n                        });\n                    }\n\n                    /**\n                     * Set fold collapser\n                     */\n                    function setFoldCollapser()\n                    {\n                        bodyEl.find('#main').append(foldCollapserEl);\n                        foldCollapserEl.on('mouseenter touchstart', onFoldCollapserHover);\n                    }\n\n                    /**\n                     * Remove fold collapser\n                     */\n                    function removeFoldCollapser()\n                    {\n                        foldCollapserEl.remove();\n                    }\n\n                    /**\n                     * onHover event of foldExpander\n                     */\n                    function onFoldExpanderHover(event)\n                    {\n                        if ( event )\n                        {\n                            event.preventDefault();\n                        }\n\n                        // Set folded open status\n                        msNavigationService.setFoldedOpen(true);\n\n                        // Expand the active one and its parents\n                        var activeItem = msNavigationService.getActiveItem();\n                        if ( activeItem )\n                        {\n                            activeItem.scope.$emit('msNavigation::stateMatched');\n                        }\n\n                        // Add class to the body\n                        bodyEl.addClass('ms-navigation-folded-open');\n\n                        // Remove the fold opener\n                        foldExpanderEl.remove();\n\n                        // Set fold collapser\n                        setFoldCollapser();\n                    }\n\n                    /**\n                     * onHover event of foldCollapser\n                     */\n                    function onFoldCollapserHover(event)\n                    {\n                        if ( event )\n                        {\n                            event.preventDefault();\n                        }\n\n                        // Set folded open status\n                        msNavigationService.setFoldedOpen(false);\n\n                        // Collapse everything\n                        $rootScope.$broadcast('msNavigation::collapse');\n\n                        // Remove body class\n                        bodyEl.removeClass('ms-navigation-folded-open');\n\n                        // Remove the fold collapser\n                        foldCollapserEl.remove();\n\n                        // Set fold expander\n                        setFoldExpander();\n                    }\n\n                    /**\n                     * Public access for toggling folded status externally\n                     */\n                    scope.toggleFolded = function ()\n                    {\n                        var folded = msNavigationService.getFolded();\n\n                        setFolded(!folded);\n                    };\n\n                    /**\n                     * On $stateChangeStart\n                     */\n                    scope.$on('$stateChangeStart', function ()\n                    {\n                        // Close the sidenav\n                        sidenav.close();\n                    });\n\n                    // Cleanup\n                    scope.$on('$destroy', function ()\n                    {\n                        foldCollapserEl.off('mouseenter touchstart');\n                        foldExpanderEl.off('mouseenter touchstart');\n                    });\n                };\n            }\n        };\n    }\n\n    /** @ngInject */\n    function MsNavigationNodeController($scope, $element, $rootScope, $animate, $state, msNavigationService)\n    {\n        var vm = this;\n\n        // Data\n        vm.element = $element;\n        vm.node = $scope.node;\n        vm.hasChildren = undefined;\n        vm.collapsed = undefined;\n        vm.collapsable = undefined;\n        vm.group = undefined;\n        vm.animateHeightClass = 'animate-height';\n\n        // Methods\n        vm.toggleCollapsed = toggleCollapsed;\n        vm.collapse = collapse;\n        vm.expand = expand;\n        vm.getClass = getClass;\n        vm.isHidden = isHidden;\n\n        //////////\n\n        init();\n\n        /**\n         * Initialize\n         */\n        function init()\n        {\n            // Setup the initial values\n\n            // Has children?\n            vm.hasChildren = vm.node.children.length > 0;\n\n            // Is group?\n            vm.group = !!(angular.isDefined(vm.node.group) && vm.node.group === true);\n\n            // Is collapsable?\n            if ( !vm.hasChildren || vm.group )\n            {\n                vm.collapsable = false;\n            }\n            else\n            {\n                vm.collapsable = !!(angular.isUndefined(vm.node.collapsable) || typeof vm.node.collapsable !== 'boolean' || vm.node.collapsable === true);\n            }\n\n            // Is collapsed?\n            if ( !vm.collapsable )\n            {\n                vm.collapsed = false;\n            }\n            else\n            {\n                vm.collapsed = !!(angular.isUndefined(vm.node.collapsed) || typeof vm.node.collapsed !== 'boolean' || vm.node.collapsed === true);\n            }\n\n            // Expand all parents if we have a matching state or\n            // the current state is a child of the node's state\n            if ( vm.node.state === $state.current.name || $state.includes(vm.node.state) )\n            {\n                // If state params are defined, make sure they are\n                // equal, otherwise do not set the active item\n                if ( angular.isDefined(vm.node.stateParams) && angular.isDefined($state.params) && !angular.equals(vm.node.stateParams, $state.params) )\n                {\n                    return;\n                }\n\n                $scope.$emit('msNavigation::stateMatched');\n\n                // Also store the current active menu item\n                msNavigationService.setActiveItem(vm.node, $scope);\n            }\n\n            $scope.$on('msNavigation::stateMatched', function ()\n            {\n                // Expand if the current scope is collapsable and is collapsed\n                if ( vm.collapsable && vm.collapsed )\n                {\n                    $scope.$evalAsync(function ()\n                    {\n                        vm.collapsed = false;\n                    });\n                }\n            });\n\n            // Listen for collapse event\n            $scope.$on('msNavigation::collapse', function (event, path)\n            {\n                if ( vm.collapsed || !vm.collapsable )\n                {\n                    return;\n                }\n\n                // If there is no path defined, collapse\n                if ( angular.isUndefined(path) )\n                {\n                    vm.collapse();\n                }\n                // If there is a path defined, do not collapse\n                // the items that are inside that path. This will\n                // prevent parent items from collapsing\n                else\n                {\n                    var givenPathParts = path.split('.'),\n                        activePathParts = [];\n\n                    var activeItem = msNavigationService.getActiveItem();\n                    if ( activeItem )\n                    {\n                        activePathParts = activeItem.node._path.split('.');\n                    }\n\n                    // Test for given path\n                    if ( givenPathParts.indexOf(vm.node._id) > -1 )\n                    {\n                        return;\n                    }\n\n                    // Test for active path\n                    if ( activePathParts.indexOf(vm.node._id) > -1 )\n                    {\n                        return;\n                    }\n\n                    vm.collapse();\n                }\n            });\n\n            // Listen for $stateChangeSuccess event\n            $scope.$on('$stateChangeSuccess', function ()\n            {\n                if ( vm.node.state === $state.current.name )\n                {\n                    // If state params are defined, make sure they are\n                    // equal, otherwise do not set the active item\n                    if ( angular.isDefined(vm.node.stateParams) && angular.isDefined($state.params) && !angular.equals(vm.node.stateParams, $state.params) )\n                    {\n                        return;\n                    }\n\n                    // Update active item on state change\n                    msNavigationService.setActiveItem(vm.node, $scope);\n\n                    // Collapse everything except the one we're using\n                    $rootScope.$broadcast('msNavigation::collapse', vm.node._path);\n                }\n\n                // Expand the parents if we the current\n                // state is a child of the node's state\n                if ( $state.includes(vm.node.state) )\n                {\n                    // If state params are defined, make sure they are\n                    // equal, otherwise do not set the active item\n                    if ( angular.isDefined(vm.node.stateParams) && angular.isDefined($state.params) && !angular.equals(vm.node.stateParams, $state.params) )\n                    {\n                        return;\n                    }\n\n                    // Emit the stateMatched\n                    $scope.$emit('msNavigation::stateMatched');\n                }\n            });\n        }\n\n        /**\n         * Toggle collapsed\n         */\n        function toggleCollapsed()\n        {\n            if ( vm.collapsed )\n            {\n                vm.expand();\n            }\n            else\n            {\n                vm.collapse();\n            }\n        }\n\n        /**\n         * Collapse\n         */\n        function collapse()\n        {\n            // Grab the element that we are going to collapse\n            var collapseEl = vm.element.children('ul');\n\n            // Grab the height\n            var height = collapseEl[0].offsetHeight;\n\n            $scope.$evalAsync(function ()\n            {\n                // Set collapsed status\n                vm.collapsed = true;\n\n                // Add collapsing class to the node\n                vm.element.addClass('collapsing');\n\n                // Animate the height\n                $animate.animate(collapseEl,\n                    {\n                        'display': 'block',\n                        'height' : height + 'px'\n                    },\n                    {\n                        'height': '0px'\n                    },\n                    vm.animateHeightClass\n                ).then(\n                    function ()\n                    {\n                        // Clear the inline styles after animation done\n                        collapseEl.css({\n                            'display': '',\n                            'height' : ''\n                        });\n\n                        // Clear collapsing class from the node\n                        vm.element.removeClass('collapsing');\n                    }\n                );\n\n                // Broadcast the collapse event so child items can also be collapsed\n                $scope.$broadcast('msNavigation::collapse');\n            });\n        }\n\n        /**\n         * Expand\n         */\n        function expand()\n        {\n            // Grab the element that we are going to expand\n            var expandEl = vm.element.children('ul');\n\n            // Move the element out of the dom flow and\n            // make it block so we can get its height\n            expandEl.css({\n                'position'  : 'absolute',\n                'visibility': 'hidden',\n                'display'   : 'block',\n                'height'    : 'auto'\n            });\n\n            // Grab the height\n            var height = expandEl[0].offsetHeight;\n\n            // Reset the style modifications\n            expandEl.css({\n                'position'  : '',\n                'visibility': '',\n                'display'   : '',\n                'height'    : ''\n            });\n\n            $scope.$evalAsync(function ()\n            {\n                // Set collapsed status\n                vm.collapsed = false;\n\n                // Add expanding class to the node\n                vm.element.addClass('expanding');\n\n                // Animate the height\n                $animate.animate(expandEl,\n                    {\n                        'display': 'block',\n                        'height' : '0px'\n                    },\n                    {\n                        'height': height + 'px'\n                    },\n                    vm.animateHeightClass\n                ).then(\n                    function ()\n                    {\n                        // Clear the inline styles after animation done\n                        expandEl.css({\n                            'height': ''\n                        });\n\n                        // Clear expanding class from the node\n                        vm.element.removeClass('expanding');\n                    }\n                );\n\n                // If item expanded, broadcast the collapse event from rootScope so that the other expanded items\n                // can be collapsed. This is necessary for keeping only one parent expanded at any time\n                $rootScope.$broadcast('msNavigation::collapse', vm.node._path);\n            });\n        }\n\n        /**\n         * Return the class\n         *\n         * @returns {*}\n         */\n        function getClass()\n        {\n            return vm.node.class;\n        }\n\n        /**\n         * Check if node should be hidden\n         *\n         * @returns {boolean}\n         */\n        function isHidden()\n        {\n            if ( angular.isDefined(vm.node.hidden) && angular.isFunction(vm.node.hidden) )\n            {\n                return vm.node.hidden();\n            }\n\n            return false;\n        }\n    }\n\n    /** @ngInject */\n    function msNavigationNodeDirective()\n    {\n        return {\n            restrict        : 'A',\n            bindToController: {\n                node: '=msNavigationNode'\n            },\n            controller      : 'MsNavigationNodeController as vm',\n            compile         : function (tElement)\n            {\n                tElement.addClass('ms-navigation-node');\n\n                return function postLink(scope, iElement, iAttrs, MsNavigationNodeCtrl)\n                {\n                    // Add custom classes\n                    iElement.addClass(MsNavigationNodeCtrl.getClass());\n\n                    // Add group class if it's a group\n                    if ( MsNavigationNodeCtrl.group )\n                    {\n                        iElement.addClass('group');\n                    }\n                };\n            }\n        };\n    }\n\n    /** @ngInject */\n    function msNavigationItemDirective()\n    {\n        return {\n            restrict: 'A',\n            require : '^msNavigationNode',\n            compile : function (tElement)\n            {\n                tElement.addClass('ms-navigation-item');\n\n                return function postLink(scope, iElement, iAttrs, MsNavigationNodeCtrl)\n                {\n                    // If the item is collapsable...\n                    if ( MsNavigationNodeCtrl.collapsable )\n                    {\n                        iElement.on('click', MsNavigationNodeCtrl.toggleCollapsed);\n                    }\n\n                    // Cleanup\n                    scope.$on('$destroy', function ()\n                    {\n                        iElement.off('click');\n                    });\n                };\n            }\n        };\n    }\n\n    /** @ngInject */\n    function msNavigationHorizontalDirective(msNavigationService)\n    {\n        return {\n            restrict   : 'E',\n            scope      : {\n                root: '@'\n            },\n            controller : 'MsNavigationController as vm',\n            templateUrl: 'app/core/directives/ms-navigation/templates/horizontal.html',\n            transclude : true,\n            compile    : function (tElement)\n            {\n                tElement.addClass('ms-navigation-horizontal');\n\n                return function postLink(scope)\n                {\n                    // Store the navigation in the service for public access\n                    msNavigationService.setNavigationScope(scope);\n                };\n            }\n        };\n    }\n\n    /** @ngInject */\n    function MsNavigationHorizontalNodeController($scope, $element, $rootScope, $state, msNavigationService)\n    {\n        var vm = this;\n\n        // Data\n        vm.element = $element;\n        vm.node = $scope.node;\n        vm.hasChildren = undefined;\n        vm.group = undefined;\n\n        // Methods\n        vm.getClass = getClass;\n\n        //////////\n\n        init();\n\n        /**\n         * Initialize\n         */\n        function init()\n        {\n            // Setup the initial values\n\n            // Is active\n            vm.isActive = false;\n\n            // Has children?\n            vm.hasChildren = vm.node.children.length > 0;\n\n            // Is group?\n            vm.group = !!(angular.isDefined(vm.node.group) && vm.node.group === true);\n\n            // Mark all parents as active if we have a matching state\n            // or the current state is a child of the node's state\n            if ( vm.node.state === $state.current.name || $state.includes(vm.node.state) )\n            {\n                // If state params are defined, make sure they are\n                // equal, otherwise do not set the active item\n                if ( angular.isDefined(vm.node.stateParams) && angular.isDefined($state.params) && !angular.equals(vm.node.stateParams, $state.params) )\n                {\n                    return;\n                }\n\n                $scope.$emit('msNavigation::stateMatched');\n\n                // Also store the current active menu item\n                msNavigationService.setActiveItem(vm.node, $scope);\n            }\n\n            $scope.$on('msNavigation::stateMatched', function ()\n            {\n                // Mark as active if has children\n                if ( vm.hasChildren )\n                {\n                    $scope.$evalAsync(function ()\n                    {\n                        vm.isActive = true;\n                    });\n                }\n            });\n\n            // Listen for clearActive event\n            $scope.$on('msNavigation::clearActive', function ()\n            {\n                if ( !vm.hasChildren )\n                {\n                    return;\n                }\n\n                var activePathParts = [];\n\n                var activeItem = msNavigationService.getActiveItem();\n                if ( activeItem )\n                {\n                    activePathParts = activeItem.node._path.split('.');\n                }\n\n                // Test for active path\n                if ( activePathParts.indexOf(vm.node._id) > -1 )\n                {\n                    $scope.$evalAsync(function ()\n                    {\n                        vm.isActive = true;\n                    });\n                }\n                else\n                {\n                    $scope.$evalAsync(function ()\n                    {\n                        vm.isActive = false;\n                    });\n                }\n\n            });\n\n            // Listen for $stateChangeSuccess event\n            $scope.$on('$stateChangeSuccess', function ()\n            {\n                if ( vm.node.state === $state.current.name || $state.includes(vm.node.state) )\n                {\n                    // If state params are defined, make sure they are\n                    // equal, otherwise do not set the active item\n                    if ( angular.isDefined(vm.node.stateParams) && angular.isDefined($state.params) && !angular.equals(vm.node.stateParams, $state.params) )\n                    {\n                        return;\n                    }\n\n                    // Update active item on state change\n                    msNavigationService.setActiveItem(vm.node, $scope);\n\n                    // Clear all active states except the one we're using\n                    $rootScope.$broadcast('msNavigation::clearActive');\n                }\n            });\n        }\n\n        /**\n         * Return the class\n         *\n         * @returns {*}\n         */\n        function getClass()\n        {\n            return vm.node.class;\n        }\n    }\n\n    /** @ngInject */\n    function msNavigationHorizontalNodeDirective()\n    {\n        return {\n            restrict        : 'A',\n            bindToController: {\n                node: '=msNavigationHorizontalNode'\n            },\n            controller      : 'MsNavigationHorizontalNodeController as vm',\n            compile         : function (tElement)\n            {\n                tElement.addClass('ms-navigation-horizontal-node');\n\n                return function postLink(scope, iElement, iAttrs, MsNavigationHorizontalNodeCtrl)\n                {\n                    // Add custom classes\n                    iElement.addClass(MsNavigationHorizontalNodeCtrl.getClass());\n\n                    // Add group class if it's a group\n                    if ( MsNavigationHorizontalNodeCtrl.group )\n                    {\n                        iElement.addClass('group');\n                    }\n                };\n            }\n        };\n    }\n\n    /** @ngInject */\n    function msNavigationHorizontalItemDirective($mdMedia)\n    {\n        return {\n            restrict: 'A',\n            require : '^msNavigationHorizontalNode',\n            compile : function (tElement)\n            {\n                tElement.addClass('ms-navigation-horizontal-item');\n\n                return function postLink(scope, iElement, iAttrs, MsNavigationHorizontalNodeCtrl)\n                {\n                    iElement.on('click', onClick);\n\n                    function onClick()\n                    {\n                        if ( !MsNavigationHorizontalNodeCtrl.hasChildren || $mdMedia('gt-md') )\n                        {\n                            return;\n                        }\n\n                        iElement.toggleClass('expanded');\n                    }\n\n                    // Cleanup\n                    scope.$on('$destroy', function ()\n                    {\n                        iElement.off('click');\n                    });\n                };\n            }\n        };\n    }\n\n})();\n(function ()\n{\n    'use strict';\n\n    angular\n        .module('app.core')\n        .factory('msNavFoldService', msNavFoldService)\n        .directive('msNavIsFolded', msNavIsFoldedDirective)\n        .controller('MsNavController', MsNavController)\n        .directive('msNav', msNavDirective)\n        .directive('msNavTitle', msNavTitleDirective)\n        .directive('msNavButton', msNavButtonDirective)\n        .directive('msNavToggle', msNavToggleDirective);\n\n    /** @ngInject */\n    function msNavFoldService()\n    {\n        var foldable = {};\n\n        var service = {\n            setFoldable    : setFoldable,\n            isNavFoldedOpen: isNavFoldedOpen,\n            toggleFold     : toggleFold,\n            openFolded     : openFolded,\n            closeFolded    : closeFolded\n        };\n\n        return service;\n\n        //////////\n\n        /**\n         * Set the foldable\n         *\n         * @param scope\n         * @param element\n         */\n        function setFoldable(scope, element)\n        {\n            foldable = {\n                'scope'  : scope,\n                'element': element\n            };\n        }\n\n        /**\n         * Is folded open\n         */\n        function isNavFoldedOpen()\n        {\n            return foldable.scope.isNavFoldedOpen();\n        }\n\n        /**\n         * Toggle fold\n         */\n        function toggleFold()\n        {\n            foldable.scope.toggleFold();\n        }\n\n        /**\n         * Open folded navigation\n         */\n        function openFolded()\n        {\n            foldable.scope.openFolded();\n        }\n\n        /**\n         * Close folded navigation\n         */\n        function closeFolded()\n        {\n            foldable.scope.closeFolded();\n        }\n    }\n\n    /** @ngInject */\n    function msNavIsFoldedDirective($document, $rootScope, msNavFoldService)\n    {\n        return {\n            restrict: 'A',\n            link    : function (scope, iElement, iAttrs)\n            {\n                var isFolded = (iAttrs.msNavIsFolded === 'true'),\n                    isFoldedOpen = false,\n                    body = angular.element($document[0].body),\n                    openOverlay = angular.element('<div id=\"ms-nav-fold-open-overlay\"></div>'),\n                    closeOverlay = angular.element('<div id=\"ms-nav-fold-close-overlay\"></div>'),\n                    sidenavEl = iElement.parent();\n\n                // Initialize the service\n                msNavFoldService.setFoldable(scope, iElement, isFolded);\n\n                // Set the fold status for the first time\n                if ( isFolded )\n                {\n                    fold();\n                }\n                else\n                {\n                    unfold();\n                }\n\n                /**\n                 * Is nav folded open\n                 */\n                function isNavFoldedOpen()\n                {\n                    return isFoldedOpen;\n                }\n\n                /**\n                 * Toggle fold\n                 */\n                function toggleFold()\n                {\n                    isFolded = !isFolded;\n\n                    if ( isFolded )\n                    {\n                        fold();\n                    }\n                    else\n                    {\n                        unfold();\n                    }\n                }\n\n                /**\n                 * Fold the navigation\n                 */\n                function fold()\n                {\n                    // Add classes\n                    body.addClass('ms-nav-folded');\n\n                    // Collapse everything and scroll to the top\n                    $rootScope.$broadcast('msNav::forceCollapse');\n                    iElement.scrollTop(0);\n\n                    // Append the openOverlay to the element\n                    sidenavEl.append(openOverlay);\n\n                    // Event listeners\n                    openOverlay.on('mouseenter touchstart', function (event)\n                    {\n                        openFolded(event);\n                        isFoldedOpen = true;\n                    });\n                }\n\n                /**\n                 * Open folded navigation\n                 */\n                function openFolded(event)\n                {\n                    if ( angular.isDefined(event) )\n                    {\n                        event.preventDefault();\n                    }\n\n                    body.addClass('ms-nav-folded-open');\n\n                    // Update the location\n                    $rootScope.$broadcast('msNav::expandMatchingToggles');\n\n                    // Remove open overlay\n                    sidenavEl.find(openOverlay).remove();\n\n                    // Append close overlay and bind its events\n                    sidenavEl.parent().append(closeOverlay);\n                    closeOverlay.on('mouseenter touchstart', function (event)\n                    {\n                        closeFolded(event);\n                        isFoldedOpen = false;\n                    });\n                }\n\n                /**\n                 * Close folded navigation\n                 */\n                function closeFolded(event)\n                {\n                    if ( angular.isDefined(event) )\n                    {\n                        event.preventDefault();\n                    }\n\n                    // Collapse everything and scroll to the top\n                    $rootScope.$broadcast('msNav::forceCollapse');\n                    iElement.scrollTop(0);\n\n                    body.removeClass('ms-nav-folded-open');\n\n                    // Remove close overlay\n                    sidenavEl.parent().find(closeOverlay).remove();\n\n                    // Append open overlay and bind its events\n                    sidenavEl.append(openOverlay);\n                    openOverlay.on('mouseenter touchstart', function (event)\n                    {\n                        openFolded(event);\n                        isFoldedOpen = true;\n                    });\n                }\n\n                /**\n                 * Unfold the navigation\n                 */\n                function unfold()\n                {\n                    body.removeClass('ms-nav-folded ms-nav-folded-open');\n\n                    // Update the location\n                    $rootScope.$broadcast('msNav::expandMatchingToggles');\n\n                    iElement.off('mouseenter mouseleave');\n                }\n\n                // Expose functions to the scope\n                scope.toggleFold = toggleFold;\n                scope.openFolded = openFolded;\n                scope.closeFolded = closeFolded;\n                scope.isNavFoldedOpen = isNavFoldedOpen;\n\n                // Cleanup\n                scope.$on('$destroy', function ()\n                {\n                    openOverlay.off('mouseenter touchstart');\n                    closeOverlay.off('mouseenter touchstart');\n                    iElement.off('mouseenter mouseleave');\n                });\n            }\n        };\n    }\n\n\n    /** @ngInject */\n    function MsNavController()\n    {\n        var vm = this,\n            disabled = false,\n            toggleItems = [],\n            lockedItems = [];\n\n        // Data\n\n        // Methods\n        vm.isDisabled = isDisabled;\n        vm.enable = enable;\n        vm.disable = disable;\n        vm.setToggleItem = setToggleItem;\n        vm.getLockedItems = getLockedItems;\n        vm.setLockedItem = setLockedItem;\n        vm.clearLockedItems = clearLockedItems;\n\n        //////////\n\n        /**\n         * Is navigation disabled\n         *\n         * @returns {boolean}\n         */\n        function isDisabled()\n        {\n            return disabled;\n        }\n\n        /**\n         * Disable the navigation\n         */\n        function disable()\n        {\n            disabled = true;\n        }\n\n        /**\n         * Enable the navigation\n         */\n        function enable()\n        {\n            disabled = false;\n        }\n\n        /**\n         * Set toggle item\n         *\n         * @param element\n         * @param scope\n         */\n        function setToggleItem(element, scope)\n        {\n            toggleItems.push({\n                'element': element,\n                'scope'  : scope\n            });\n        }\n\n        /**\n         * Get locked items\n         *\n         * @returns {Array}\n         */\n        function getLockedItems()\n        {\n            return lockedItems;\n        }\n\n        /**\n         * Set locked item\n         *\n         * @param element\n         * @param scope\n         */\n        function setLockedItem(element, scope)\n        {\n            lockedItems.push({\n                'element': element,\n                'scope'  : scope\n            });\n        }\n\n        /**\n         * Clear locked items list\n         */\n        function clearLockedItems()\n        {\n            lockedItems = [];\n        }\n    }\n\n    /** @ngInject */\n    function msNavDirective($rootScope, $mdComponentRegistry, msNavFoldService)\n    {\n        return {\n            restrict  : 'E',\n            scope     : {},\n            controller: 'MsNavController',\n            compile   : function (tElement)\n            {\n                tElement.addClass('ms-nav');\n\n                return function postLink(scope)\n                {\n                    // Update toggle status according to the ui-router current state\n                    $rootScope.$broadcast('msNav::expandMatchingToggles');\n\n                    // Update toggles on state changes\n                    var stateChangeSuccessEvent = $rootScope.$on('$stateChangeSuccess', function ()\n                    {\n                        $rootScope.$broadcast('msNav::expandMatchingToggles');\n\n                        // Close navigation sidenav on stateChangeSuccess\n                        $mdComponentRegistry.when('navigation').then(function (navigation)\n                        {\n                            navigation.close();\n\n                            if ( msNavFoldService.isNavFoldedOpen() )\n                            {\n                                msNavFoldService.closeFolded();\n                            }\n                        });\n                    });\n\n                    // Cleanup\n                    scope.$on('$destroy', function ()\n                    {\n                        stateChangeSuccessEvent();\n                    })\n                };\n            }\n        };\n    }\n\n    /** @ngInject */\n    function msNavTitleDirective()\n    {\n        return {\n            restrict: 'A',\n            compile : function (tElement)\n            {\n                tElement.addClass('ms-nav-title');\n\n                return function postLink()\n                {\n\n                };\n            }\n        };\n    }\n\n    /** @ngInject */\n    function msNavButtonDirective()\n    {\n        return {\n            restrict: 'AE',\n            compile : function (tElement)\n            {\n                tElement.addClass('ms-nav-button');\n\n                return function postLink()\n                {\n\n                };\n            }\n        };\n    }\n\n    /** @ngInject */\n    function msNavToggleDirective($rootScope, $q, $animate, $state)\n    {\n        return {\n            restrict: 'A',\n            require : '^msNav',\n            scope   : true,\n            compile : function (tElement, tAttrs)\n            {\n                tElement.addClass('ms-nav-toggle');\n\n                // Add collapsed attr\n                if ( angular.isUndefined(tAttrs.collapsed) )\n                {\n                    tAttrs.collapsed = true;\n                }\n\n                tElement.attr('collapsed', tAttrs.collapsed);\n\n                return function postLink(scope, iElement, iAttrs, MsNavCtrl)\n                {\n                    var classes = {\n                        expanded         : 'expanded',\n                        expandAnimation  : 'expand-animation',\n                        collapseAnimation: 'collapse-animation'\n                    };\n\n                    // Store all related states\n                    var links = iElement.find('a');\n                    var states = [];\n                    var regExp = /\\(.*\\)/g;\n\n                    angular.forEach(links, function (link)\n                    {\n                        var state = angular.element(link).attr('ui-sref');\n\n                        if ( angular.isUndefined(state) )\n                        {\n                            return;\n                        }\n\n                        // Remove any parameter definition from the state name before storing it\n                        state = state.replace(regExp, '');\n\n                        states.push(state);\n                    });\n\n                    // Store toggle-able element and its scope in the main nav controller\n                    MsNavCtrl.setToggleItem(iElement, scope);\n\n                    // Click handler\n                    iElement.children('.ms-nav-button').on('click', toggle);\n\n                    // Toggle function\n                    function toggle()\n                    {\n                        // If navigation is disabled, do nothing...\n                        if ( MsNavCtrl.isDisabled() )\n                        {\n                            return;\n                        }\n\n                        // Disable the entire navigation to prevent spamming\n                        MsNavCtrl.disable();\n\n                        if ( isCollapsed() )\n                        {\n                            // Clear the locked items list\n                            MsNavCtrl.clearLockedItems();\n\n                            // Emit pushToLockedList event\n                            scope.$emit('msNav::pushToLockedList');\n\n                            // Collapse everything but locked items\n                            $rootScope.$broadcast('msNav::collapse');\n\n                            // Expand and then...\n                            expand().then(function ()\n                            {\n                                // Enable the entire navigation after animations completed\n                                MsNavCtrl.enable();\n                            });\n                        }\n                        else\n                        {\n                            // Collapse with all children\n                            scope.$broadcast('msNav::forceCollapse');\n                        }\n                    }\n\n                    // Cleanup\n                    scope.$on('$destroy', function ()\n                    {\n                        iElement.children('.ms-nav-button').off('click');\n                    });\n\n                    /*---------------------*/\n                    /* Scope Events        */\n                    /*---------------------*/\n\n                    /**\n                     * Collapse everything but locked items\n                     */\n                    scope.$on('msNav::collapse', function ()\n                    {\n                        // Only collapse toggles that are not locked\n                        var lockedItems = MsNavCtrl.getLockedItems();\n                        var locked = false;\n\n                        angular.forEach(lockedItems, function (lockedItem)\n                        {\n                            if ( angular.equals(lockedItem.scope, scope) )\n                            {\n                                locked = true;\n                            }\n                        });\n\n                        if ( locked )\n                        {\n                            return;\n                        }\n\n                        // Collapse and then...\n                        collapse().then(function ()\n                        {\n                            // Enable the entire navigation after animations completed\n                            MsNavCtrl.enable();\n                        });\n                    });\n\n                    /**\n                     * Collapse everything\n                     */\n                    scope.$on('msNav::forceCollapse', function ()\n                    {\n                        // Collapse and then...\n                        collapse().then(function ()\n                        {\n                            // Enable the entire navigation after animations completed\n                            MsNavCtrl.enable();\n                        });\n                    });\n\n                    /**\n                     * Expand toggles that match with the current states\n                     */\n                    scope.$on('msNav::expandMatchingToggles', function ()\n                    {\n                        var currentState = $state.current.name;\n                        var shouldExpand = false;\n\n                        angular.forEach(states, function (state)\n                        {\n                            if ( currentState === state )\n                            {\n                                shouldExpand = true;\n                            }\n                        });\n\n                        if ( shouldExpand )\n                        {\n                            expand();\n                        }\n                        else\n                        {\n                            collapse();\n                        }\n                    });\n\n                    /**\n                     * Add toggle to the locked list\n                     */\n                    scope.$on('msNav::pushToLockedList', function ()\n                    {\n                        // Set expanded item on main nav controller\n                        MsNavCtrl.setLockedItem(iElement, scope);\n                    });\n\n                    /*---------------------*/\n                    /* Internal functions  */\n                    /*---------------------*/\n\n                    /**\n                     * Is element collapsed\n                     *\n                     * @returns {bool}\n                     */\n                    function isCollapsed()\n                    {\n                        return iElement.attr('collapsed') === 'true';\n                    }\n\n                    /**\n                     * Is element expanded\n                     *\n                     * @returns {bool}\n                     */\n                    function isExpanded()\n                    {\n                        return !isCollapsed();\n                    }\n\n                    /**\n                     * Expand the toggle\n                     *\n                     * @returns $promise\n                     */\n                    function expand()\n                    {\n                        // Create a new deferred object\n                        var deferred = $q.defer();\n\n                        // If the menu item is already expanded, do nothing..\n                        if ( isExpanded() )\n                        {\n                            // Reject the deferred object\n                            deferred.reject({'error': true});\n\n                            // Return the promise\n                            return deferred.promise;\n                        }\n\n                        // Set element attr\n                        iElement.attr('collapsed', false);\n\n                        // Grab the element to expand\n                        var elementToExpand = angular.element(iElement.find('ms-nav-toggle-items')[0]);\n\n                        // Move the element out of the dom flow and\n                        // make it block so we can get its height\n                        elementToExpand.css({\n                            'position'  : 'absolute',\n                            'visibility': 'hidden',\n                            'display'   : 'block',\n                            'height'    : 'auto'\n                        });\n\n                        // Grab the height\n                        var height = elementToExpand[0].offsetHeight;\n\n                        // Reset the style modifications\n                        elementToExpand.css({\n                            'position'  : '',\n                            'visibility': '',\n                            'display'   : '',\n                            'height'    : ''\n                        });\n\n                        // Animate the height\n                        scope.$evalAsync(function ()\n                        {\n                            $animate.animate(elementToExpand,\n                                {\n                                    'display': 'block',\n                                    'height' : '0px'\n                                },\n                                {\n                                    'height': height + 'px'\n                                },\n                                classes.expandAnimation\n                            ).then(\n                                function ()\n                                {\n                                    // Add expanded class\n                                    elementToExpand.addClass(classes.expanded);\n\n                                    // Clear the inline styles after animation done\n                                    elementToExpand.css({'height': ''});\n\n                                    // Resolve the deferred object\n                                    deferred.resolve({'success': true});\n                                }\n                            );\n                        });\n\n                        // Return the promise\n                        return deferred.promise;\n                    }\n\n                    /**\n                     * Collapse the toggle\n                     *\n                     * @returns $promise\n                     */\n                    function collapse()\n                    {\n                        // Create a new deferred object\n                        var deferred = $q.defer();\n\n                        // If the menu item is already collapsed, do nothing..\n                        if ( isCollapsed() )\n                        {\n                            // Reject the deferred object\n                            deferred.reject({'error': true});\n\n                            // Return the promise\n                            return deferred.promise;\n                        }\n\n                        // Set element attr\n                        iElement.attr('collapsed', true);\n\n                        // Grab the element to collapse\n                        var elementToCollapse = angular.element(iElement.find('ms-nav-toggle-items')[0]);\n\n                        // Grab the height\n                        var height = elementToCollapse[0].offsetHeight;\n\n                        // Animate the height\n                        scope.$evalAsync(function ()\n                        {\n                            $animate.animate(elementToCollapse,\n                                {\n                                    'height': height + 'px'\n                                },\n                                {\n                                    'height': '0px'\n                                },\n                                classes.collapseAnimation\n                            ).then(\n                                function ()\n                                {\n                                    // Remove expanded class\n                                    elementToCollapse.removeClass(classes.expanded);\n\n                                    // Clear the inline styles after animation done\n                                    elementToCollapse.css({\n                                        'display': '',\n                                        'height' : ''\n                                    });\n\n                                    // Resolve the deferred object\n                                    deferred.resolve({'success': true});\n                                }\n                            );\n                        });\n\n                        // Return the promise\n                        return deferred.promise;\n                    }\n                };\n            }\n        };\n    }\n})();\n(function ()\n{\n    'use strict';\n\n    angular\n        .module('app.core')\n        .controller('msMaterialColorPickerController', msMaterialColorPickerController)\n        .directive('msMaterialColorPicker', msMaterialColorPicker);\n\n    /** @ngInject */\n    function msMaterialColorPickerController($scope, $mdColorPalette, $mdMenu, fuseGenerator)\n    {\n        var vm = this;\n        vm.palettes = $mdColorPalette; // Material Color Palette\n        vm.selectedPalette = false;\n        vm.selectedHues = false;\n        $scope.$selectedColor = {};\n\n        // Methods\n        vm.activateHueSelection = activateHueSelection;\n        vm.selectColor = selectColor;\n        vm.removeColor = removeColor;\n\n        /**\n         * Initialize / Watch model changes\n         */\n        $scope.$watch('ngModel', setSelectedColor);\n\n        /**\n         * Activate Hue Selection\n         * @param palette\n         * @param hues\n         */\n        function activateHueSelection(palette, hues)\n        {\n            vm.selectedPalette = palette;\n            vm.selectedHues = hues;\n        }\n\n        /**\n         * Select Color\n         * @type {selectColor}\n         */\n        function selectColor(palette, hue)\n        {\n            // Update Selected Color\n            updateSelectedColor(palette, hue);\n\n            // Update Model Value\n            updateModel();\n\n            // Hide The picker\n            $mdMenu.hide();\n        }\n\n        function removeColor()\n        {\n\n            vm.selectedColor = {\n                palette: '',\n                hue    : '',\n                class  : ''\n            };\n\n            activateHueSelection(false, false);\n\n            updateModel();\n        }\n\n        /**\n         * Set SelectedColor by model type\n         */\n        function setSelectedColor()\n        {\n\n            if ( !vm.modelCtrl.$viewValue || vm.modelCtrl.$viewValue === '' )\n            {\n                removeColor();\n                return;\n            }\n\n            var palette, hue;\n\n            // If ModelType Class\n            if ( vm.msModelType === 'class' )\n            {\n                var color = vm.modelCtrl.$viewValue.split('-');\n                if ( color.length >= 5 )\n                {\n                    palette = color[1] + '-' + color[2];\n                    hue = color[3];\n                }\n                else\n                {\n                    palette = color[1];\n                    hue = color[2];\n                }\n            }\n\n            // If ModelType Object\n            else if ( vm.msModelType === 'obj' )\n            {\n                palette = vm.modelCtrl.$viewValue.palette;\n                hue = vm.modelCtrl.$viewValue.hue || 500;\n            }\n\n            // Update Selected Color\n            updateSelectedColor(palette, hue);\n        }\n\n        /**\n         * Update Selected Color\n         * @param palette\n         * @param hue\n         */\n        function updateSelectedColor(palette, hue)\n        {\n            vm.selectedColor = {\n                palette     : palette,\n                hue         : hue,\n                class       : 'md-' + palette + '-' + hue + '-bg',\n                bgColorValue: fuseGenerator.rgba(vm.palettes[palette][hue].value),\n                fgColorValue: fuseGenerator.rgba(vm.palettes[palette][hue].contrast)\n            };\n\n            // If Model object not Equals the selectedColor update it\n            // it can be happen when the model only have pallete and hue values\n            if ( vm.msModelType === 'obj' && !angular.equals(vm.selectedColor, vm.modelCtrl.$viewValue) )\n            {\n                // Update Model Value\n                updateModel();\n            }\n\n            activateHueSelection(palette, vm.palettes[palette]);\n\n            $scope.$selectedColor = vm.selectedColor;\n        }\n\n        /**\n         * Update Model Value by model type\n         */\n        function updateModel()\n        {\n\n            if ( vm.msModelType === 'class' )\n            {\n                vm.modelCtrl.$setViewValue(vm.selectedColor.class);\n            }\n            else if ( vm.msModelType === 'obj' )\n            {\n                vm.modelCtrl.$setViewValue(vm.selectedColor);\n            }\n        }\n\n    }\n\n    /** @ngInject */\n    function msMaterialColorPicker()\n    {\n        return {\n            require    : ['msMaterialColorPicker', 'ngModel'],\n            restrict   : 'E',\n            scope      : {\n                ngModel    : '=',\n                msModelType: '@?'\n            },\n            controller : 'msMaterialColorPickerController as vm',\n            transclude : true,\n            templateUrl: 'app/core/directives/ms-material-color-picker/ms-material-color-picker.html',\n            link       : function (scope, element, attrs, controllers, transclude)\n            {\n                var ctrl = controllers[0];\n\n                /**\n                 *  Pass model controller to directive controller\n                 */\n                ctrl.modelCtrl = controllers[1];\n\n                /**\n                 * ModelType: 'obj', 'class'(default)\n                 * @type {string|string}\n                 */\n                ctrl.msModelType = scope.msModelType || 'class';\n\n                transclude(scope, function (clone)\n                {\n                    clone = clone.filter(function (i, el)\n                    {\n                        return ( el.nodeType === 1 ) ? true : false;\n                    });\n\n                    if ( clone.length )\n                    {\n                        element.find('ms-color-picker-button').replaceWith(clone);\n                    }\n                });\n\n            }\n        };\n    }\n})();\n(function ()\n{\n    'use strict';\n\n    angular\n        .module('app.core')\n        .controller('msMasonryController', msMasonryController)\n        .directive('msMasonry', msMasonry)\n        .directive('msMasonryItem', msMasonryItem);\n\n    /** @ngInject */\n    function msMasonryController($scope, $window, $mdMedia, $timeout)\n    {\n        var vm = this,\n            defaultOpts = {\n                columnCount     : 5,\n                reLayoutDebounce: 400,\n                responsive      : {\n                    md: 3,\n                    sm: 2,\n                    xs: 1\n                }\n            },\n            reLayoutTimeout = true;\n\n        vm.options = null;\n        vm.container = [];\n        vm.containerPos = '';\n        vm.columnWidth = '';\n        vm.items = [];\n\n        // Methods\n        vm.reLayout = reLayout;\n        vm.initialize = initialize;\n        vm.waitImagesLoaded = waitImagesLoaded;\n\n        function initialize()\n        {\n            vm.options = !vm.options ? defaultOpts : angular.extend(defaultOpts, vm.options);\n\n\n            watchContainerResize();\n        }\n\n        $scope.$on('msMasonry:relayout', function ()\n        {\n            reLayout();\n        });\n\n        function waitImagesLoaded(element, callback)\n        {\n            if ( typeof imagesLoaded !== 'undefined' )\n            {\n                var imgLoad = $window.imagesLoaded(element);\n\n                imgLoad.on('done', function ()\n                {\n                    callback();\n                });\n            }\n            else\n            {\n                callback();\n            }\n        }\n\n        function watchContainerResize()\n        {\n            $scope.$watch(\n                function ()\n                {\n                    return vm.container.width();\n                },\n                function (newValue, oldValue)\n                {\n                    if ( newValue !== oldValue )\n                    {\n                        reLayout();\n                    }\n                }\n            );\n        }\n\n        function reLayout()\n        {\n            // Debounce for relayout\n            if ( reLayoutTimeout )\n            {\n                $timeout.cancel(reLayoutTimeout);\n            }\n\n            reLayoutTimeout = $timeout(function ()\n            {\n                start();\n\n                $scope.$broadcast('msMasonry:relayoutFinished');\n\n            }, vm.options.reLayoutDebounce);\n\n            // Start relayout\n            function start()\n            {\n\n                vm.containerPos = vm.container[0].getBoundingClientRect();\n\n                updateColumnOptions();\n\n                $scope.$broadcast('msMasonry:relayoutStarted');\n\n                vm.items = vm.container.find('ms-masonry-item');\n\n                //initialize lastRowBottomArr\n                var referenceArr = Array.apply(null, new Array(vm.columnCount)).map(function ()\n                {\n                    return 0;\n                });\n\n                // set item positions\n                for ( var i = 0; i < vm.items.length; i++ )\n                {\n                    var item = vm.items[i],\n                        xPos, yPos;\n\n                    item = angular.element(item);\n\n                    if ( item.scope() )\n                    {\n                        item.scope().$broadcast('msMasonryItem:startReLayout');\n                    }\n\n                    item.css({'width': vm.columnWidth});\n\n                    var refTop = Math.min.apply(Math, referenceArr);\n\n                    var column = referenceArr.indexOf(refTop);\n\n                    referenceArr[column] = refTop + item[0].getBoundingClientRect().height;\n\n                    xPos = Math.round(column * vm.columnWidth);\n                    yPos = refTop;\n\n                    item.css({'transform': 'translate3d(' + xPos + 'px,' + yPos + 'px,0px)'});\n\n                    item.addClass('placed');\n\n                    if ( item.scope() )\n                    {\n                        item.scope().$broadcast('msMasonryItem:finishReLayout');\n                    }\n\n                }\n            }\n        }\n\n        function updateColumnOptions()\n        {\n            vm.columnCount = vm.options.columnCount;\n\n            if ( $mdMedia('gt-md') )\n            {\n                vm.columnCount = vm.options.columnCount;\n            }\n            else if ( $mdMedia('md') )\n            {\n                vm.columnCount = (vm.columnCount > vm.options.responsive.md ? vm.options.responsive.md : vm.columnCount);\n            }\n            else if ( $mdMedia('sm') )\n            {\n                vm.columnCount = (vm.columnCount > vm.options.responsive.sm ? vm.options.responsive.sm : vm.columnCount);\n            }\n            else\n            {\n                vm.columnCount = vm.options.responsive.xs;\n            }\n\n            vm.columnWidth = vm.containerPos.width / vm.columnCount;\n\n        }\n    }\n\n    /** @ngInject */\n    function msMasonry($timeout)\n    {\n        return {\n            restrict  : 'AEC',\n            controller: 'msMasonryController',\n            compile   : compile\n        };\n        function compile(element, attributes)\n        {\n            return {\n                pre : function preLink(scope, iElement, iAttrs, controller)\n                {\n                    controller.options = angular.fromJson(attributes.options || '{}');\n                    controller.container = element;\n                },\n                post: function postLink(scope, iElement, iAttrs, controller)\n                {\n                    $timeout(function ()\n                    {\n                        controller.initialize();\n                    });\n                }\n            };\n        }\n    }\n\n    /** @ngInject */\n    function msMasonryItem()\n    {\n        return {\n            restrict: 'AEC',\n            require : '^msMasonry',\n            priority: 1,\n            link    : link\n        };\n\n        function link(scope, element, attributes, controller)\n        {\n            controller.waitImagesLoaded(element, function ()\n            {\n                controller.reLayout();\n\n            });\n\n            scope.$on('msMasonryItem:finishReLayout', function ()\n            {\n                scope.$watch(function ()\n                {\n                    return element.height();\n                }, function (newVal, oldVal)\n                {\n                    if ( newVal !== oldVal )\n                    {\n                        controller.reLayout();\n                    }\n                });\n            });\n\n            element.on('$destroy', function ()\n            {\n                controller.reLayout();\n            });\n        }\n    }\n})();\n(function ()\n{\n    'use strict';\n\n    angular\n        .module('app.core')\n        .directive('msInfoBar', msInfoBarDirective);\n\n    /** @ngInject */\n    function msInfoBarDirective($document)\n    {\n        return {\n            restrict   : 'E',\n            scope      : {},\n            transclude : true,\n            templateUrl: 'app/core/directives/ms-info-bar/ms-info-bar.html',\n            link       : function (scope, iElement)\n            {\n                var body = $document.find('body'),\n                    bodyClass = 'ms-info-bar-active';\n\n                // Add body class\n                body.addClass(bodyClass);\n\n                /**\n                 * Remove the info bar\n                 */\n                function removeInfoBar()\n                {\n                    body.removeClass(bodyClass);\n                    iElement.remove();\n                    scope.$destroy();\n                }\n\n                // Expose functions\n                scope.removeInfoBar = removeInfoBar;\n            }\n        };\n    }\n})();\n(function ()\n{\n    'use strict';\n\n    angular\n        .module('app.core')\n        .controller('MsFormWizardController', MsFormWizardController)\n        .directive('msFormWizard', msFormWizardDirective)\n        .directive('msFormWizardForm', msFormWizardFormDirective);\n\n    /** @ngInject */\n    function MsFormWizardController()\n    {\n        var vm = this;\n\n        // Data\n        vm.forms = [];\n        vm.selectedIndex = 0;\n\n        // Methods\n        vm.registerForm = registerForm;\n\n        vm.previousStep = previousStep;\n        vm.nextStep = nextStep;\n        vm.firstStep = firstStep;\n        vm.lastStep = lastStep;\n\n        vm.totalSteps = totalSteps;\n        vm.isFirstStep = isFirstStep;\n        vm.isLastStep = isLastStep;\n\n        vm.currentStepInvalid = currentStepInvalid;\n        vm.previousStepInvalid = previousStepInvalid;\n        vm.formsIncomplete = formsIncomplete;\n        vm.resetForm = resetForm;\n\n        //////////\n\n        /**\n         * Register form\n         *\n         * @param form\n         */\n        function registerForm(form)\n        {\n            vm.forms.push(form);\n        }\n\n        /**\n         * Go to previous step\n         */\n        function previousStep()\n        {\n            if ( isFirstStep() )\n            {\n                return;\n            }\n\n            vm.selectedIndex--;\n        }\n\n        /**\n         * Go to next step\n         */\n        function nextStep()\n        {\n            if ( isLastStep() )\n            {\n                return;\n            }\n\n            vm.selectedIndex++;\n        }\n\n        /**\n         * Go to first step\n         */\n        function firstStep()\n        {\n            vm.selectedIndex = 0;\n        }\n\n        /**\n         * Go to last step\n         */\n        function lastStep()\n        {\n            vm.selectedIndex = totalSteps() - 1;\n        }\n\n        /**\n         * Return total steps\n         *\n         * @returns {int}\n         */\n        function totalSteps()\n        {\n            return vm.forms.length;\n        }\n\n        /**\n         * Is first step?\n         *\n         * @returns {boolean}\n         */\n        function isFirstStep()\n        {\n            return vm.selectedIndex === 0;\n        }\n\n        /**\n         * Is last step?\n         *\n         * @returns {boolean}\n         */\n        function isLastStep()\n        {\n            return vm.selectedIndex === totalSteps() - 1;\n        }\n\n        /**\n         * Is current step invalid?\n         *\n         * @returns {boolean}\n         */\n        function currentStepInvalid()\n        {\n            return angular.isDefined(vm.forms[vm.selectedIndex]) && vm.forms[vm.selectedIndex].$invalid;\n        }\n\n        /**\n         * Is previous step invalid?\n         *\n         * @returns {boolean}\n         */\n        function previousStepInvalid()\n        {\n            return vm.selectedIndex > 0 && angular.isDefined(vm.forms[vm.selectedIndex - 1]) && vm.forms[vm.selectedIndex - 1].$invalid;\n        }\n\n        /**\n         * Check if there is any incomplete forms\n         *\n         * @returns {boolean}\n         */\n        function formsIncomplete()\n        {\n            for ( var x = 0; x < vm.forms.length; x++ )\n            {\n                if ( vm.forms[x].$invalid )\n                {\n                    return true;\n                }\n            }\n\n            return false;\n        }\n\n        /**\n         * Reset form\n         */\n        function resetForm()\n        {\n            // Go back to the first step\n            vm.selectedIndex = 0;\n\n            // Make sure all the forms are back in the $pristine & $untouched status\n            for ( var x = 0; x < vm.forms.length; x++ )\n            {\n                vm.forms[x].$setPristine();\n                vm.forms[x].$setUntouched();\n            }\n        }\n    }\n\n    /** @ngInject */\n    function msFormWizardDirective()\n    {\n        return {\n            restrict  : 'E',\n            scope     : true,\n            controller: 'MsFormWizardController as msWizard',\n            compile   : function (tElement)\n            {\n                tElement.addClass('ms-form-wizard');\n\n                return function postLink()\n                {\n\n                };\n            }\n        }\n\n    }\n\n    /** @ngInject */\n    function msFormWizardFormDirective()\n    {\n        return {\n            restrict: 'A',\n            require : ['form', '^msFormWizard'],\n            compile : function (tElement)\n            {\n                tElement.addClass('ms-form-wizard-form');\n\n                return function postLink(scope, iElement, iAttrs, ctrls)\n                {\n                    var formCtrl = ctrls[0],\n                        MsFormWizardCtrl = ctrls[1];\n\n                    MsFormWizardCtrl.registerForm(formCtrl);\n                }\n            }\n        }\n    }\n\n})();\n(function ()\n{\n    'use strict';\n\n    angular\n        .module('app.core')\n        .provider('msDatepickerFixConfig', msDatepickerFixConfigProvider)\n        .directive('msDatepickerFix', msDatepickerFix);\n\n    /** @ngInject */\n    function msDatepickerFixConfigProvider()\n    {\n\n        // Default configuration\n        var defaultConfiguration = {\n            // To view\n            formatter: function (val)\n            {\n                if ( !val )\n                {\n                    return '';\n                }\n\n                return val === '' ? val : new Date(val);\n            },\n            // To model\n            parser   : function (val)\n            {\n                if ( !val )\n                {\n                    return '';\n                }\n                var offset = moment(val).utcOffset();\n                var date = new Date(moment(val).add(offset, 'm'));\n                return date;\n            }\n        };\n\n        // Methods\n        this.config = config;\n\n        //////////\n\n        /**\n         * Extend default configuration with the given one\n         *\n         * @param configuration\n         */\n        function config(configuration)\n        {\n            defaultConfiguration = angular.extend({}, defaultConfiguration, configuration);\n        }\n\n        /**\n         * Service\n         */\n        this.$get = function ()\n        {\n            return defaultConfiguration;\n        };\n    }\n\n    /** @ngInject */\n    function msDatepickerFix(msDatepickerFixConfig)\n    {\n        return {\n            require: 'ngModel',\n            link   : function (scope, elem, attrs, ngModel)\n            {\n                ngModel.$formatters.unshift(msDatepickerFixConfig.formatter); // to view\n                ngModel.$parsers.unshift(msDatepickerFixConfig.parser); // to model\n            }\n        };\n    }\n})();\n(function ()\n{\n    'use strict';\n\n    angular\n        .module('app.core')\n        .directive('msCard', msCardDirective);\n\n    /** @ngInject */\n    function msCardDirective()\n    {\n        return {\n            restrict: 'E',\n            scope   : {\n                templatePath: '=template',\n                card        : '=ngModel',\n                vm          : '=viewModel'\n            },\n            template: '<div class=\"ms-card-content-wrapper\" ng-include=\"templatePath\" onload=\"cardTemplateLoaded()\"></div>',\n            compile : function (tElement)\n            {\n                // Add class\n                tElement.addClass('ms-card');\n\n                return function postLink(scope, iElement)\n                {\n                    // Methods\n                    scope.cardTemplateLoaded = cardTemplateLoaded;\n\n                    //////////\n\n                    /**\n                     * Emit cardTemplateLoaded event\n                     */\n                    function cardTemplateLoaded()\n                    {\n                        scope.$emit('msCard::cardTemplateLoaded', iElement);\n                    }\n                };\n            }\n        };\n    }\n})();\n(function ()\n{\n    'use strict';\n\n    angular\n        .module('app.sample', [])\n        .config(config);\n\n    /** @ngInject */\n    function config($stateProvider, $translatePartialLoaderProvider, msApiProvider, msNavigationServiceProvider)\n    {\n        // State\n        $stateProvider\n            .state('app.sample', {\n                url    : '/sample',\n                views  : {\n                    'content@app': {\n                        templateUrl: 'app/main/sample/sample.html',\n                        controller : 'SampleController as vm'\n                    }\n                },\n                resolve: {\n                    SampleData: function (msApi)\n                    {\n                        return msApi.resolve('sample@get');\n                    }\n                }\n            });\n\n        // Translation\n        $translatePartialLoaderProvider.addPart('app/main/sample');\n\n        // Api\n        msApiProvider.register('sample', ['app/data/sample/sample.json']);\n\n        // Navigation\n        msNavigationServiceProvider.saveItem('fuse', {\n            title : 'MENU',\n            group : true,\n            weight: 1\n        });\n\n        msNavigationServiceProvider.saveItem('fuse.sample', {\n            title    : 'Sample',\n            icon     : 'icon-tile-four',\n            state    : 'app.sample',\n            /*stateParams: {\n                'param1': 'page'\n             },*/\n            translate: 'Plan',\n            weight   : 1\n        });\n    }\n})();\n(function ()\n{\n    'use strict';\n\n    angular\n        .module('app.sample')\n        .controller('SampleController', SampleController);\n\n    /** @ngInject */\n    function SampleController(SampleData)\n    {\n        var vm = this;\n\n        // Data\n        vm.helloText = SampleData.data.helloText;\n\n        // Methods\n\n        //////////\n    }\n})();\n\n(function ()\n{\n    'use strict';\n\n    angular\n        .module('app.core')\n        .provider('fuseTheming', fuseThemingProvider);\n\n    /** @ngInject */\n    function fuseThemingProvider()\n    {\n        // Inject Cookies Service\n        var $cookies;\n\n        angular.injector(['ngCookies']).invoke([\n            '$cookies', function (_$cookies)\n            {\n                $cookies = _$cookies;\n            }\n        ]);\n\n        // Inject $log service\n        var $log = angular.injector(['ng']).get('$log');\n\n        var registeredPalettes,\n            registeredThemes;\n\n        // Methods\n        this.setRegisteredPalettes = setRegisteredPalettes;\n        this.setRegisteredThemes = setRegisteredThemes;\n\n        //////////\n\n        /**\n         * Set registered palettes\n         *\n         * @param _registeredPalettes\n         */\n        function setRegisteredPalettes(_registeredPalettes)\n        {\n            registeredPalettes = _registeredPalettes;\n        }\n\n        /**\n         * Set registered themes\n         *\n         * @param _registeredThemes\n         */\n        function setRegisteredThemes(_registeredThemes)\n        {\n            registeredThemes = _registeredThemes;\n        }\n\n        /**\n         * Service\n         */\n        this.$get = function ()\n        {\n            var service = {\n                getRegisteredPalettes: getRegisteredPalettes,\n                getRegisteredThemes  : getRegisteredThemes,\n                setActiveTheme       : setActiveTheme,\n                setThemesList        : setThemesList,\n                themes               : {\n                    list  : {},\n                    active: {\n                        'name' : '',\n                        'theme': {}\n                    }\n                }\n            };\n\n            return service;\n\n            //////////\n\n            /**\n             * Get registered palettes\n             *\n             * @returns {*}\n             */\n            function getRegisteredPalettes()\n            {\n                return registeredPalettes;\n            }\n\n            /**\n             * Get registered themes\n             *\n             * @returns {*}\n             */\n            function getRegisteredThemes()\n            {\n                return registeredThemes;\n            }\n\n            /**\n             * Set active theme\n             *\n             * @param themeName\n             */\n            function setActiveTheme(themeName)\n            {\n                // If theme does not exist, fallback to the default theme\n                if ( angular.isUndefined(service.themes.list[themeName]) )\n                {\n                    // If there is no theme called \"default\"...\n                    if ( angular.isUndefined(service.themes.list.default) )\n                    {\n                        $log.error('You must have at least one theme named \"default\"');\n                        return;\n                    }\n\n                    $log.warn('The theme \"' + themeName + '\" does not exist! Falling back to the \"default\" theme.');\n\n                    // Otherwise set theme to default theme\n                    service.themes.active.name = 'default';\n                    service.themes.active.theme = service.themes.list.default;\n                    $cookies.put('selectedTheme', service.themes.active.name);\n\n                    return;\n                }\n\n                service.themes.active.name = themeName;\n                service.themes.active.theme = service.themes.list[themeName];\n                $cookies.put('selectedTheme', themeName);\n            }\n\n            /**\n             * Set available themes list\n             *\n             * @param themeList\n             */\n            function setThemesList(themeList)\n            {\n                service.themes.list = themeList;\n            }\n        };\n    }\n})();\n\n(function ()\n{\n    'use strict';\n\n    angular\n        .module('app.core')\n        .config(config);\n\n    /** @ngInject */\n    function config($mdThemingProvider, fusePalettes, fuseThemes, fuseThemingProvider)\n    {\n        // Inject Cookies Service\n        var $cookies;\n        angular.injector(['ngCookies']).invoke([\n            '$cookies', function (_$cookies)\n            {\n                $cookies = _$cookies;\n            }\n        ]);\n\n        // Check if custom theme exist in cookies\n        var customTheme = $cookies.getObject('customTheme');\n        if ( customTheme )\n        {\n            fuseThemes['custom'] = customTheme;\n        }\n\n        $mdThemingProvider.alwaysWatchTheme(true);\n\n        // Define custom palettes\n        angular.forEach(fusePalettes, function (palette)\n        {\n            $mdThemingProvider.definePalette(palette.name, palette.options);\n        });\n\n        // Register custom themes\n        angular.forEach(fuseThemes, function (theme, themeName)\n        {\n            $mdThemingProvider.theme(themeName)\n                .primaryPalette(theme.primary.name, theme.primary.hues)\n                .accentPalette(theme.accent.name, theme.accent.hues)\n                .warnPalette(theme.warn.name, theme.warn.hues)\n                .backgroundPalette(theme.background.name, theme.background.hues);\n        });\n\n        // Store generated PALETTES and THEMES objects from $mdThemingProvider\n        // in our custom provider, so we can inject them into other areas\n        fuseThemingProvider.setRegisteredPalettes($mdThemingProvider._PALETTES);\n        fuseThemingProvider.setRegisteredThemes($mdThemingProvider._THEMES);\n    }\n\n})();\n(function ()\n{\n    'use strict';\n\n    var fuseThemes = {\n        'default'  : {\n            primary   : {\n                name: 'fuse-pale-blue',\n                hues: {\n                    'default': '700',\n                    'hue-1'  : '500',\n                    'hue-2'  : '600',\n                    'hue-3'  : '400'\n                }\n            },\n            accent    : {\n                name: 'light-blue',\n                hues: {\n                    'default': '600',\n                    'hue-1'  : '400',\n                    'hue-2'  : '700',\n                    'hue-3'  : 'A100'\n                }\n            },\n            warn      : {name: 'red'},\n            background: {\n                name: 'grey',\n                hues: {\n                    'default': 'A100',\n                    'hue-1'  : '100',\n                    'hue-2'  : '50',\n                    'hue-3'  : '300'\n                }\n            }\n        },\n        'pink': {\n            primary   : {\n                name: 'blue-grey',\n                hues: {\n                    'default': '800',\n                    'hue-1'  : '600',\n                    'hue-2'  : '400',\n                    'hue-3'  : 'A100'\n                }\n            },\n            accent    : {\n                name: 'pink',\n                hues: {\n                    'default': '400',\n                    'hue-1'  : '300',\n                    'hue-2'  : '600',\n                    'hue-3'  : 'A100'\n                }\n            },\n            warn      : {name: 'blue'},\n            background: {\n                name: 'grey',\n                hues: {\n                    'default': 'A100',\n                    'hue-1'  : '100',\n                    'hue-2'  : '50',\n                    'hue-3'  : '300'\n                }\n            }\n        },\n        'teal'     : {\n            primary   : {\n                name: 'fuse-blue',\n                hues: {\n                    'default': '900',\n                    'hue-1'  : '600',\n                    'hue-2'  : '500',\n                    'hue-3'  : 'A100'\n                }\n            },\n            accent    : {\n                name: 'teal',\n                hues: {\n                    'default': '500',\n                    'hue-1'  : '400',\n                    'hue-2'  : '600',\n                    'hue-3'  : 'A100'\n                }\n            },\n            warn      : {name: 'deep-orange'},\n            background: {\n                name: 'grey',\n                hues: {\n                    'default': 'A100',\n                    'hue-1'  : '100',\n                    'hue-2'  : '50',\n                    'hue-3'  : '300'\n                }\n            }\n        }\n    };\n\n    angular\n        .module('app.core')\n        .constant('fuseThemes', fuseThemes);\n})();\n(function () {\n    'use strict';\n\n    var fusePalettes = [\n        {\n            name: 'fuse-blue',\n            options: {\n                '50': '#ebf1fa',\n                '100': '#c2d4ef',\n                '200': '#9ab8e5',\n                '300': '#78a0dc',\n                '400': '#5688d3',\n                '500': '#3470ca',\n                '600': '#2e62b1',\n                '700': '#275498',\n                '800': '#21467e',\n                '900': '#1a3865',\n                'A100': '#c2d4ef',\n                'A200': '#9ab8e5',\n                'A400': '#5688d3',\n                'A700': '#275498',\n                'contrastDefaultColor': 'light',\n                'contrastDarkColors': '50 100 200 A100',\n                'contrastStrongLightColors': '300 400'\n            }\n        },\n        {\n            name: 'fuse-pale-blue',\n            options: {\n                '50': '#ececee',\n                '100': '#c5c6cb',\n                '200': '#9ea1a9',\n                '300': '#7d818c',\n                '400': '#5c616f',\n                '500': '#3c4252',\n                '600': '#353a48',\n                '700': '#2d323e',\n                '800': '#262933',\n                '900': '#1e2129',\n                'A100': '#c5c6cb',\n                'A200': '#9ea1a9',\n                'A400': '#5c616f',\n                'A700': '#2d323e',\n                'contrastDefaultColor': 'light',\n                'contrastDarkColors': '50 100 200 A100',\n                'contrastStrongLightColors': '300 400'\n            }\n        }\n    ];\n\n    angular\n        .module('app.core')\n        .constant('fusePalettes', fusePalettes);\n})();\n(function ()\n{\n    'use strict';\n\n    angular\n        .module('app.core')\n        .factory('fuseGenerator', fuseGeneratorService);\n\n    /** @ngInject */\n    function fuseGeneratorService($cookies, $log, fuseTheming)\n    {\n        // Storage for simplified themes object\n        var themes = {};\n\n        var service = {\n            generate: generate,\n            rgba    : rgba\n        };\n\n        return service;\n\n        //////////\n\n        /**\n         * Generate less variables for each theme from theme's\n         * palette by using material color naming conventions\n         */\n        function generate()\n        {\n            var registeredThemes = fuseTheming.getRegisteredThemes();\n            var registeredPalettes = fuseTheming.getRegisteredPalettes();\n\n            // First, create a simplified object that stores\n            // all registered themes and their colors\n\n            // Iterate through registered themes\n            angular.forEach(registeredThemes, function (registeredTheme)\n            {\n                themes[registeredTheme.name] = {};\n\n                // Iterate through color types (primary, accent, warn & background)\n                angular.forEach(registeredTheme.colors, function (colorType, colorTypeName)\n                {\n                    themes[registeredTheme.name][colorTypeName] = {\n                        'name'  : colorType.name,\n                        'levels': {\n                            'default': {\n                                'color'    : rgba(registeredPalettes[colorType.name][colorType.hues.default].value),\n                                'contrast1': rgba(registeredPalettes[colorType.name][colorType.hues.default].contrast, 1),\n                                'contrast2': rgba(registeredPalettes[colorType.name][colorType.hues.default].contrast, 2),\n                                'contrast3': rgba(registeredPalettes[colorType.name][colorType.hues.default].contrast, 3),\n                                'contrast4': rgba(registeredPalettes[colorType.name][colorType.hues.default].contrast, 4)\n                            },\n                            'hue1'   : {\n                                'color'    : rgba(registeredPalettes[colorType.name][colorType.hues['hue-1']].value),\n                                'contrast1': rgba(registeredPalettes[colorType.name][colorType.hues['hue-1']].contrast, 1),\n                                'contrast2': rgba(registeredPalettes[colorType.name][colorType.hues['hue-1']].contrast, 2),\n                                'contrast3': rgba(registeredPalettes[colorType.name][colorType.hues['hue-1']].contrast, 3),\n                                'contrast4': rgba(registeredPalettes[colorType.name][colorType.hues['hue-1']].contrast, 4)\n                            },\n                            'hue2'   : {\n                                'color'    : rgba(registeredPalettes[colorType.name][colorType.hues['hue-2']].value),\n                                'contrast1': rgba(registeredPalettes[colorType.name][colorType.hues['hue-2']].contrast, 1),\n                                'contrast2': rgba(registeredPalettes[colorType.name][colorType.hues['hue-2']].contrast, 2),\n                                'contrast3': rgba(registeredPalettes[colorType.name][colorType.hues['hue-2']].contrast, 3),\n                                'contrast4': rgba(registeredPalettes[colorType.name][colorType.hues['hue-2']].contrast, 4)\n                            },\n                            'hue3'   : {\n                                'color'    : rgba(registeredPalettes[colorType.name][colorType.hues['hue-3']].value),\n                                'contrast1': rgba(registeredPalettes[colorType.name][colorType.hues['hue-3']].contrast, 1),\n                                'contrast2': rgba(registeredPalettes[colorType.name][colorType.hues['hue-3']].contrast, 2),\n                                'contrast3': rgba(registeredPalettes[colorType.name][colorType.hues['hue-3']].contrast, 3),\n                                'contrast4': rgba(registeredPalettes[colorType.name][colorType.hues['hue-3']].contrast, 4)\n                            }\n                        }\n                    };\n                });\n            });\n\n            // Process themes one more time and then store them in the service for external use\n            processAndStoreThemes(themes);\n\n            // Iterate through simplified themes\n            // object and create style variables\n            var styleVars = {};\n\n            // Iterate through registered themes\n            angular.forEach(themes, function (theme, themeName)\n            {\n                styleVars = {};\n                styleVars['@themeName'] = themeName;\n\n                // Iterate through color types (primary, accent, warn & background)\n                angular.forEach(theme, function (colorTypes, colorTypeName)\n                {\n                    // Iterate through color levels (default, hue1, hue2 & hue3)\n                    angular.forEach(colorTypes.levels, function (colors, colorLevelName)\n                    {\n                        // Iterate through color name (color, contrast1, contrast2, contrast3 & contrast4)\n                        angular.forEach(colors, function (color, colorName)\n                        {\n                            styleVars['@' + colorTypeName + ucfirst(colorLevelName) + ucfirst(colorName)] = color;\n                        });\n                    });\n                });\n\n                // Render styles\n                render(styleVars);\n            });\n        }\n\n        // ---------------------------\n        //  INTERNAL HELPER FUNCTIONS\n        // ---------------------------\n\n        /**\n         * Process and store themes for global use\n         *\n         * @param _themes\n         */\n        function processAndStoreThemes(_themes)\n        {\n            // Here we will go through every registered theme one more time\n            // and try to simplify their objects as much as possible for\n            // easier access to their properties.\n            var themes = angular.copy(_themes);\n\n            // Iterate through themes\n            angular.forEach(themes, function (theme)\n            {\n                // Iterate through color types (primary, accent, warn & background)\n                angular.forEach(theme, function (colorType, colorTypeName)\n                {\n                    theme[colorTypeName] = colorType.levels;\n                    theme[colorTypeName].color = colorType.levels.default.color;\n                    theme[colorTypeName].contrast1 = colorType.levels.default.contrast1;\n                    theme[colorTypeName].contrast2 = colorType.levels.default.contrast2;\n                    theme[colorTypeName].contrast3 = colorType.levels.default.contrast3;\n                    theme[colorTypeName].contrast4 = colorType.levels.default.contrast4;\n                    delete theme[colorTypeName].default;\n                });\n            });\n\n            // Store themes and set selected theme for the first time\n            fuseTheming.setThemesList(themes);\n\n            // Remember selected theme.\n            var selectedTheme = $cookies.get('selectedTheme');\n\n            if ( selectedTheme )\n            {\n                fuseTheming.setActiveTheme(selectedTheme);\n            }\n            else\n            {\n                fuseTheming.setActiveTheme('default');\n            }\n        }\n\n\n        /**\n         * Render css files\n         *\n         * @param styleVars\n         */\n        function render(styleVars)\n        {\n            var cssTemplate = '[md-theme=\"@themeName\"] a {\\n    color: @accentDefaultColor;\\n}\\n\\n[md-theme=\"@themeName\"] .secondary-text,\\n[md-theme=\"@themeName\"] .icon {\\n    color: @backgroundDefaultContrast2;\\n}\\n\\n[md-theme=\"@themeName\"] .hint-text,\\n[md-theme=\"@themeName\"] .disabled-text {\\n    color: @backgroundDefaultContrast3;\\n}\\n\\n[md-theme=\"@themeName\"] .fade-text,\\n[md-theme=\"@themeName\"] .divider {\\n    color: @backgroundDefaultContrast4;\\n}\\n\\n/* Primary */\\n[md-theme=\"@themeName\"] .md-primary-bg {\\n    background-color: @primaryDefaultColor;\\n    color: @primaryDefaultContrast1;\\n}\\n\\n[md-theme=\"@themeName\"] .md-primary-bg .secondary-text,\\n[md-theme=\"@themeName\"] .md-primary-bg .icon {\\n    color: @primaryDefaultContrast2;\\n}\\n\\n[md-theme=\"@themeName\"] .md-primary-bg .hint-text,\\n[md-theme=\"@themeName\"] .md-primary-bg .disabled-text {\\n    color: @primaryDefaultContrast3;\\n}\\n\\n[md-theme=\"@themeName\"] .md-primary-bg .fade-text,\\n[md-theme=\"@themeName\"] .md-primary-bg .divider {\\n    color: @primaryDefaultContrast4;\\n}\\n\\n/* Primary, Hue-1 */\\n[md-theme=\"@themeName\"] .md-primary-bg.md-hue-1 {\\n    background-color: @primaryHue1Color;\\n    color: @primaryHue1Contrast1;\\n}\\n\\n[md-theme=\"@themeName\"] .md-primary-bg.md-hue-1 .secondary-text,\\n[md-theme=\"@themeName\"] .md-primary-bg.md-hue-1 .icon {\\n    color: @primaryHue1Contrast2;\\n}\\n\\n[md-theme=\"@themeName\"] .md-primary-bg.md-hue-1 .hint-text,\\n[md-theme=\"@themeName\"] .md-primary-bg.md-hue-1 .disabled-text {\\n    color: @primaryHue1Contrast3;\\n}\\n\\n[md-theme=\"@themeName\"] .md-primary-bg.md-hue-1 .fade-text,\\n[md-theme=\"@themeName\"] .md-primary-bg.md-hue-1 .divider {\\n    color: @primaryHue1Contrast4;\\n}\\n\\n/* Primary, Hue-2 */\\n[md-theme=\"@themeName\"] .md-primary-bg.md-hue-2 {\\n    background-color: @primaryHue2Color;\\n    color: @primaryHue2Contrast1;\\n}\\n\\n[md-theme=\"@themeName\"] .md-primary-bg.md-hue-2 .secondary-text,\\n[md-theme=\"@themeName\"] .md-primary-bg.md-hue-2 .icon {\\n    color: @primaryHue2Contrast2;\\n}\\n\\n[md-theme=\"@themeName\"] .md-primary-bg.md-hue-2 .hint-text,\\n[md-theme=\"@themeName\"] .md-primary-bg.md-hue-2 .disabled-text {\\n    color: @primaryHue2Contrast3;\\n}\\n\\n[md-theme=\"@themeName\"] .md-primary-bg.md-hue-2 .fade-text,\\n[md-theme=\"@themeName\"] .md-primary-bg.md-hue-2 .divider {\\n    color: @primaryHue2Contrast4;\\n}\\n\\n/* Primary, Hue-3 */\\n[md-theme=\"@themeName\"] .md-primary-bg.md-hue-3 {\\n    background-color: @primaryHue3Color;\\n    color: @primaryHue3Contrast1;\\n}\\n\\n[md-theme=\"@themeName\"] .md-primary-bg.md-hue-3 .secondary-text,\\n[md-theme=\"@themeName\"] .md-primary-bg.md-hue-3 .icon {\\n    color: @primaryHue3Contrast1;\\n}\\n\\n[md-theme=\"@themeName\"] .md-primary-bg.md-hue-3 .hint-text,\\n[md-theme=\"@themeName\"] .md-primary-bg.md-hue-3 .disabled-text {\\n    color: @primaryHue3Contrast3;\\n}\\n\\n[md-theme=\"@themeName\"] .md-primary-bg.md-hue-3 .fade-text,\\n[md-theme=\"@themeName\"] .md-primary-bg.md-hue-3 .divider {\\n    color: @primaryHue3Contrast4;\\n}\\n\\n/* Primary foreground */\\n[md-theme=\"@themeName\"] .md-primary-fg {\\n    color: @primaryDefaultColor !important;\\n}\\n\\n/* Primary foreground, Hue-1 */\\n[md-theme=\"@themeName\"] .md-primary-fg.md-hue-1 {\\n    color: @primaryHue1Color !important;\\n}\\n\\n/* Primary foreground, Hue-2 */\\n[md-theme=\"@themeName\"] .md-primary-fg.md-hue-2 {\\n    color: @primaryHue2Color !important;\\n}\\n\\n/* Primary foreground, Hue-3 */\\n[md-theme=\"@themeName\"] .md-primary-fg.md-hue-3 {\\n    color: @primaryHue3Color !important;\\n}\\n\\n\\n/* Accent */\\n[md-theme=\"@themeName\"] .md-accent-bg {\\n    background-color: @accentDefaultColor;\\n    color: @accentDefaultContrast1;\\n}\\n\\n[md-theme=\"@themeName\"] .md-accent-bg .secondary-text,\\n[md-theme=\"@themeName\"] .md-accent-bg .icon {\\n    color: @accentDefaultContrast2;\\n}\\n\\n[md-theme=\"@themeName\"] .md-accent-bg .hint-text,\\n[md-theme=\"@themeName\"] .md-accent-bg .disabled-text {\\n    color: @accentDefaultContrast3;\\n}\\n\\n[md-theme=\"@themeName\"] .md-accent-bg .fade-text,\\n[md-theme=\"@themeName\"] .md-accent-bg .divider {\\n    color: @accentDefaultContrast4;\\n}\\n\\n/* Accent, Hue-1 */\\n[md-theme=\"@themeName\"] .md-accent-bg.md-hue-1 {\\n    background-color: @accentHue1Color;\\n    color: @accentHue1Contrast1;\\n}\\n\\n[md-theme=\"@themeName\"] .md-accent-bg.md-hue-1 .secondary-text,\\n[md-theme=\"@themeName\"] .md-accent-bg.md-hue-1 .icon {\\n    color: @accentHue1Contrast2;\\n}\\n\\n[md-theme=\"@themeName\"] .md-accent-bg.md-hue-1 .hint-text,\\n[md-theme=\"@themeName\"] .md-accent-bg.md-hue-1 .disabled-text {\\n    color: @accentHue1Contrast3;\\n}\\n\\n[md-theme=\"@themeName\"] .md-accent-bg.md-hue-1 .fade-text,\\n[md-theme=\"@themeName\"] .md-accent-bg.md-hue-1 .divider {\\n    color: @accentHue1Contrast4;\\n}\\n\\n/* Accent, Hue-2 */\\n[md-theme=\"@themeName\"] .md-accent-bg.md-hue-2 {\\n    background-color: @accentHue2Color;\\n    color: @accentHue2Contrast1;\\n}\\n\\n[md-theme=\"@themeName\"] .md-accent-bg.md-hue-2 .secondary-text,\\n[md-theme=\"@themeName\"] .md-accent-bg.md-hue-2 .icon {\\n    color: @accentHue2Contrast2;\\n}\\n\\n[md-theme=\"@themeName\"] .md-accent-bg.md-hue-2 .hint-text,\\n[md-theme=\"@themeName\"] .md-accent-bg.md-hue-2 .disabled-text {\\n    color: @accentHue2Contrast3;\\n}\\n\\n[md-theme=\"@themeName\"] .md-accent-bg.md-hue-2 .fade-text,\\n[md-theme=\"@themeName\"] .md-accent-bg.md-hue-2 .divider {\\n    color: @accentHue2Contrast4;\\n}\\n\\n/* Accent, Hue-3 */\\n[md-theme=\"@themeName\"] .md-accent-bg.md-hue-3 {\\n    background-color: @accentHue3Color;\\n    color: @accentHue3Contrast1;\\n}\\n\\n[md-theme=\"@themeName\"] .md-accent-bg.md-hue-3 .secondary-text,\\n[md-theme=\"@themeName\"] .md-accent-bg.md-hue-3 .icon {\\n    color: @accentHue3Contrast1;\\n}\\n\\n[md-theme=\"@themeName\"] .md-accent-bg.md-hue-3 .hint-text,\\n[md-theme=\"@themeName\"] .md-accent-bg.md-hue-3 .disabled-text {\\n    color: @accentHue3Contrast3;\\n}\\n\\n[md-theme=\"@themeName\"] .md-accent-bg.md-hue-3 .fade-text,\\n[md-theme=\"@themeName\"] .md-accent-bg.md-hue-3 .divider {\\n    color: @accentHue3Contrast4;\\n}\\n\\n/* Accent foreground */\\n[md-theme=\"@themeName\"] .md-accent-fg {\\n    color: @accentDefaultColor !important;\\n}\\n\\n/* Accent foreground, Hue-1 */\\n[md-theme=\"@themeName\"] .md-accent-fg.md-hue-1 {\\n    color: @accentHue1Color !important;\\n}\\n\\n/* Accent foreground, Hue-2 */\\n[md-theme=\"@themeName\"] .md-accent-fg.md-hue-2 {\\n    color: @accentHue2Color !important;\\n}\\n\\n/* Accent foreground, Hue-3 */\\n[md-theme=\"@themeName\"] .md-accent-fg.md-hue-3 {\\n    color: @accentHue3Color !important;\\n}\\n\\n\\n/* Warn */\\n[md-theme=\"@themeName\"] .md-warn-bg {\\n    background-color: @warnDefaultColor;\\n    color: @warnDefaultContrast1;\\n}\\n\\n[md-theme=\"@themeName\"] .md-warn-bg .secondary-text,\\n[md-theme=\"@themeName\"] .md-warn-bg .icon {\\n    color: @warnDefaultContrast2;\\n}\\n\\n[md-theme=\"@themeName\"] .md-warn-bg .hint-text,\\n[md-theme=\"@themeName\"] .md-warn-bg .disabled-text {\\n    color: @warnDefaultContrast3;\\n}\\n\\n[md-theme=\"@themeName\"] .md-warn-bg .fade-text,\\n[md-theme=\"@themeName\"] .md-warn-bg .divider {\\n    color: @warnDefaultContrast4;\\n}\\n\\n/* Warn, Hue-1 */\\n[md-theme=\"@themeName\"] .md-warn-bg.md-hue-1 {\\n    background-color: @warnHue1Color;\\n    color: @warnHue1Contrast1;\\n}\\n\\n[md-theme=\"@themeName\"] .md-warn-bg.md-hue-1 .secondary-text,\\n[md-theme=\"@themeName\"] .md-warn-bg.md-hue-1 .icon {\\n    color: @warnHue1Contrast2;\\n}\\n\\n[md-theme=\"@themeName\"] .md-warn-bg.md-hue-1 .hint-text,\\n[md-theme=\"@themeName\"] .md-warn-bg.md-hue-1 .disabled-text {\\n    color: @warnHue1Contrast3;\\n}\\n\\n[md-theme=\"@themeName\"] .md-warn-bg.md-hue-1 .fade-text,\\n[md-theme=\"@themeName\"] .md-warn-bg.md-hue-1 .divider {\\n    color: @warnHue1Contrast4;\\n}\\n\\n/* Warn, Hue-2 */\\n[md-theme=\"@themeName\"] .md-warn-bg.md-hue-2 {\\n    background-color: @warnHue2Color;\\n    color: @warnHue2Contrast1;\\n}\\n\\n[md-theme=\"@themeName\"] .md-warn-bg.md-hue-2 .secondary-text,\\n[md-theme=\"@themeName\"] .md-warn-bg.md-hue-2 .icon {\\n    color: @warnHue2Contrast2;\\n}\\n\\n[md-theme=\"@themeName\"] .md-warn-bg.md-hue-2 .hint-text,\\n[md-theme=\"@themeName\"] .md-warn-bg.md-hue-2 .disabled-text {\\n    color: @warnHue2Contrast3;\\n}\\n\\n[md-theme=\"@themeName\"] .md-warn-bg.md-hue-2 .fade-text,\\n[md-theme=\"@themeName\"] .md-warn-bg.md-hue-2 .divider {\\n    color: @warnHue2Contrast4;\\n}\\n\\n/* Warn, Hue-3 */\\n[md-theme=\"@themeName\"] .md-warn-bg.md-hue-3 {\\n    background-color: @warnHue3Color;\\n    color: @warnHue3Contrast1;\\n}\\n\\n[md-theme=\"@themeName\"] .md-warn-bg.md-hue-3 .secondary-text,\\n[md-theme=\"@themeName\"] .md-warn-bg.md-hue-3 .icon {\\n    color: @warnHue3Contrast1;\\n}\\n\\n[md-theme=\"@themeName\"] .md-warn-bg.md-hue-3 .hint-text,\\n[md-theme=\"@themeName\"] .md-warn-bg.md-hue-3 .disabled-text {\\n    color: @warnHue3Contrast3;\\n}\\n\\n[md-theme=\"@themeName\"] .md-warn-bg.md-hue-3 .fade-text,\\n[md-theme=\"@themeName\"] .md-warn-bg.md-hue-3 .divider {\\n    color: @warnHue3Contrast4;\\n}\\n\\n/* Warn foreground */\\n[md-theme=\"@themeName\"] .md-warn-fg {\\n    color: @warnDefaultColor !important;\\n}\\n\\n/* Warn foreground, Hue-1 */\\n[md-theme=\"@themeName\"] .md-warn-fg.md-hue-1 {\\n    color: @warnHue1Color !important;\\n}\\n\\n/* Warn foreground, Hue-2 */\\n[md-theme=\"@themeName\"] .md-warn-fg.md-hue-2 {\\n    color: @warnHue2Color !important;\\n}\\n\\n/* Warn foreground, Hue-3 */\\n[md-theme=\"@themeName\"] .md-warn-fg.md-hue-3 {\\n    color: @warnHue3Color !important;\\n}\\n\\n/* Background */\\n[md-theme=\"@themeName\"] .md-background-bg {\\n    background-color: @backgroundDefaultColor;\\n    color: @backgroundDefaultContrast1;\\n}\\n\\n[md-theme=\"@themeName\"] .md-background-bg .secondary-text,\\n[md-theme=\"@themeName\"] .md-background-bg .icon {\\n    color: @backgroundDefaultContrast2;\\n}\\n\\n[md-theme=\"@themeName\"] .md-background-bg .hint-text,\\n[md-theme=\"@themeName\"] .md-background-bg .disabled-text {\\n    color: @backgroundDefaultContrast3;\\n}\\n\\n[md-theme=\"@themeName\"] .md-background-bg .fade-text,\\n[md-theme=\"@themeName\"] .md-background-bg .divider {\\n    color: @backgroundDefaultContrast4;\\n}\\n\\n/* Background, Hue-1 */\\n[md-theme=\"@themeName\"] .md-background-bg.md-hue-1 {\\n    background-color: @backgroundHue1Color;\\n    color: @backgroundHue1Contrast1;\\n}\\n\\n[md-theme=\"@themeName\"] .md-background-bg.md-hue-1 .secondary-text,\\n[md-theme=\"@themeName\"] .md-background-bg.md-hue-1 .icon {\\n    color: @backgroundHue1Contrast2;\\n}\\n\\n[md-theme=\"@themeName\"] .md-background-bg.md-hue-1 .hint-text,\\n[md-theme=\"@themeName\"] .md-background-bg.md-hue-1 .disabled-text {\\n    color: @backgroundHue1Contrast3;\\n}\\n\\n[md-theme=\"@themeName\"] .md-background-bg.md-hue-1 .fade-text,\\n[md-theme=\"@themeName\"] .md-background-bg.md-hue-1 .divider {\\n    color: @backgroundHue1Contrast4;\\n}\\n\\n/* Background, Hue-2 */\\n[md-theme=\"@themeName\"] .md-background-bg.md-hue-2 {\\n    background-color: @backgroundHue2Color;\\n    color: @backgroundHue2Contrast1;\\n}\\n\\n[md-theme=\"@themeName\"] .md-background-bg.md-hue-2 .secondary-text,\\n[md-theme=\"@themeName\"] .md-background-bg.md-hue-2 .icon {\\n    color: @backgroundHue2Contrast2;\\n}\\n\\n[md-theme=\"@themeName\"] .md-background-bg.md-hue-2 .hint-text,\\n[md-theme=\"@themeName\"] .md-background-bg.md-hue-2 .disabled-text {\\n    color: @backgroundHue2Contrast3;\\n}\\n\\n[md-theme=\"@themeName\"] .md-background-bg.md-hue-2 .fade-text,\\n[md-theme=\"@themeName\"] .md-background-bg.md-hue-2 .divider {\\n    color: @backgroundHue2Contrast4;\\n}\\n\\n/* Background, Hue-3 */\\n[md-theme=\"@themeName\"] .md-background-bg.md-hue-3 {\\n    background-color: @backgroundHue3Color;\\n    color: @backgroundHue3Contrast1;\\n}\\n\\n[md-theme=\"@themeName\"] .md-background-bg.md-hue-3 .secondary-text,\\n[md-theme=\"@themeName\"] .md-background-bg.md-hue-3 .icon {\\n    color: @backgroundHue3Contrast1;\\n}\\n\\n[md-theme=\"@themeName\"] .md-background-bg.md-hue-3 .hint-text,\\n[md-theme=\"@themeName\"] .md-background-bg.md-hue-3 .disabled-text {\\n    color: @backgroundHue3Contrast3;\\n}\\n\\n[md-theme=\"@themeName\"] .md-background-bg.md-hue-3 .fade-text,\\n[md-theme=\"@themeName\"] .md-background-bg.md-hue-3 .divider {\\n    color: @backgroundHue3Contrast4;\\n}\\n\\n/* Background foreground */\\n[md-theme=\"@themeName\"] .md-background-fg {\\n    color: @backgroundDefaultColor !important;\\n}\\n\\n/* Background foreground, Hue-1 */\\n[md-theme=\"@themeName\"] .md-background-fg.md-hue-1 {\\n    color: @backgroundHue1Color !important;\\n}\\n\\n/* Background foreground, Hue-2 */\\n[md-theme=\"@themeName\"] .md-background-fg.md-hue-2 {\\n    color: @backgroundHue2Color !important;\\n}\\n\\n/* Background foreground, Hue-3 */\\n[md-theme=\"@themeName\"] .md-background-fg.md-hue-3 {\\n    color: @backgroundHue3Color !important;\\n}';\n\n            var regex = new RegExp(Object.keys(styleVars).join('|'), 'gi');\n            var css = cssTemplate.replace(regex, function (matched)\n            {\n                return styleVars[matched];\n            });\n\n            var headEl = angular.element('head');\n            var styleEl = angular.element('<style type=\"text/css\"></style>');\n            styleEl.html(css);\n            headEl.append(styleEl);\n        }\n\n        /**\n         * Convert color array to rgb/rgba\n         * Also apply contrasts if needed\n         *\n         * @param color\n         * @param _contrastLevel\n         * @returns {string}\n         */\n        function rgba(color, _contrastLevel)\n        {\n            var contrastLevel = _contrastLevel || false;\n\n            // Convert 255,255,255,0.XX to 255,255,255\n            // According to Google's Material design specs, white primary\n            // text must have opacity of 1 and we will fix that here\n            // because Angular Material doesn't care about that spec\n            if ( color.length === 4 && color[0] === 255 && color[1] === 255 && color[2] === 255 )\n            {\n                color.splice(3, 4);\n            }\n\n            // If contrast level provided, apply it to the current color\n            if ( contrastLevel )\n            {\n                color = applyContrast(color, contrastLevel);\n            }\n\n            // Convert color array to color string (rgb/rgba)\n            if ( color.length === 3 )\n            {\n                return 'rgb(' + color.join(',') + ')';\n            }\n            else if ( color.length === 4 )\n            {\n                return 'rgba(' + color.join(',') + ')';\n            }\n            else\n            {\n                $log.error('Invalid number of arguments supplied in the color array: ' + color.length + '\\n' + 'The array must have 3 or 4 colors.');\n            }\n        }\n\n        /**\n         * Apply given contrast level to the given color\n         *\n         * @param color\n         * @param contrastLevel\n         */\n        function applyContrast(color, contrastLevel)\n        {\n            var contrastLevels = {\n                'white': {\n                    '1': '1',\n                    '2': '0.7',\n                    '3': '0.3',\n                    '4': '0.12'\n                },\n                'black': {\n                    '1': '0.87',\n                    '2': '0.54',\n                    '3': '0.26',\n                    '4': '0.12'\n                }\n            };\n\n            // If white\n            if ( color[0] === 255 && color[1] === 255 && color[2] === 255 )\n            {\n                color[3] = contrastLevels.white[contrastLevel];\n            }\n            // If black\n            else if ( color[0] === 0 && color[1] === 0 && color[2] === 0 )\n            {\n                color[3] = contrastLevels.black[contrastLevel];\n            }\n\n            return color;\n        }\n\n        /**\n         * Uppercase first\n         */\n        function ucfirst(string)\n        {\n            return string.charAt(0).toUpperCase() + string.slice(1);\n        }\n    }\n\n})();\n(function ()\n{\n    'use strict';\n\n    angular\n        .module('app.core')\n        .controller('MsThemeOptionsController', MsThemeOptionsController)\n        .directive('msThemeOptions', msThemeOptions);\n\n    /** @ngInject */\n    function MsThemeOptionsController($cookies, fuseTheming)\n    {\n        var vm = this;\n\n        // Data\n        vm.themes = fuseTheming.themes;\n        vm.layoutMode = 'wide';\n        vm.layoutStyle = $cookies.get('layoutStyle') || 'verticalNavigation';\n\n        // Methods\n        vm.setActiveTheme = setActiveTheme;\n        vm.updateLayoutMode = updateLayoutMode;\n        vm.updateLayoutStyle = updateLayoutStyle;\n\n        //////////\n\n        /**\n         * Set active theme\n         *\n         * @param themeName\n         */\n        function setActiveTheme(themeName)\n        {\n            // Set active theme\n            fuseTheming.setActiveTheme(themeName);\n        }\n\n        /**\n         * Update layout mode\n         */\n        function updateLayoutMode()\n        {\n            var bodyEl = angular.element('body');\n\n            // Update class on body element\n            bodyEl.toggleClass('boxed', (vm.layoutMode === 'boxed'));\n        }\n\n        /**\n         * Update layout style\n         */\n        function updateLayoutStyle()\n        {\n            // Update the cookie\n            $cookies.put('layoutStyle', vm.layoutStyle);\n\n            // Reload the page to apply the changes\n            location.reload();\n        }\n    }\n\n    /** @ngInject */\n    function msThemeOptions()\n    {\n        return {\n            restrict   : 'E',\n            scope      : {\n                panelOpen: '=?'\n            },\n            controller : 'MsThemeOptionsController as vm',\n            templateUrl: 'app/core/theme-options/theme-options.html',\n            compile    : function (tElement)\n            {\n                tElement.addClass('ms-theme-options');\n\n                return function postLink(scope, iElement)\n                {\n                    var bodyEl = angular.element('body'),\n                        backdropEl = angular.element('<div class=\"ms-theme-options-backdrop\"></div>');\n\n                    // Panel open status\n                    scope.panelOpen = scope.panelOpen || false;\n\n                    /**\n                     * Toggle options panel\n                     */\n                    function toggleOptionsPanel()\n                    {\n                        if ( scope.panelOpen )\n                        {\n                            closeOptionsPanel();\n                        }\n                        else\n                        {\n                            openOptionsPanel();\n                        }\n                    }\n\n                    function openOptionsPanel()\n                    {\n                        // Set panelOpen status\n                        scope.panelOpen = true;\n\n                        // Add open class\n                        iElement.addClass('open');\n\n                        // Append the backdrop\n                        bodyEl.append(backdropEl);\n\n                        // Register the event\n                        backdropEl.on('click touch', closeOptionsPanel);\n                    }\n\n                    /**\n                     * Close options panel\n                     */\n                    function closeOptionsPanel()\n                    {\n                        // Set panelOpen status\n                        scope.panelOpen = false;\n\n                        // Remove open class\n                        iElement.removeClass('open');\n\n                        // De-register the event\n                        backdropEl.off('click touch', closeOptionsPanel);\n\n                        // Remove the backdrop\n                        backdropEl.remove();\n                    }\n\n                    // Expose the toggle function\n                    scope.toggleOptionsPanel = toggleOptionsPanel;\n                };\n            }\n        };\n    }\n})();\n(function ()\n{\n    'use strict';\n\n    angular\n        .module('app.core')\n        .factory('msUtils', msUtils);\n\n    /** @ngInject */\n    function msUtils($window)\n    {\n        // Private variables\n        var mobileDetect = new MobileDetect($window.navigator.userAgent),\n            browserInfo = null;\n\n        var service = {\n            exists       : exists,\n            detectBrowser: detectBrowser,\n            guidGenerator: guidGenerator,\n            isMobile     : isMobile,\n            toggleInArray: toggleInArray\n        };\n\n        return service;\n\n        //////////\n\n        /**\n         * Check if item exists in a list\n         *\n         * @param item\n         * @param list\n         * @returns {boolean}\n         */\n        function exists(item, list)\n        {\n            return list.indexOf(item) > -1;\n        }\n\n        /**\n         * Returns browser information\n         * from user agent data\n         *\n         * Found at http://www.quirksmode.org/js/detect.html\n         * but modified and updated to fit for our needs\n         */\n        function detectBrowser()\n        {\n            // If we already tested, do not test again\n            if ( browserInfo )\n            {\n                return browserInfo;\n            }\n\n            var browserData = [\n                {\n                    string       : $window.navigator.userAgent,\n                    subString    : 'Edge',\n                    versionSearch: 'Edge',\n                    identity     : 'Edge'\n                },\n                {\n                    string   : $window.navigator.userAgent,\n                    subString: 'Chrome',\n                    identity : 'Chrome'\n                },\n                {\n                    string       : $window.navigator.userAgent,\n                    subString    : 'OmniWeb',\n                    versionSearch: 'OmniWeb/',\n                    identity     : 'OmniWeb'\n                },\n                {\n                    string       : $window.navigator.vendor,\n                    subString    : 'Apple',\n                    versionSearch: 'Version',\n                    identity     : 'Safari'\n                },\n                {\n                    prop    : $window.opera,\n                    identity: 'Opera'\n                },\n                {\n                    string   : $window.navigator.vendor,\n                    subString: 'iCab',\n                    identity : 'iCab'\n                },\n                {\n                    string   : $window.navigator.vendor,\n                    subString: 'KDE',\n                    identity : 'Konqueror'\n                },\n                {\n                    string   : $window.navigator.userAgent,\n                    subString: 'Firefox',\n                    identity : 'Firefox'\n                },\n                {\n                    string   : $window.navigator.vendor,\n                    subString: 'Camino',\n                    identity : 'Camino'\n                },\n                {\n                    string   : $window.navigator.userAgent,\n                    subString: 'Netscape',\n                    identity : 'Netscape'\n                },\n                {\n                    string       : $window.navigator.userAgent,\n                    subString    : 'MSIE',\n                    identity     : 'Explorer',\n                    versionSearch: 'MSIE'\n                },\n                {\n                    string       : $window.navigator.userAgent,\n                    subString    : 'Trident/7',\n                    identity     : 'Explorer',\n                    versionSearch: 'rv'\n                },\n                {\n                    string       : $window.navigator.userAgent,\n                    subString    : 'Gecko',\n                    identity     : 'Mozilla',\n                    versionSearch: 'rv'\n                },\n                {\n                    string       : $window.navigator.userAgent,\n                    subString    : 'Mozilla',\n                    identity     : 'Netscape',\n                    versionSearch: 'Mozilla'\n                }\n            ];\n\n            var osData = [\n                {\n                    string   : $window.navigator.platform,\n                    subString: 'Win',\n                    identity : 'Windows'\n                },\n                {\n                    string   : $window.navigator.platform,\n                    subString: 'Mac',\n                    identity : 'Mac'\n                },\n                {\n                    string   : $window.navigator.platform,\n                    subString: 'Linux',\n                    identity : 'Linux'\n                },\n                {\n                    string   : $window.navigator.platform,\n                    subString: 'iPhone',\n                    identity : 'iPhone'\n                },\n                {\n                    string   : $window.navigator.platform,\n                    subString: 'iPod',\n                    identity : 'iPod'\n                },\n                {\n                    string   : $window.navigator.platform,\n                    subString: 'iPad',\n                    identity : 'iPad'\n                },\n                {\n                    string   : $window.navigator.platform,\n                    subString: 'Android',\n                    identity : 'Android'\n                }\n            ];\n\n            var versionSearchString = '';\n\n            function searchString(data)\n            {\n                for ( var i = 0; i < data.length; i++ )\n                {\n                    var dataString = data[i].string;\n                    var dataProp = data[i].prop;\n\n                    versionSearchString = data[i].versionSearch || data[i].identity;\n\n                    if ( dataString )\n                    {\n                        if ( dataString.indexOf(data[i].subString) !== -1 )\n                        {\n                            return data[i].identity;\n\n                        }\n                    }\n                    else if ( dataProp )\n                    {\n                        return data[i].identity;\n                    }\n                }\n            }\n\n            function searchVersion(dataString)\n            {\n                var index = dataString.indexOf(versionSearchString);\n\n                if ( index === -1 )\n                {\n                    return;\n                }\n\n                return parseInt(dataString.substring(index + versionSearchString.length + 1));\n            }\n\n            var browser = searchString(browserData) || 'unknown-browser';\n            var version = searchVersion($window.navigator.userAgent) || searchVersion($window.navigator.appVersion) || 'unknown-version';\n            var os = searchString(osData) || 'unknown-os';\n\n            // Prepare and store the object\n            browser = browser.toLowerCase();\n            version = browser + '-' + version;\n            os = os.toLowerCase();\n\n            browserInfo = {\n                browser: browser,\n                version: version,\n                os     : os\n            };\n\n            return browserInfo;\n        }\n\n        /**\n         * Generates a globally unique id\n         *\n         * @returns {*}\n         */\n        function guidGenerator()\n        {\n            var S4 = function ()\n            {\n                return (((1 + Math.random()) * 0x10000) || 0).toString(16).substring(1);\n            };\n            return (S4() + S4() + S4() + S4() + S4() + S4());\n        }\n\n        /**\n         * Return if current device is a\n         * mobile device or not\n         */\n        function isMobile()\n        {\n            return mobileDetect.mobile();\n        }\n\n        /**\n         * Toggle in array (push or splice)\n         *\n         * @param item\n         * @param array\n         */\n        function toggleInArray(item, array)\n        {\n            if ( array.indexOf(item) === -1 )\n            {\n                array.push(item);\n            }\n            else\n            {\n                array.splice(array.indexOf(item), 1);\n            }\n        }\n    }\n}());\n(function ()\n{\n    'use strict';\n\n    angular\n        .module('app.core')\n        .provider('msApi', msApiProvider);\n\n    /** @ngInject **/\n    function msApiProvider()\n    {\n        /* ----------------- */\n        /* Provider          */\n        /* ----------------- */\n        var provider = this;\n\n        // Inject the $log service\n        var $log = angular.injector(['ng']).get('$log');\n\n        // Data\n        var baseUrl = '';\n        var api = [];\n\n        // Methods\n        provider.setBaseUrl = setBaseUrl;\n        provider.getBaseUrl = getBaseUrl;\n        provider.getApiObject = getApiObject;\n        provider.register = register;\n\n        //////////\n\n        /**\n         * Set base url for API endpoints\n         *\n         * @param url {string}\n         */\n        function setBaseUrl(url)\n        {\n            baseUrl = url;\n        }\n\n        /**\n         * Return the base url\n         *\n         * @returns {string}\n         */\n        function getBaseUrl()\n        {\n            return baseUrl;\n        }\n\n        /**\n         * Return the api object\n         *\n         * @returns {object}\n         */\n        function getApiObject()\n        {\n            return api;\n        }\n\n        /**\n         * Register API endpoint\n         *\n         * @param key\n         * @param resource\n         */\n        function register(key, resource)\n        {\n            if ( !angular.isString(key) )\n            {\n                $log.error('\"path\" must be a string (eg. `dashboard.project`)');\n                return;\n            }\n\n            if ( !angular.isArray(resource) )\n            {\n                $log.error('\"resource\" must be an array and it must follow $resource definition');\n                return;\n            }\n\n            // Store the API object\n            api[key] = {\n                url          : baseUrl + (resource[0] || ''),\n                paramDefaults: resource[1] || [],\n                actions      : resource[2] || [],\n                options      : resource[3] || {}\n            };\n        }\n\n        /* ----------------- */\n        /* Service           */\n        /* ----------------- */\n        this.$get = function ($q, $log, $resource)\n        {\n            // Data\n\n            // Methods\n            var service = {\n                setBaseUrl: setBaseUrl,\n                getBaseUrl: getBaseUrl,\n                register  : register,\n                resolve   : resolve,\n                request   : request\n            };\n\n            return service;\n\n            //////////\n\n            /**\n             * Resolve an API endpoint\n             *\n             * @param action {string}\n             * @param parameters {object}\n             * @returns {promise|boolean}\n             */\n            function resolve(action, parameters)\n            {\n                var actionParts = action.split('@'),\n                    resource = actionParts[0],\n                    method = actionParts[1],\n                    params = parameters || {};\n\n                if ( !resource || !method )\n                {\n                    $log.error('msApi.resolve requires correct action parameter (resourceName@methodName)');\n                    return false;\n                }\n\n                // Create a new deferred object\n                var deferred = $q.defer();\n\n                // Get the correct resource definition from api object\n                var apiObject = api[resource];\n\n                if ( !apiObject )\n                {\n                    $log.error('Resource \"' + resource + '\" is not defined in the api service!');\n                    deferred.reject('Resource \"' + resource + '\" is not defined in the api service!');\n                }\n                else\n                {\n                    // Generate the $resource object based on the stored API object\n                    var resourceObject = $resource(apiObject.url, apiObject.paramDefaults, apiObject.actions, apiObject.options);\n\n                    // Make the call...\n                    resourceObject[method](params,\n\n                        // Success\n                        function (response)\n                        {\n                            deferred.resolve(response);\n                        },\n\n                        // Error\n                        function (response)\n                        {\n                            deferred.reject(response);\n                        }\n                    );\n                }\n\n                // Return the promise\n                return deferred.promise;\n            }\n\n            /**\n             * Make a request to an API endpoint\n             *\n             * @param action {string}\n             * @param [parameters] {object}\n             * @param [success] {function}\n             * @param [error] {function}\n             *\n             * @returns {promise|boolean}\n             */\n            function request(action, parameters, success, error)\n            {\n                var actionParts = action.split('@'),\n                    resource = actionParts[0],\n                    method = actionParts[1],\n                    params = parameters || {};\n\n                if ( !resource || !method )\n                {\n                    $log.error('msApi.resolve requires correct action parameter (resourceName@methodName)');\n                    return false;\n                }\n\n                // Create a new deferred object\n                var deferred = $q.defer();\n\n                // Get the correct resource definition from api object\n                var apiObject = api[resource];\n\n                if ( !apiObject )\n                {\n                    $log.error('Resource \"' + resource + '\" is not defined in the api service!');\n                    deferred.reject('Resource \"' + resource + '\" is not defined in the api service!');\n                }\n                else\n                {\n                    // Generate the $resource object based on the stored API object\n                    var resourceObject = $resource(apiObject.url, apiObject.paramDefaults, apiObject.actions, apiObject.options);\n\n                    // Make the call...\n                    resourceObject[method](params,\n\n                        // SUCCESS\n                        function (response)\n                        {\n                            // Resolve the promise\n                            deferred.resolve(response);\n\n                            // Call the success function if there is one\n                            if ( angular.isDefined(success) && angular.isFunction(success) )\n                            {\n                                success(response);\n                            }\n                        },\n\n                        // ERROR\n                        function (response)\n                        {\n                            // Reject the promise\n                            deferred.reject(response);\n\n                            // Call the error function if there is one\n                            if ( angular.isDefined(error) && angular.isFunction(error) )\n                            {\n                                error(response);\n                            }\n                        }\n                    );\n                }\n\n                // Return the promise\n                return deferred.promise;\n            }\n        };\n    }\n})();\n(function ()\n{\n    'use strict';\n\n    angular\n        .module('app.core')\n        .factory('apiResolver', apiResolverService);\n\n    /** @ngInject */\n    function apiResolverService($q, $log, api)\n    {\n        var service = {\n            resolve: resolve\n        };\n\n        return service;\n\n        //////////\n        /**\n         * Resolve api\n         * @param action\n         * @param parameters\n         */\n        function resolve(action, parameters)\n        {\n            var actionParts = action.split('@'),\n                resource = actionParts[0],\n                method = actionParts[1],\n                params = parameters || {};\n\n            if ( !resource || !method )\n            {\n                $log.error('apiResolver.resolve requires correct action parameter (ResourceName@methodName)');\n                return false;\n            }\n\n            // Create a new deferred object\n            var deferred = $q.defer();\n\n            // Get the correct api object from api service\n            var apiObject = getApiObject(resource);\n\n            if ( !apiObject )\n            {\n                $log.error('Resource \"' + resource + '\" is not defined in the api service!');\n                deferred.reject('Resource \"' + resource + '\" is not defined in the api service!');\n            }\n            else\n            {\n                apiObject[method](params,\n\n                    // Success\n                    function (response)\n                    {\n                        deferred.resolve(response);\n                    },\n\n                    // Error\n                    function (response)\n                    {\n                        deferred.reject(response);\n                    }\n                );\n            }\n\n            // Return the promise\n            return deferred.promise;\n        }\n\n        /**\n         * Get correct api object\n         *\n         * @param resource\n         * @returns {*}\n         */\n        function getApiObject(resource)\n        {\n            // Split the resource in case if we have a dot notated object\n            var resourceParts = resource.split('.'),\n                apiObject = api;\n\n            // Loop through the resource parts and go all the way through\n            // the api object and return the correct one\n            for ( var l = 0; l < resourceParts.length; l++ )\n            {\n                if ( angular.isUndefined(apiObject[resourceParts[l]]) )\n                {\n                    $log.error('Resource part \"' + resourceParts[l] + '\" is not defined!');\n                    apiObject = false;\n                    break;\n                }\n\n                apiObject = apiObject[resourceParts[l]];\n            }\n\n            if ( !apiObject )\n            {\n                return false;\n            }\n\n            return apiObject;\n        }\n    }\n\n})();\n(function ()\n{\n    'use strict';\n\n    angular\n        .module('app.core')\n        .filter('filterByTags', filterByTags)\n        .filter('filterSingleByTags', filterSingleByTags);\n\n    /** @ngInject */\n    function filterByTags()\n    {\n        return function (items, tags)\n        {\n            if ( items.length === 0 || tags.length === 0 )\n            {\n                return items;\n            }\n\n            var filtered = [];\n\n            items.forEach(function (item)\n            {\n                var match = tags.every(function (tag)\n                {\n                    var tagExists = false;\n\n                    item.tags.forEach(function (itemTag)\n                    {\n                        if ( itemTag.name === tag.name )\n                        {\n                            tagExists = true;\n                            return;\n                        }\n                    });\n\n                    return tagExists;\n                });\n\n                if ( match )\n                {\n                    filtered.push(item);\n                }\n            });\n\n            return filtered;\n        };\n    }\n\n    /** @ngInject */\n    function filterSingleByTags()\n    {\n        return function (itemTags, tags)\n        {\n            if ( itemTags.length === 0 || tags.length === 0 )\n            {\n                return;\n            }\n\n            if ( itemTags.length < tags.length )\n            {\n                return [];\n            }\n\n            var filtered = [];\n\n            var match = tags.every(function (tag)\n            {\n                var tagExists = false;\n\n                itemTags.forEach(function (itemTag)\n                {\n                    if ( itemTag.name === tag.name )\n                    {\n                        tagExists = true;\n                        return;\n                    }\n                });\n\n                return tagExists;\n            });\n\n            if ( match )\n            {\n                filtered.push(itemTags);\n            }\n\n            return filtered;\n        };\n    }\n\n})();\n(function ()\n{\n    'use strict';\n\n    angular\n        .module('app.core')\n        .filter('filterByPropIds', filterByPropIds);\n\n    /** @ngInject */\n    function filterByPropIds()\n    {\n        return function (items, parameter, ids)\n        {\n            if ( items.length === 0 || !ids || ids.length === 0 )\n            {\n                return items;\n            }\n\n            var filtered = [];\n\n            for ( var i = 0; i < items.length; i++ )\n            {\n                var item = items[i];\n                var match = false;\n\n                for ( var j = 0; j < ids.length; j++ )\n                {\n                    var id = ids[j];\n                    if ( item[parameter].indexOf(id) > -1 )\n                    {\n                        match = true;\n                        break;\n                    }\n                }\n\n                if ( match )\n                {\n                    filtered.push(item);\n                }\n\n            }\n\n            return filtered;\n\n        };\n    }\n\n})();\n(function ()\n{\n    'use strict';\n\n    angular\n        .module('app.core')\n        .filter('filterByIds', filterByIds);\n\n    /** @ngInject */\n    function filterByIds()\n    {\n        return function (items, ids)\n        {\n\n            if ( items.length === 0 || !ids )\n            {\n                return items;\n            }\n\n            if ( ids.length === 0 )\n            {\n                return [];\n            }\n\n            var filtered = [];\n\n            for ( var i = 0; i < items.length; i++ )\n            {\n                var item = items[i];\n                var match = false;\n\n                for ( var j = 0; j < ids.length; j++ )\n                {\n                    var id = ids[j];\n                    if ( item.id === id )\n                    {\n                        match = true;\n                        break;\n                    }\n                }\n\n                if ( match )\n                {\n                    filtered.push(item);\n                }\n\n            }\n\n            return filtered;\n\n        };\n    }\n\n})();\n(function ()\n{\n    'use strict';\n\n    angular\n        .module('app.core')\n        .filter('toTrusted', toTrustedFilter)\n        .filter('htmlToPlaintext', htmlToPlainTextFilter)\n        .filter('nospace', nospaceFilter)\n        .filter('humanizeDoc', humanizeDocFilter);\n\n    /** @ngInject */\n    function toTrustedFilter($sce)\n    {\n        return function (value)\n        {\n            return $sce.trustAsHtml(value);\n        };\n    }\n\n    /** @ngInject */\n    function htmlToPlainTextFilter()\n    {\n        return function (text)\n        {\n            return String(text).replace(/<[^>]+>/gm, '');\n        };\n    }\n\n    /** @ngInject */\n    function nospaceFilter()\n    {\n        return function (value)\n        {\n            return (!value) ? '' : value.replace(/ /g, '');\n        };\n    }\n\n    /** @ngInject */\n    function humanizeDocFilter()\n    {\n        return function (doc)\n        {\n            if ( !doc )\n            {\n                return;\n            }\n            if ( doc.type === 'directive' )\n            {\n                return doc.name.replace(/([A-Z])/g, function ($1)\n                {\n                    return '-' + $1.toLowerCase();\n                });\n            }\n            return doc.label || doc.name;\n        };\n    }\n\n})();\n(function ()\n{\n    'use strict';\n\n    angular\n        .module('app.core')\n        .filter('altDate', altDate);\n\n    /** @ngInject */\n    function altDate()\n    {\n        return function (value)\n        {\n            var diff = Date.now() - new Date(value);\n\n            /**\n             * If in a hour\n             * e.g. \"2 minutes ago\"\n             */\n            if ( diff < (60 * 60 * 1000) )\n            {\n                return moment(value).fromNow();\n            }\n            /*\n             * If in the day\n             * e.g. \"11:23\"\n             */\n            else if ( diff < (60 * 60 * 24 * 1000) )\n            {\n                return moment(value).format('HH:mm');\n            }\n            /*\n             * If in week\n             * e.g \"Tuesday\"\n             */\n            else if ( diff < (60 * 60 * 24 * 7 * 1000) )\n            {\n                return moment(value).format('dddd');\n            }\n            /*\n             * If more than a week\n             * e.g. 03/29/2016\n             */\n            else\n            {\n                return moment(value).calendar();\n            }\n\n        };\n    }\n\n})();\n(function ()\n{\n    'use strict';\n\n    angular\n        .module('app.core')\n        .directive('hljs', hljsDirective);\n\n    /** @ngInject */\n    function hljsDirective($timeout, $q, $interpolate)\n    {\n        return {\n            restrict: 'E',\n            compile : function (element, attr)\n            {\n                var code;\n                //No attribute? code is the content\n                if ( !attr.code )\n                {\n                    code = element.html();\n                    element.empty();\n                }\n\n                return function (scope, element, attr)\n                {\n\n                    if ( attr.code )\n                    {\n                        // Attribute? code is the evaluation\n                        code = scope.$eval(attr.code);\n                    }\n                    var shouldInterpolate = scope.$eval(attr.shouldInterpolate);\n\n                    $q.when(code).then(function (code)\n                    {\n                        if ( code )\n                        {\n                            if ( shouldInterpolate )\n                            {\n                                code = $interpolate(code)(scope);\n                            }\n                            var contentParent = angular.element(\n                                '<pre><code class=\"highlight\" ng-non-bindable></code></pre>'\n                            );\n                            element.append(contentParent);\n                            // Defer highlighting 1-frame to prevent GA interference...\n                            $timeout(function ()\n                            {\n                                render(code, contentParent);\n                            }, 34, false);\n                        }\n                    });\n\n                    function render(contents, parent)\n                    {\n\n                        var codeElement = parent.find('code');\n                        var lines = contents.split('\\n');\n\n                        // Remove empty lines\n                        lines = lines.filter(function (line)\n                        {\n                            return line.trim().length;\n                        });\n\n                        // Make it so each line starts at 0 whitespace\n                        var firstLineWhitespace = lines[0].match(/^\\s*/)[0];\n                        var startingWhitespaceRegex = new RegExp('^' + firstLineWhitespace);\n                        lines = lines.map(function (line)\n                        {\n                            return line\n                                .replace(startingWhitespaceRegex, '')\n                                .replace(/\\s+$/, '');\n                        });\n\n                        var highlightedCode = hljs.highlight(attr.language || attr.lang, lines.join('\\n'), true);\n                        highlightedCode.value = highlightedCode.value\n                            .replace(/=<span class=\"hljs-value\">\"\"<\\/span>/gi, '')\n                            .replace('<head>', '')\n                            .replace('<head/>', '');\n                        codeElement.append(highlightedCode.value).addClass('highlight');\n                    }\n                };\n            }\n        };\n    }\n})();\n(function ()\n{\n    'use strict';\n\n    angular\n        .module('app.core')\n        .provider('fuseConfig', fuseConfigProvider);\n\n    /** @ngInject */\n    function fuseConfigProvider()\n    {\n        // Default configuration\n        var fuseConfiguration = {\n            'disableCustomScrollbars'        : false,\n            'disableMdInkRippleOnMobile'     : true,\n            'disableCustomScrollbarsOnMobile': true\n        };\n\n        // Methods\n        this.config = config;\n\n        //////////\n\n        /**\n         * Extend default configuration with the given one\n         *\n         * @param configuration\n         */\n        function config(configuration)\n        {\n            fuseConfiguration = angular.extend({}, fuseConfiguration, configuration);\n        }\n\n        /**\n         * Service\n         */\n        this.$get = function ()\n        {\n            var service = {\n                getConfig: getConfig,\n                setConfig: setConfig\n            };\n\n            return service;\n\n            //////////\n\n            /**\n             * Returns a config value\n             */\n            function getConfig(configName)\n            {\n                if ( angular.isUndefined(fuseConfiguration[configName]) )\n                {\n                    return false;\n                }\n\n                return fuseConfiguration[configName];\n            }\n\n            /**\n             * Creates or updates config object\n             *\n             * @param configName\n             * @param configValue\n             */\n            function setConfig(configName, configValue)\n            {\n                fuseConfiguration[configName] = configValue;\n            }\n        };\n    }\n\n})();\n(function ()\n{\n    'use strict';\n\n    angular\n        .module('app.toolbar', [])\n        .config(config);\n\n    /** @ngInject */\n    function config($translatePartialLoaderProvider)\n    {\n        $translatePartialLoaderProvider.addPart('app/toolbar');\n    }\n})();\n\n(function ()\n{\n    'use strict';\n\n    angular\n        .module('app.toolbar')\n        .controller('ToolbarController', ToolbarController);\n\n    /** @ngInject */\n    function ToolbarController($rootScope, $q, $state, $timeout, $mdSidenav, $translate, $mdToast, msNavigationService)\n    {\n        var vm = this;\n\n        // Data\n        $rootScope.global = {\n            search: ''\n        };\n\n        vm.bodyEl = angular.element('body');\n        vm.userStatusOptions = [\n            {\n                'title': 'Online',\n                'icon' : 'icon-checkbox-marked-circle',\n                'color': '#4CAF50'\n            },\n            {\n                'title': 'Away',\n                'icon' : 'icon-clock',\n                'color': '#FFC107'\n            },\n            {\n                'title': 'Do not Disturb',\n                'icon' : 'icon-minus-circle',\n                'color': '#F44336'\n            },\n            {\n                'title': 'Invisible',\n                'icon' : 'icon-checkbox-blank-circle-outline',\n                'color': '#BDBDBD'\n            },\n            {\n                'title': 'Offline',\n                'icon' : 'icon-checkbox-blank-circle-outline',\n                'color': '#616161'\n            }\n        ];\n        vm.languages = {\n            en: {\n                'title'      : 'English',\n                'translation': 'TOOLBAR.ENGLISH',\n                'code'       : 'en',\n                'flag'       : 'us'\n            },\n            es: {\n                'title'      : 'Spanish',\n                'translation': 'TOOLBAR.SPANISH',\n                'code'       : 'es',\n                'flag'       : 'es'\n            },\n            tr: {\n                'title'      : 'Turkish',\n                'translation': 'TOOLBAR.TURKISH',\n                'code'       : 'tr',\n                'flag'       : 'tr'\n            }\n        };\n\n        // Methods\n        vm.toggleSidenav = toggleSidenav;\n        vm.logout = logout;\n        vm.changeLanguage = changeLanguage;\n        vm.setUserStatus = setUserStatus;\n        vm.toggleHorizontalMobileMenu = toggleHorizontalMobileMenu;\n        vm.toggleMsNavigationFolded = toggleMsNavigationFolded;\n        vm.search = search;\n        vm.searchResultClick = searchResultClick;\n\n        //////////\n\n        init();\n\n        /**\n         * Initialize\n         */\n        function init()\n        {\n            // Select the first status as a default\n            vm.userStatus = vm.userStatusOptions[0];\n\n            // Get the selected language directly from angular-translate module setting\n            vm.selectedLanguage = vm.languages[$translate.preferredLanguage()];\n        }\n\n\n        /**\n         * Toggle sidenav\n         *\n         * @param sidenavId\n         */\n        function toggleSidenav(sidenavId)\n        {\n            $mdSidenav(sidenavId).toggle();\n        }\n\n        /**\n         * Sets User Status\n         * @param status\n         */\n        function setUserStatus(status)\n        {\n            vm.userStatus = status;\n        }\n\n        /**\n         * Logout Function\n         */\n        function logout()\n        {\n            // Do logout here..\n        }\n\n        /**\n         * Change Language\n         */\n        function changeLanguage(lang)\n        {\n            vm.selectedLanguage = lang;\n\n            /**\n             * Show temporary message if user selects a language other than English\n             *\n             * angular-translate module will try to load language specific json files\n             * as soon as you change the language. And because we don't have them, there\n             * will be a lot of errors in the page potentially breaking couple functions\n             * of the template.\n             *\n             * To prevent that from happening, we added a simple \"return;\" statement at the\n             * end of this if block. If you have all the translation files, remove this if\n             * block and the translations should work without any problems.\n             */\n            if ( lang.code !== 'en' )\n            {\n                var message = 'Fuse supports translations through angular-translate module, but currently we do not have any translations other than English language. If you want to help us, send us a message through ThemeForest profile page.';\n\n                $mdToast.show({\n                    template : '<md-toast id=\"language-message\" layout=\"column\" layout-align=\"center start\"><div class=\"md-toast-content\">' + message + '</div></md-toast>',\n                    hideDelay: 7000,\n                    position : 'top right',\n                    parent   : '#content'\n                });\n\n                return;\n            }\n\n            // Change the language\n            $translate.use(lang.code);\n        }\n\n        /**\n         * Toggle horizontal mobile menu\n         */\n        function toggleHorizontalMobileMenu()\n        {\n            vm.bodyEl.toggleClass('ms-navigation-horizontal-mobile-menu-active');\n        }\n\n        /**\n         * Toggle msNavigation folded\n         */\n        function toggleMsNavigationFolded()\n        {\n            msNavigationService.toggleFolded();\n        }\n\n        /**\n         * Search action\n         *\n         * @param query\n         * @returns {Promise}\n         */\n        function search(query)\n        {\n            var navigation = [],\n                flatNavigation = msNavigationService.getFlatNavigation(),\n                deferred = $q.defer();\n\n            // Iterate through the navigation array and\n            // make sure it doesn't have any groups or\n            // none ui-sref items\n            for ( var x = 0; x < flatNavigation.length; x++ )\n            {\n                if ( flatNavigation[x].uisref )\n                {\n                    navigation.push(flatNavigation[x]);\n                }\n            }\n\n            // If there is a query, filter the navigation;\n            // otherwise we will return the entire navigation\n            // list. Not exactly a good thing to do but it's\n            // for demo purposes.\n            if ( query )\n            {\n                navigation = navigation.filter(function (item)\n                {\n                    if ( angular.lowercase(item.title).search(angular.lowercase(query)) > -1 )\n                    {\n                        return true;\n                    }\n                });\n            }\n\n            // Fake service delay\n            $timeout(function ()\n            {\n                deferred.resolve(navigation);\n            }, 1000);\n\n            return deferred.promise;\n        }\n\n        /**\n         * Search result click action\n         *\n         * @param item\n         */\n        function searchResultClick(item)\n        {\n            // If item has a link\n            if ( item.uisref )\n            {\n                // If there are state params,\n                // use them...\n                if ( item.stateParams )\n                {\n                    $state.go(item.state, item.stateParams);\n                }\n                else\n                {\n                    $state.go(item.state);\n                }\n            }\n        }\n    }\n\n})();\n(function ()\n{\n    'use strict';\n\n    angular\n        .module('app.quick-panel')\n        .controller('QuickPanelController', QuickPanelController);\n\n    /** @ngInject */\n    function QuickPanelController(msApi)\n    {\n        var vm = this;\n\n        // Data\n        vm.date = new Date();\n        vm.settings = {\n            notify: true,\n            cloud : false,\n            retro : true\n        };\n\n        msApi.request('quickPanel.activities@get', {},\n            // Success\n            function (response)\n            {\n                vm.activities = response.data;\n            }\n        );\n\n        msApi.request('quickPanel.events@get', {},\n            // Success\n            function (response)\n            {\n                vm.events = response.data;\n            }\n        );\n\n        msApi.request('quickPanel.notes@get', {},\n            // Success\n            function (response)\n            {\n                vm.notes = response.data;\n            }\n        );\n\n        // Methods\n\n        //////////\n    }\n\n})();\n(function ()\n{\n    'use strict';\n\n    angular\n        .module('app.navigation', [])\n        .config(config);\n\n    /** @ngInject */\n    function config()\n    {\n        \n    }\n\n})();\n(function ()\n{\n    'use strict';\n\n    angular\n        .module('app.navigation')\n        .controller('NavigationController', NavigationController);\n\n    /** @ngInject */\n    function NavigationController($scope)\n    {\n        var vm = this;\n\n        // Data\n        vm.bodyEl = angular.element('body');\n        vm.folded = false;\n        vm.msScrollOptions = {\n            suppressScrollX: true\n        };\n\n        // Methods\n        vm.toggleMsNavigationFolded = toggleMsNavigationFolded;\n\n        //////////\n\n        /**\n         * Toggle folded status\n         */\n        function toggleMsNavigationFolded()\n        {\n            vm.folded = !vm.folded;\n        }\n\n        // Close the mobile menu on $stateChangeSuccess\n        $scope.$on('$stateChangeSuccess', function ()\n        {\n            vm.bodyEl.removeClass('ms-navigation-horizontal-mobile-menu-active');\n        });\n    }\n\n})();\n(function ()\n{\n    'use strict';\n\n    /**\n     * Main module of the Fuse\n     */\n    angular\n        .module('fuse', [\n\n            // Core\n            'app.core',\n\n            // Navigation\n            'app.navigation',\n\n            // Toolbar\n            'app.toolbar',\n\n            // Quick panel\n            'app.quick-panel',\n\n            // Sample\n            'app.sample'\n        ]);\n})();\n(function ()\n{\n    'use strict';\n\n    angular\n        .module('fuse')\n        .controller('MainController', MainController);\n\n    /** @ngInject */\n    function MainController($scope, $rootScope)\n    {\n        // Data\n\n        //////////\n\n        // Remove the splash screen\n        $scope.$on('$viewContentAnimationEnded', function (event)\n        {\n            if ( event.targetScope.$id === $scope.$id )\n            {\n                $rootScope.$broadcast('msSplashScreen::remove');\n            }\n        });\n    }\n})();\n(function ()\n{\n    'use strict';\n\n    angular\n        .module('app.core')\n        .run(runBlock);\n\n    /** @ngInject */\n    function runBlock(msUtils, fuseGenerator, fuseConfig)\n    {\n        /**\n         * Generate extra classes based on registered themes so we\n         * can use same colors with non-angular-material elements\n         */\n        fuseGenerator.generate();\n\n        /**\n         * Disable md-ink-ripple effects on mobile\n         * if 'disableMdInkRippleOnMobile' config enabled\n         */\n        if ( fuseConfig.getConfig('disableMdInkRippleOnMobile') && msUtils.isMobile() )\n        {\n            var bodyEl = angular.element('body');\n            bodyEl.attr('md-no-ink', true);\n        }\n\n        /**\n         * Put isMobile() to the html as a class\n         */\n        if ( msUtils.isMobile() )\n        {\n            angular.element('html').addClass('is-mobile');\n        }\n\n        /**\n         * Put browser information to the html as a class\n         */\n        var browserInfo = msUtils.detectBrowser();\n        if ( browserInfo )\n        {\n            var htmlClass = browserInfo.browser + ' ' + browserInfo.version + ' ' + browserInfo.os;\n            angular.element('html').addClass(htmlClass);\n        }\n    }\n})();\n(function ()\n{\n    'use strict';\n\n    angular\n        .module('app.core')\n        .config(config);\n\n    /** @ngInject */\n    function config($ariaProvider, $logProvider, msScrollConfigProvider, $translateProvider, fuseConfigProvider)\n    {\n        // Enable debug logging\n        $logProvider.debugEnabled(true);\n        \n        // angular-translate configuration\n        $translateProvider.useLoader('$translatePartialLoader', {\n            urlTemplate: '{part}/i18n/{lang}.json'\n        });\n        $translateProvider.preferredLanguage('en');\n        $translateProvider.useSanitizeValueStrategy('sanitize');\n\n        /*eslint-disable */\n\n        // ng-aria configuration\n        $ariaProvider.config({\n            tabindex: false\n        });\n\n        // Fuse theme configurations\n        fuseConfigProvider.config({\n            'disableCustomScrollbars'        : false,\n            'disableCustomScrollbarsOnMobile': true,\n            'disableMdInkRippleOnMobile'     : true\n        });\n\n        // msScroll configuration\n        msScrollConfigProvider.config({\n            wheelPropagation: true\n        });\n\n        /*eslint-enable */\n    }\n})();\n(function ()\n{\n    'use strict';\n\n    angular\n        .module('fuse')\n        .run(runBlock);\n\n    /** @ngInject */\n    function runBlock($rootScope, $timeout, $state)\n    {\n        // Activate loading indicator\n        var stateChangeStartEvent = $rootScope.$on('$stateChangeStart', function ()\n        {\n            $rootScope.loadingProgress = true;\n        });\n\n        // De-activate loading indicator\n        var stateChangeSuccessEvent = $rootScope.$on('$stateChangeSuccess', function ()\n        {\n            $timeout(function ()\n            {\n                $rootScope.loadingProgress = false;\n            });\n        });\n\n        // Store state in the root scope for easy access\n        $rootScope.state = $state;\n\n        // Cleanup\n        $rootScope.$on('$destroy', function ()\n        {\n            stateChangeStartEvent();\n            stateChangeSuccessEvent();\n        });\n    }\n})();\n(function ()\n{\n    'use strict';\n\n    angular\n        .module('fuse')\n        .config(routeConfig);\n\n    /** @ngInject */\n    function routeConfig($stateProvider, $urlRouterProvider, $locationProvider)\n    {\n        $locationProvider.html5Mode(true);\n\n        $urlRouterProvider.otherwise('/sample');\n\n        /**\n         * Layout Style Switcher\n         *\n         * This code is here for demonstration purposes.\n         * If you don't need to switch between the layout\n         * styles like in the demo, you can set one manually by\n         * typing the template urls into the `State definitions`\n         * area and remove this code\n         */\n        // Inject $cookies\n        var $cookies;\n\n        angular.injector(['ngCookies']).invoke([\n            '$cookies', function (_$cookies)\n            {\n                $cookies = _$cookies;\n            }\n        ]);\n\n        // Get active layout\n        var layoutStyle = $cookies.get('layoutStyle') || 'verticalNavigation';\n\n        var layouts = {\n            verticalNavigation  : {\n                main      : 'app/core/layouts/vertical-navigation.html',\n                toolbar   : 'app/toolbar/layouts/vertical-navigation/toolbar.html',\n                navigation: 'app/navigation/layouts/vertical-navigation/navigation.html'\n            },\n            verticalNavigationFullwidthToolbar  : {\n                main      : 'app/core/layouts/vertical-navigation-fullwidth-toolbar.html',\n                toolbar   : 'app/toolbar/layouts/vertical-navigation-fullwidth-toolbar/toolbar.html',\n                navigation: 'app/navigation/layouts/vertical-navigation/navigation.html'\n            },\n            verticalNavigationFullwidthToolbar2  : {\n                main      : 'app/core/layouts/vertical-navigation-fullwidth-toolbar-2.html',\n                toolbar   : 'app/toolbar/layouts/vertical-navigation-fullwidth-toolbar-2/toolbar.html',\n                navigation: 'app/navigation/layouts/vertical-navigation-fullwidth-toolbar-2/navigation.html'\n            },\n            horizontalNavigation: {\n                main      : 'app/core/layouts/horizontal-navigation.html',\n                toolbar   : 'app/toolbar/layouts/horizontal-navigation/toolbar.html',\n                navigation: 'app/navigation/layouts/horizontal-navigation/navigation.html'\n            },\n            contentOnly         : {\n                main      : 'app/core/layouts/content-only.html',\n                toolbar   : '',\n                navigation: ''\n            },\n            contentWithToolbar  : {\n                main      : 'app/core/layouts/content-with-toolbar.html',\n                toolbar   : 'app/toolbar/layouts/content-with-toolbar/toolbar.html',\n                navigation: ''\n            }\n        };\n        // END - Layout Style Switcher\n\n        // State definitions\n        $stateProvider\n            .state('app', {\n                abstract: true,\n                views   : {\n                    'main@'         : {\n                        templateUrl: layouts[layoutStyle].main,\n                        controller : 'MainController as vm'\n                    },\n                    'toolbar@app'   : {\n                        templateUrl: layouts[layoutStyle].toolbar,\n                        controller : 'ToolbarController as vm'\n                    },\n                    'navigation@app': {\n                        templateUrl: layouts[layoutStyle].navigation,\n                        controller : 'NavigationController as vm'\n                    }\n                    ,\n                    'quickPanel@app': {\n                        templateUrl: 'app/quick-panel/quick-panel.html',\n                        controller : 'QuickPanelController as vm'\n                    }\n                }\n            });\n    }\n\n})();\n\n(function ()\n{\n    'use strict';\n\n    angular\n        .module('fuse')\n        .controller('IndexController', IndexController);\n\n    /** @ngInject */\n    function IndexController(fuseTheming)\n    {\n        var vm = this;\n\n        // Data\n        vm.themes = fuseTheming.themes;\n\n        //////////\n    }\n})();\n(function ()\n{\n    'use strict';\n\n    angular\n        .module('fuse');\n})();\n\n(function ()\n{\n    'use strict';\n\n    angular\n        .module('fuse')\n        .config(config);\n\n    /** @ngInject */\n    function config()\n    {\n        // Put your custom configurations here\n    }\n\n})();\n(function ()\n{\n    'use strict';\n\n    angular\n        .module('fuse')\n        .factory('api', apiService);\n\n    /** @ngInject */\n    function apiService($resource)\n    {\n        /**\n         * You can use this service to define your API urls. The \"api\" service\n         * is designed to work in parallel with \"apiResolver\" service which you can\n         * find in the \"app/core/services/api-resolver.service.js\" file.\n         *\n         * You can structure your API urls whatever the way you want to structure them.\n         * You can either use very simple definitions, or you can use multi-dimensional\n         * objects.\n         *\n         * Here's a very simple API url definition example:\n         *\n         *      api.getBlogList = $resource('http://api.example.com/getBlogList');\n         *\n         * While this is a perfectly valid $resource definition, most of the time you will\n         * find yourself in a more complex situation where you want url parameters:\n         *\n         *      api.getBlogById = $resource('http://api.example.com/blog/:id', {id: '@id'});\n         *\n         * You can also define your custom methods. Custom method definitions allow you to\n         * add hardcoded parameters to your API calls that you want to sent every time you\n         * make that API call:\n         *\n         *      api.getBlogById = $resource('http://api.example.com/blog/:id', {id: '@id'}, {\n         *         'getFromHomeCategory' : {method: 'GET', params: {blogCategory: 'home'}}\n         *      });\n         *\n         * In addition to these definitions, you can also create multi-dimensional objects.\n         * They are nothing to do with the $resource object, it's just a more convenient\n         * way that we have created for you to packing your related API urls together:\n         *\n         *      api.blog = {\n         *                   list     : $resource('http://api.example.com/blog'),\n         *                   getById  : $resource('http://api.example.com/blog/:id', {id: '@id'}),\n         *                   getByDate: $resource('http://api.example.com/blog/:date', {id: '@date'}, {\n         *                       get: {\n         *                            method: 'GET',\n         *                            params: {\n         *                                getByDate: true\n         *                            }\n         *                       }\n         *                   })\n         *       }\n         *\n         * If you look at the last example from above, we overrode the 'get' method to put a\n         * hardcoded parameter. Now every time we make the \"getByDate\" call, the {getByDate: true}\n         * object will also be sent along with whatever data we are sending.\n         *\n         * All the above methods are using standard $resource service. You can learn more about\n         * it at: https://docs.angularjs.org/api/ngResource/service/$resource\n         *\n         * -----\n         *\n         * After you defined your API urls, you can use them in Controllers, Services and even\n         * in the UIRouter state definitions.\n         *\n         * If we use the last example from above, you can do an API call in your Controllers and\n         * Services like this:\n         *\n         *      function MyController (api)\n         *      {\n         *          // Get the blog list\n         *          api.blog.list.get({},\n         *\n         *              // Success\n         *              function (response)\n         *              {\n         *                  console.log(response);\n         *              },\n         *\n         *              // Error\n         *              function (response)\n         *              {\n         *                  console.error(response);\n         *              }\n         *          );\n         *\n         *          // Get the blog with the id of 3\n         *          var id = 3;\n         *          api.blog.getById.get({'id': id},\n         *\n         *              // Success\n         *              function (response)\n         *              {\n         *                  console.log(response);\n         *              },\n         *\n         *              // Error\n         *              function (response)\n         *              {\n         *                  console.error(response);\n         *              }\n         *          );\n         *\n         *          // Get the blog with the date by using custom defined method\n         *          var date = 112314232132;\n         *          api.blog.getByDate.get({'date': date},\n         *\n         *              // Success\n         *              function (response)\n         *              {\n         *                  console.log(response);\n         *              },\n         *\n         *              // Error\n         *              function (response)\n         *              {\n         *                  console.error(response);\n         *              }\n         *          );\n         *      }\n         *\n         * Because we are directly using $resource service, all your API calls will return a\n         * $promise object.\n         *\n         * --\n         *\n         * If you want to do the same calls in your UI Router state definitions, you need to use\n         * \"apiResolver\" service we have prepared for you:\n         *\n         *      $stateProvider.state('app.blog', {\n         *          url      : '/blog',\n         *          views    : {\n         *               'content@app': {\n         *                   templateUrl: 'app/main/apps/blog/blog.html',\n         *                   controller : 'BlogController as vm'\n         *               }\n         *          },\n         *          resolve  : {\n         *              Blog: function (apiResolver)\n         *              {\n         *                  return apiResolver.resolve('blog.list@get');\n         *              }\n         *          }\n         *      });\n         *\n         *  You can even use parameters with apiResolver service:\n         *\n         *      $stateProvider.state('app.blog.show', {\n         *          url      : '/blog/:id',\n         *          views    : {\n         *               'content@app': {\n         *                   templateUrl: 'app/main/apps/blog/blog.html',\n         *                   controller : 'BlogController as vm'\n         *               }\n         *          },\n         *          resolve  : {\n         *              Blog: function (apiResolver, $stateParams)\n         *              {\n         *                  return apiResolver.resolve('blog.getById@get', {'id': $stateParams.id);\n         *              }\n         *          }\n         *      });\n         *\n         *  And the \"Blog\" object will be available in your BlogController:\n         *\n         *      function BlogController(Blog)\n         *      {\n         *          var vm = this;\n         *\n         *          // Data\n         *          vm.blog = Blog;\n         *\n         *          ...\n         *      }\n         */\n\n        var api = {};\n\n        // Base Url\n        api.baseUrl = 'app/data/';\n\n        // api.sample = $resource(api.baseUrl + 'sample/sample.json');\n\n        return api;\n    }\n\n})();\nangular.module(\"fuse\").run([\"$templateCache\", function($templateCache) {$templateCache.put(\"app/quick-panel/quick-panel.html\",\"<md-content><md-tabs md-no-pagination md-swipe-content md-stretch-tabs=\\\"always\\\"><md-tab><md-tab-label><span \\ntranslate=\\\"QUICKPANEL.TODAY\\\">TODAY</span></md-tab-label><md-tab-body><md-content class=\\\"today-tab scrollable\\\" \\nms-scroll ng-include=\\\"\\'app/quick-panel/tabs/today/today-tab.html\\'\\\"></md-content></md-tab-body></md-tab><md-tab>\\n<md-tab-label><span translate=\\\"QUICKPANEL.CHAT\\\">CHAT</span></md-tab-label><md-tab-body><md-content \\nclass=\\\"chat-tab scrollable\\\" ms-scroll ng-include=\\\"\\'app/quick-panel/tabs/chat/chat-tab.html\\'\\\" \\nng-controller=\\\"ChatTabController as vm\\\"></md-content></md-tab-body></md-tab><md-tab><md-tab-label><span \\ntranslate=\\\"QUICKPANEL.ACTIVITY\\\">ACTIVITY</span></md-tab-label><md-tab-body><md-content class=\\\"activity-tab scrollable\\\" \\nms-scroll ng-include=\\\"\\'app/quick-panel/tabs/activity/activity-tab.html\\'\\\"></md-content></md-tab-body></md-tab></md-tabs>\\n</md-content>\");\n$templateCache.put(\"app/core/layouts/content-only.html\",\"<div id=\\\"layout-content-only\\\" class=\\\"template-layout\\\" layout=\\\"column\\\" flex><md-content id=\\\"content\\\" \\nclass=\\\"animate-slide-up md-background md-hue-1\\\" ui-view=\\\"content\\\" flex></md-content></div>\");\n$templateCache.put(\"app/core/layouts/content-with-toolbar.html\",\"<div id=\\\"layout-content-with-toolbar\\\" class=\\\"template-layout\\\" layout=\\\"column\\\" flex><md-toolbar id=\\\"toolbar\\\" \\nclass=\\\"md-menu-toolbar md-whiteframe-1dp\\\" ui-view=\\\"toolbar\\\"></md-toolbar><md-content id=\\\"content\\\" \\nclass=\\\"animate-slide-up md-background md-hue-1\\\" ui-view=\\\"content\\\" flex></md-content><md-sidenav id=\\\"quick-panel\\\" \\nclass=\\\"md-sidenav-right md-whiteframe-4dp\\\" md-component-id=\\\"quick-panel\\\" ms-scroll ui-view=\\\"quickPanel\\\"></md-sidenav>\\n</div>\");\n$templateCache.put(\"app/core/layouts/horizontal-navigation.html\",\"<div id=\\\"layout-horizontal-navigation\\\" class=\\\"template-layout\\\" layout=\\\"column\\\" flex><md-toolbar id=\\\"toolbar\\\" \\nclass=\\\"md-menu-toolbar\\\" ui-view=\\\"toolbar\\\"></md-toolbar><div id=\\\"horizontal-navigation\\\" class=\\\"md-whiteframe-1dp\\\" \\nui-view=\\\"navigation\\\"></div><div id=\\\"content-container\\\" flex layout=\\\"column\\\"><md-content id=\\\"content\\\" \\nclass=\\\"animate-slide-up md-background md-hue-1\\\" ms-scroll ui-view=\\\"content\\\" flex></md-content></div><md-sidenav \\nid=\\\"quick-panel\\\" class=\\\"md-sidenav-right md-whiteframe-4dp\\\" md-component-id=\\\"quick-panel\\\" ms-scroll \\nui-view=\\\"quickPanel\\\"></md-sidenav></div>\");\n$templateCache.put(\"app/core/layouts/vertical-navigation-fullwidth-toolbar-2.html\",\"<div id=\\\"layout-vertical-navigation-fullwidth-toolbar-2\\\" class=\\\"template-layout\\\" layout=\\\"column\\\" flex><md-toolbar \\nid=\\\"toolbar\\\" class=\\\"md-menu-toolbar md-whiteframe-1dp md-accent\\\" ui-view=\\\"toolbar\\\"></md-toolbar><div \\nid=\\\"main-container\\\" layout=\\\"row\\\" flex><md-sidenav id=\\\"vertical-navigation\\\" class=\\\"md-primary-bg\\\" \\nmd-is-locked-open=\\\"$mdMedia(\\'gt-sm\\')\\\" md-component-id=\\\"navigation\\\" ms-scroll ui-view=\\\"navigation\\\"></md-sidenav><div \\nid=\\\"content-container\\\" flex layout=\\\"column\\\"><md-content id=\\\"content\\\" class=\\\"animate-slide-up md-background md-hue-1\\\" \\nms-scroll ui-view=\\\"content\\\" flex></md-content></div><md-sidenav id=\\\"quick-panel\\\" \\nclass=\\\"md-sidenav-right md-whiteframe-4dp\\\" md-component-id=\\\"quick-panel\\\" ms-scroll ui-view=\\\"quickPanel\\\"></md-sidenav>\\n</div></div>\");\n$templateCache.put(\"app/core/layouts/vertical-navigation-fullwidth-toolbar.html\",\"<div id=\\\"layout-vertical-navigation-fullwidth-toolbar\\\" class=\\\"template-layout\\\" layout=\\\"column\\\" flex><md-toolbar \\nid=\\\"toolbar\\\" class=\\\"md-menu-toolbar md-whiteframe-1dp md-accent\\\" ui-view=\\\"toolbar\\\"></md-toolbar><div \\nid=\\\"main-container\\\" layout=\\\"row\\\" flex><md-sidenav id=\\\"vertical-navigation\\\" class=\\\"md-primary-bg\\\" \\nmd-is-locked-open=\\\"$mdMedia(\\'gt-sm\\')\\\" md-component-id=\\\"navigation\\\" ms-scroll ui-view=\\\"navigation\\\"></md-sidenav><div \\nid=\\\"content-container\\\" flex layout=\\\"column\\\"><md-content id=\\\"content\\\" class=\\\"animate-slide-up md-background md-hue-1\\\" \\nms-scroll ui-view=\\\"content\\\" flex></md-content></div><md-sidenav id=\\\"quick-panel\\\" \\nclass=\\\"md-sidenav-right md-whiteframe-4dp\\\" md-component-id=\\\"quick-panel\\\" ms-scroll ui-view=\\\"quickPanel\\\"></md-sidenav>\\n</div></div>\");\n$templateCache.put(\"app/core/layouts/vertical-navigation.html\",\"<div id=\\\"layout-vertical-navigation\\\" class=\\\"template-layout\\\" layout=\\\"row\\\" flex><md-sidenav id=\\\"vertical-navigation\\\" \\nclass=\\\"md-primary-bg\\\" md-is-locked-open=\\\"$mdMedia(\\'gt-sm\\')\\\" md-component-id=\\\"navigation\\\" ms-scroll \\nui-view=\\\"navigation\\\"></md-sidenav><div id=\\\"content-container\\\" flex layout=\\\"column\\\"><md-toolbar id=\\\"toolbar\\\" \\nclass=\\\"md-menu-toolbar md-whiteframe-1dp\\\" ui-view=\\\"toolbar\\\"></md-toolbar><md-content id=\\\"content\\\" \\nclass=\\\"animate-slide-up md-background md-hue-1\\\" ms-scroll ui-view=\\\"content\\\" flex></md-content></div><md-sidenav \\nid=\\\"quick-panel\\\" class=\\\"md-sidenav-right md-whiteframe-4dp\\\" md-component-id=\\\"quick-panel\\\" ms-scroll \\nui-view=\\\"quickPanel\\\"></md-sidenav></div>\");\n$templateCache.put(\"app/core/theme-options/theme-options.html\",\"<div class=\\\"ms-theme-options-panel\\\" layout=\\\"row\\\" layout-align=\\\"start start\\\"><div \\nclass=\\\"ms-theme-options-panel-button md-primary-bg\\\" ng-click=\\\"toggleOptionsPanel()\\\"><md-icon md-font-icon=\\\"icon-cog\\\" \\nclass=\\\"white-text\\\"></md-icon></div><div class=\\\"ms-theme-options-list\\\" layout=\\\"column\\\"><div class=\\\"theme-option\\\"><div \\nclass=\\\"option-title\\\">Layout Style:</div><md-radio-group layout=\\\"column\\\" ng-model=\\\"vm.layoutStyle\\\" \\nng-change=\\\"vm.updateLayoutStyle()\\\"><md-radio-button value=\\\"verticalNavigation\\\">Vertical Navigation</md-radio-button>\\n<md-radio-button value=\\\"verticalNavigationFullwidthToolbar\\\">Vertical Navigation with Fullwidth Toolbar\\n</md-radio-button><md-radio-button value=\\\"verticalNavigationFullwidthToolbar2\\\">\\nVertical Navigation with Fullwidth Toolbar 2</md-radio-button><md-radio-button value=\\\"horizontalNavigation\\\">\\nHorizontal Navigation</md-radio-button><md-radio-button value=\\\"contentOnly\\\">Content Only</md-radio-button>\\n<md-radio-button value=\\\"contentWithToolbar\\\">Content with Toolbar</md-radio-button></md-radio-group></div><md-divider>\\n</md-divider><div class=\\\"theme-option\\\"><div class=\\\"option-title\\\">Layout Mode:</div><md-radio-group layout=\\\"row\\\" \\nlayout-align=\\\"start center\\\" ng-model=\\\"vm.layoutMode\\\" ng-change=\\\"vm.updateLayoutMode()\\\"><md-radio-button value=\\\"boxed\\\">\\nBoxed</md-radio-button><md-radio-button value=\\\"wide\\\">Wide</md-radio-button></md-radio-group></div><md-divider>\\n</md-divider><div class=\\\"theme-option\\\"><div class=\\\"option-title\\\">Color Palette:</div><md-menu-item \\nng-repeat=\\\"(themeName, theme) in vm.themes.list\\\" class=\\\"theme\\\"><md-button class=\\\"md-raised theme-button\\\" \\naria-label=\\\"{{themeName}}\\\" ng-click=\\\"vm.setActiveTheme(themeName)\\\" \\nng-style=\\\"{\\'background-color\\': theme.primary.color,\\'border-color\\': theme.accent.color,\\'color\\': theme.primary.contrast1}\\\" \\nng-class=\\\"themeName\\\"><span><md-icon ng-style=\\\"{\\'color\\': theme.primary.contrast1}\\\" md-font-icon=\\\"icon-palette\\\">\\n</md-icon><span>{{themeName}}</span></span></md-button></md-menu-item></div></div></div>\");\n$templateCache.put(\"app/main/sample/sample.html\",\"<div id=\\\"forms\\\" class=\\\"page-layout simple fullwidth doc-page\\\" layout=\\\"column\\\"><div class=\\\"content\\\" layout=\\\"column\\\">\\n<ms-form-wizard flex><md-tabs md-dynamic-height md-selected=\\\"msWizard.selectedIndex\\\" md-center-tabs=\\\"true\\\"><md-tab>\\n<md-tab-label><span class=\\\"ms-form-wizard-step-label\\\"><span class=\\\"ms-form-wizard-step-number md-accent-bg\\\" \\nng-if=\\\"wizardStep1.$invalid\\\">1</span> <span class=\\\"ms-form-wizard-step-number md-accent-bg\\\" ng-if=\\\"wizardStep1.$valid\\\">\\n<i class=\\\"icon-check s16\\\"></i> </span><span class=\\\"ms-form-wizard-step-text\\\">Personal Information</span></span>\\n</md-tab-label><md-tab-body><form name=\\\"wizardStep1\\\" class=\\\"md-inline-form\\\" ms-form-wizard-form novalidate><div \\nlayout=\\\"column\\\" layout-gt-xs=\\\"row\\\" flex><md-input-container flex=\\\"100\\\" flex-gt-xs=\\\"50\\\"><input type=\\\"text\\\" \\nname=\\\"firstname\\\" ng-model=\\\"vm.formWizard.firstname\\\" placeholder=\\\"Firstname\\\" required><div \\nng-messages=\\\"wizardStep1.firstname.$error\\\" role=\\\"alert\\\"><div ng-message=\\\"required\\\"><span>Firstname field is required.\\n</span></div></div></md-input-container><md-input-container flex=\\\"100\\\" flex-gt-xs=\\\"50\\\"><input type=\\\"text\\\" \\nname=\\\"lastname\\\" ng-model=\\\"vm.formWizard.lastname\\\" placeholder=\\\"Lastname\\\" required><div \\nng-messages=\\\"wizardStep1.lastname.$error\\\" role=\\\"alert\\\"><div ng-message=\\\"required\\\"><span>Lastname field is required.\\n</span></div></div></md-input-container></div><md-input-container class=\\\"md-block\\\"><input type=\\\"email\\\" name=\\\"email\\\" \\nng-model=\\\"vm.formWizard.email\\\" placeholder=\\\"Email\\\" ng-pattern=\\\"/^.+@.+\\\\..+$/\\\" required><div \\nng-messages=\\\"wizardStep1.email.$error\\\" role=\\\"alert\\\" multiple=\\\"multiple\\\"><div ng-message=\\\"required\\\"><span>\\nEmail field is required</span></div><div ng-message=\\\"pattern\\\"><span>Email must be a valid e-mail address</span></div>\\n</div></md-input-container><div layout=\\\"column\\\" layout-gt-sm=\\\"row\\\" flex><md-input-container flex=\\\"100\\\" flex-gt-xs=\\\"50\\\">\\n<input type=\\\"password\\\" name=\\\"password\\\" ng-model=\\\"vm.formWizard.password\\\" placeholder=\\\"Password\\\" required><div \\nng-messages=\\\"wizardStep1.password.$error\\\" role=\\\"alert\\\"><div ng-message=\\\"required\\\"><span>Password field is required.\\n</span></div></div></md-input-container><md-input-container flex=\\\"100\\\" flex-gt-xs=\\\"50\\\"><input type=\\\"password\\\" \\nname=\\\"passwordConfirm\\\" ng-model=\\\"vm.formWizard.passwordConfirm\\\" placeholder=\\\"Password (Confirm)\\\" required><div \\nng-messages=\\\"wizardStep1.passwordConfirm.$error\\\" role=\\\"alert\\\"><div ng-message=\\\"required\\\"><span>\\nPassword (Confirm) field is required.</span></div></div></md-input-container></div></form></md-tab-body></md-tab>\\n<md-tab ng-disabled=\\\"wizardStep1.$invalid\\\"><md-tab-label><span class=\\\"ms-form-wizard-step-label\\\"><span \\nclass=\\\"ms-form-wizard-step-number md-accent-bg\\\" ng-if=\\\"wizardStep2.$invalid\\\">2</span> <span \\nclass=\\\"ms-form-wizard-step-number md-accent-bg\\\" ng-if=\\\"wizardStep2.$valid\\\"><i class=\\\"icon-check s16\\\"></i> </span><span \\nclass=\\\"ms-form-wizard-step-text\\\">Address</span></span></md-tab-label><md-tab-body><form name=\\\"wizardStep2\\\" \\nms-form-wizard-form novalidate><div layout=\\\"column\\\" layout-gt-xs=\\\"row\\\"><md-input-container flex><label>City</label>\\n<input type=\\\"text\\\" name=\\\"city\\\" ng-model=\\\"vm.formWizard.city\\\"></md-input-container><md-input-container flex><label>State\\n</label><md-select ng-model=\\\"vm.formWizard.state\\\"><md-option ng-repeat=\\\"state in vm.states\\\" value=\\\"{{state.abbrev}}\\\">\\n{{state.abbrev}}</md-option></md-select></md-input-container><md-input-container flex><label>Postal Code</label><input \\nname=\\\"postalcode\\\" ng-model=\\\"vm.formWizard.postalCode\\\" placeholder=\\\"12345\\\" required ng-pattern=\\\"/^[0-9]{5}$/\\\" \\nmd-maxlength=\\\"5\\\"><div ng-messages=\\\"wizardStep2.postalcode.$error\\\" role=\\\"alert\\\" multiple=\\\"multiple\\\"><div \\nng-message=\\\"required\\\"><span>You must supply a postal code.</span></div><div ng-message=\\\"pattern\\\"><span>\\nThat doesn\\'t look like a valid postal code.</span></div><div ng-message=\\\"md-maxlength\\\"><span>\\nPostal code can\\'t be longer than 5 characters.</span></div></div></md-input-container></div><md-input-container \\nclass=\\\"md-block\\\"><label>Address</label><textarea ng-model=\\\"vm.formWizard.address\\\" columns=\\\"1\\\" md-maxlength=\\\"150\\\" \\nrows=\\\"5\\\" required></textarea><div ng-messages=\\\"wizardStep2.address.$error\\\" role=\\\"alert\\\" multiple=\\\"multiple\\\"><div \\nng-message=\\\"required\\\"><span>Address field is required.</span></div><div ng-message=\\\"md-maxlength\\\"><span>\\nAddress can\\'t be longer than 150 characters.</span></div></div></md-input-container></form></md-tab-body></md-tab>\\n<md-tab ng-disabled=\\\"wizardStep1.$invalid || wizardStep2.$invalid\\\"><md-tab-label><span \\nclass=\\\"ms-form-wizard-step-label\\\"><span class=\\\"ms-form-wizard-step-number md-accent-bg\\\" ng-if=\\\"wizardStep3.$invalid\\\">3\\n</span> <span class=\\\"ms-form-wizard-step-number md-accent-bg\\\" ng-if=\\\"wizardStep3.$valid\\\"><i class=\\\"icon-check s16\\\"></i>\\n </span><span class=\\\"ms-form-wizard-step-text\\\">Payment Method</span></span></md-tab-label><md-tab-body><form \\nname=\\\"wizardStep3\\\" ms-form-wizard-form novalidate><md-input-container class=\\\"md-block\\\"><input type=\\\"text\\\" \\nname=\\\"cardholder\\\" ng-model=\\\"vm.formWizard.cardholder\\\" placeholder=\\\"Card Holder\\\" required><div \\nng-messages=\\\"wizardStep3.cardholder.$error\\\" role=\\\"alert\\\"><div ng-message=\\\"required\\\"><span>\\nCard holder field is required.</span></div></div></md-input-container><div layout=\\\"column\\\" layout-gt-xs=\\\"row\\\">\\n<md-input-container flex=\\\"100\\\" flex-gt-xs=\\\"33\\\"><input type=\\\"text\\\" name=\\\"cardnumber\\\" \\nng-model=\\\"vm.formWizard.cardnumber\\\" placeholder=\\\"Card Number\\\" required><div \\nng-messages=\\\"wizardStep3.cardnumber.$error\\\" role=\\\"alert\\\"><div ng-message=\\\"required\\\"><span>\\nCard number field is required.</span></div></div></md-input-container><md-input-container flex=\\\"100\\\" flex-gt-xs=\\\"33\\\">\\n<input type=\\\"text\\\" name=\\\"CC2\\\" ng-model=\\\"vm.formWizard.cc2\\\" placeholder=\\\"CC2\\\" md-maxlength=\\\"3\\\" required><div \\nng-messages=\\\"wizardStep3.cc2.$error\\\" role=\\\"alert\\\" multipl><div ng-message=\\\"required\\\"><span>CC2 field is required.\\n</span></div><div ng-message=\\\"md-maxlength\\\"><span>CC2 can\\'t be longer than 3 characters.</span></div></div>\\n</md-input-container><md-input-container flex=\\\"100\\\" flex-gt-xs=\\\"33\\\"><input type=\\\"text\\\" name=\\\"expirationDate\\\" \\nng-model=\\\"vm.formWizard.expirationDate\\\" placeholder=\\\"Expiration Date\\\" required><div \\nng-messages=\\\"wizardStep3.expirationDate.$error\\\" role=\\\"alert\\\"><div ng-message=\\\"required\\\"><span>\\nExpiration date field is required.</span></div></div></md-input-container></div></form></md-tab-body></md-tab>\\n</md-tabs><div class=\\\"navigation\\\" flex layout=\\\"row\\\" layout-align=\\\"center center\\\"><md-button \\nclass=\\\"md-raised md-accent\\\" ng-click=\\\"msWizard.previousStep()\\\" ng-disabled=\\\"msWizard.isFirstStep()\\\">Previous\\n</md-button><div class=\\\"steps\\\"><span ng-repeat=\\\"form in msWizard.forms\\\" \\nng-class=\\\"{\\'selected md-accent-bg\\':msWizard.selectedIndex === $index}\\\"></span></div><md-button \\nclass=\\\"md-raised md-accent\\\" ng-click=\\\"msWizard.nextStep()\\\" ng-hide=\\\"msWizard.isLastStep()\\\" \\nng-disabled=\\\"msWizard.currentStepInvalid()\\\">Next</md-button><md-button class=\\\"md-raised md-warn\\\" \\nng-click=\\\"vm.sendForm(); msWizard.resetForm();\\\" ng-show=\\\"msWizard.isLastStep()\\\" \\nng-disabled=\\\"msWizard.formsIncomplete()\\\">Send</md-button></div></ms-form-wizard></div></div>\");\n$templateCache.put(\"app/core/directives/ms-info-bar/ms-info-bar.html\",\"<div id=\\\"ms-info-bar\\\" layout=\\\"row\\\" layout-align=\\\"start center\\\" flex><div id=\\\"ms-info-bar-message\\\" ng-transclude flex>\\n</div><md-button id=\\\"ms-info-bar-close\\\" class=\\\"md-icon-button\\\" aria-label=\\\"Close\\\" ng-click=\\\"removeInfoBar()\\\"><md-icon \\nmd-font-icon=\\\"icon-close s24\\\"></md-icon></md-button></div>\");\n$templateCache.put(\"app/core/directives/ms-material-color-picker/ms-material-color-picker.html\",\"<md-menu md-position-mode=\\\"target-right target\\\"><div ng-click=\\\"$mdOpenMenu($event)\\\"><ms-color-picker-button><md-button \\naria-label=\\\"Row Color\\\" md-menu-origin ng-click=\\\"$mdOpenMenu($event)\\\" ng-class=\\\"vm.selectedColor.class\\\"><span \\nng-show=\\\"vm.selectedColor.palette\\\">{{vm.selectedColor.palette}} {{vm.selectedColor.hue}} </span><span \\nng-show=\\\"!vm.selectedColor.palette\\\">Select Color</span></md-button></ms-color-picker-button></div><md-menu-content \\nclass=\\\"ms-material-color-picker-menu-content\\\" layout-column><header \\nng-class=\\\"vm.selectedColor.class || \\'md-accent-bg\\'\\\" class=\\\"md-whiteframe-4dp\\\" layout=\\\"row\\\" \\nlayout-align=\\\"space-between center\\\"><md-button md-prevent-menu-close ng-click=\\\"vm.activateHueSelection(false,false)\\\" \\nclass=\\\"md-icon-button\\\" ng-class=\\\"{\\'hidden\\':!vm.selectedPalette}\\\" aria-label=\\\"Palette\\\"><md-icon \\nmd-font-icon=\\\"icon-arrow-left\\\" class=\\\"s20\\\"></md-icon></md-button><span ng-if=\\\"vm.selectedColor.palette\\\">\\n{{vm.selectedColor.palette}} {{vm.selectedColor.hue}} </span><span ng-if=\\\"!vm.selectedColor.palette\\\">Select Color\\n</span><md-button class=\\\"remove-color-button md-icon-button\\\" ng-click=\\\"vm.removeColor()\\\" aria-label=\\\"Remove Color\\\">\\n<md-icon md-font-icon=\\\"icon-delete\\\" class=\\\"s20\\\"></md-icon></md-button></header><div class=\\\"colors\\\" ms-scroll><div \\nng-show=\\\"!vm.selectedPalette\\\" layout=\\\"row\\\" layout-wrap><div class=\\\"color\\\" ng-class=\\\"\\'md-\\'+palette+\\'-500-bg\\'\\\" \\nng-repeat=\\\"(palette, hues) in vm.palettes\\\" ng-click=\\\"vm.activateHueSelection(palette,hues)\\\" layout=\\\"row\\\" \\nlayout-align=\\\"start end\\\" md-prevent-menu-close md-ink-ripple><span class=\\\"label\\\">{{palette}}</span></div></div><div \\nng-show=\\\"vm.selectedPalette\\\" layout=\\\"row\\\" layout-wrap><div class=\\\"color\\\" \\nng-class=\\\"\\'md-\\'+vm.selectedPalette+\\'-\\'+hue+\\'-bg\\'\\\" ng-repeat=\\\"(hue, values) in vm.selectedHues\\\" \\nng-click=\\\"vm.selectColor(vm.selectedPalette,hue)\\\" layout=\\\"row\\\" layout-align=\\\"start end\\\" md-ink-ripple><span \\nclass=\\\"label\\\">{{hue}} </span><i ng-if=\\\"vm.selectedPalette == vm.selectedColor.palette && hue == vm.selectedColor.hue\\\" \\nclass=\\\"s16 icon-check\\\"></i></div></div></div></md-menu-content></md-menu>\");\n$templateCache.put(\"app/core/directives/ms-search-bar/ms-search-bar.html\",\"<div flex layout=\\\"row\\\" layout-align=\\\"start center\\\"><label for=\\\"ms-search-bar-input\\\"><md-button \\nclass=\\\"ms-search-bar-expander md-icon-button\\\" aria-label=\\\"Expand Search Bar\\\" ng-click=\\\"MsSearchBar.expand()\\\" \\nng-if=\\\"!MsSearchBar.resultsLoading || MsSearchBar.collapsed\\\"><md-icon md-font-icon=\\\"icon-magnify\\\" class=\\\"icon s24\\\">\\n</md-icon></md-button><div class=\\\"ms-search-bar-loader\\\" layout=\\\"row\\\" layout-align=\\\"center center\\\" \\nng-if=\\\"MsSearchBar.resultsLoading && !MsSearchBar.collapsed\\\"><md-progress-circular class=\\\"md-accent\\\" md-diameter=\\\"48\\\" \\nmd-mode=\\\"indeterminate\\\"></md-progress-circular></div></label><input id=\\\"ms-search-bar-input\\\" type=\\\"text\\\" \\nplaceholder=\\\"Search\\\" flex ng-model=\\\"MsSearchBar.query\\\" ng-model-options=\\\"MsSearchBar.queryOptions\\\" \\nng-blur=\\\"MsSearchBar.collapse()\\\" ng-keydown=\\\"MsSearchBar.handleKeydown($event)\\\"><md-button \\nclass=\\\"ms-search-bar-collapser md-icon-button\\\" ng-click=\\\"MsSearchBar.collapse()\\\" aria-label=\\\"Collapse Search Bar\\\">\\n<md-icon md-font-icon=\\\"icon-close\\\" class=\\\"icon s24\\\"></md-icon></md-button><div class=\\\"ms-search-bar-results\\\" \\nng-if=\\\"MsSearchBar.results\\\" ms-scroll><div class=\\\"no-results\\\" ng-if=\\\"MsSearchBar.results.length === 0\\\">No Results!\\n</div><div class=\\\"result\\\" ng-repeat=\\\"result in MsSearchBar.results\\\" ng-click=\\\"MsSearchBar.handleResultClick(result)\\\" \\nng-mouseenter=\\\"MsSearchBar.handleMouseenter($index)\\\" ng-mousedown=\\\"MsSearchBar.absorbEvent($event)\\\" \\nng-class=\\\"{\\'selected\\': $index == MsSearchBar.selectedResultIndex}\\\" md-ink-ripple><div layout=\\\"row\\\" \\nlayout-align=\\\"start center\\\"><div class=\\\"icon-container\\\" layout=\\\"row\\\" layout-align=\\\"center center\\\"><i \\nng-if=\\\"result.icon\\\" class=\\\"{{result.icon}}\\\"></i><div ng-if=\\\"!result.icon\\\" class=\\\"square md-accent-bg\\\"></div></div><div>\\n<div class=\\\"title\\\">{{result.title}}</div><div class=\\\"description\\\" ng-if=\\\"result.description\\\">{{result.description}}\\n</div></div></div></div></div></div>\");\n$templateCache.put(\"app/core/directives/ms-shortcuts/ms-shortcuts.html\",\"<div class=\\\"shortcuts-container\\\" layout=\\\"row\\\" layout-align=\\\"start center\\\" flex><div class=\\\"shortcuts\\\" layout=\\\"row\\\" \\nlayout-align=\\\"start center\\\" ms-scroll ng-if=\\\"MsShortcuts.shortcuts.length > 0\\\" \\nng-sortable=\\\"MsShortcuts.sortableOptions\\\"><div ng-repeat=\\\"shortcut in MsShortcuts.shortcuts\\\" layout=\\\"row\\\" \\nlayout-align=\\\"start center\\\"><md-button class=\\\"md-icon-button shortcut\\\" aria-label=\\\"{{shortcut.title}}\\\" \\nui-sref=\\\"{{shortcut.uisref}}\\\"><md-icon ng-if=\\\"shortcut.icon\\\" md-font-icon=\\\"{{shortcut.icon}}\\\" class=\\\"icon s24\\\">\\n</md-icon><div ng-if=\\\"!shortcut.icon\\\" class=\\\"first-letter\\\">{{shortcut.title.charAt(0)}}</div><md-tooltip \\nmd-direction=\\\"bottom\\\">{{shortcut.title}}</md-tooltip></md-button></div></div><md-menu md-offset=\\\"8 56\\\"><md-button \\nclass=\\\"md-icon-button add-shortcut-button\\\" aria-label=\\\"Add shortcut\\\" ng-click=\\\"$mdOpenMenu($event)\\\"><md-icon \\nmd-menu-origin md-font-icon=\\\"icon-star\\\" class=\\\"icon amber-600-fg s20\\\"></md-icon><md-tooltip md-direction=\\\"bottom\\\">\\nClick to add/remove shortcut</md-tooltip></md-button><md-menu-content><div id=\\\"ms-shortcut-add-menu\\\"><div \\nclass=\\\"shortcut-search\\\" layout=\\\"row\\\" layout-align=\\\"start center\\\"><div class=\\\"search-icon\\\" layout=\\\"row\\\" \\nlayout-align=\\\"center center\\\" ng-if=\\\"!MsShortcuts.resultsLoading\\\"><md-icon md-menu-align-target \\nmd-font-icon=\\\"icon-magnify\\\" class=\\\"icon s24\\\"></md-icon></div><div class=\\\"shortcut-loader\\\" layout=\\\"row\\\" \\nlayout-align=\\\"center center\\\" ng-if=\\\"MsShortcuts.resultsLoading\\\"><md-progress-circular class=\\\"md-accent\\\" \\nmd-diameter=\\\"40\\\" md-mode=\\\"indeterminate\\\"></md-progress-circular></div><input type=\\\"text\\\" placeholder=\\\"Search\\\" flex \\nng-model=\\\"MsShortcuts.query\\\" ng-model-options=\\\"MsShortcuts.queryOptions\\\" \\nng-keydown=\\\"MsShortcuts.handleKeydown($event)\\\"></div><div class=\\\"results\\\" ng-if=\\\"MsShortcuts.results\\\" ms-scroll><div \\nclass=\\\"no-results\\\" ng-if=\\\"MsShortcuts.results.length === 0\\\">No Results!</div><div class=\\\"result\\\" \\nng-repeat=\\\"result in MsShortcuts.results\\\" ng-click=\\\"MsShortcuts.handleResultClick(result)\\\" \\nng-mouseenter=\\\"MsShortcuts.handleMouseenter($index)\\\" ng-mousedown=\\\"MsShortcuts.absorbEvent($event)\\\" \\nng-class=\\\"{\\'selected\\': $index == MsShortcuts.selectedResultIndex}\\\" md-prevent-menu-close=\\\"md-prevent-menu-close\\\" \\nmd-ink-ripple><div layout=\\\"row\\\" layout-align=\\\"start space-between\\\"><div layout=\\\"row\\\" layout-align=\\\"start center\\\" flex>\\n<div class=\\\"icon-container\\\" layout=\\\"row\\\" layout-align=\\\"center center\\\"><i ng-if=\\\"result.icon\\\" class=\\\"{{result.icon}}\\\">\\n</i><div ng-if=\\\"!result.icon\\\" class=\\\"square md-accent-bg\\\"></div></div><div><div class=\\\"title\\\">{{result.title}}</div>\\n</div></div><md-icon md-font-icon=\\\"icon-pin\\\" class=\\\"icon s18\\\" ng-class=\\\"{\\'fade-text\\': !result.hasShortcut}\\\"></md-icon>\\n</div></div></div></div></md-menu-content></md-menu></div>\");\n$templateCache.put(\"app/navigation/layouts/horizontal-navigation/navigation.html\",\"<div layout=\\\"row\\\" layout-align=\\\"start center\\\"><ms-navigation-horizontal></ms-navigation-horizontal></div>\");\n$templateCache.put(\"app/navigation/layouts/vertical-navigation/navigation.html\",\"<md-toolbar class=\\\"navigation-header md-whiteframe-1dp\\\" layout=\\\"row\\\" layout-align=\\\"space-between center\\\"><div \\nclass=\\\"logo\\\" layout=\\\"row\\\" layout-align=\\\"start center\\\"><span class=\\\"logo-image\\\">B</span> <span class=\\\"logo-text\\\">Brandix\\n</span></div><md-icon class=\\\"fold-toggle s18\\\" md-font-icon=\\\"icon-backburger\\\" hide show-gt-sm \\nng-click=\\\"vm.toggleMsNavigationFolded()\\\"></md-icon></md-toolbar><ms-navigation class=\\\"scrollable\\\" folded=\\\"vm.folded\\\" \\nms-scroll=\\\"vm.msScrollOptions\\\"></ms-navigation>\");\n$templateCache.put(\"app/navigation/layouts/vertical-navigation-fullwidth-toolbar-2/navigation.html\",\"<ms-navigation class=\\\"scrollable\\\" folded=\\\"vm.folded\\\" ms-scroll=\\\"vm.msScrollOptions\\\"></ms-navigation>\");\n$templateCache.put(\"app/quick-panel/tabs/activity/activity-tab.html\",\"<md-list class=\\\"friends\\\"><md-subheader class=\\\"md-no-sticky\\\"><span translate=\\\"QUICKPANEL.FRIENDS\\\">Friends</span>\\n</md-subheader><md-list-item class=\\\"friend md-3-line\\\" ng-repeat=\\\"friend in vm.activities.friends\\\"><img \\nng-src=\\\"{{friend.avatar}}\\\" class=\\\"md-avatar\\\" alt=\\\"{{friend.name}}\\\"><div class=\\\"status {{friend.status}}\\\"></div><div \\nng-if=\\\"contact.unread\\\" class=\\\"md-accent-bg unread-message-count\\\">{{contact.unread}}</div><div \\nclass=\\\"md-list-item-text\\\"><h3 class=\\\"message\\\">{{friend.message}}</h3><p class=\\\"time\\\">{{friend.time}}</p></div>\\n</md-list-item></md-list><md-divider></md-divider><md-list class=\\\"servers\\\"><md-subheader class=\\\"md-no-sticky\\\"><span \\ntranslate=\\\"QUICKPANEL.APP_SERVERS\\\">Application Servers</span></md-subheader><md-list-item class=\\\"server md-3-line\\\" \\nng-repeat=\\\"server in vm.activities.servers\\\"><md-icon md-font-icon=\\\"icon-checkbox-blank-circle\\\" class=\\\"s16 status\\\" \\nng-class=\\\"server.status\\\"></md-icon><div class=\\\"md-list-item-text\\\"><h3>{{server.location}}</h3><p>{{server.detail}}</p>\\n</div></md-list-item></md-list><md-divider></md-divider><md-list class=\\\"stats\\\"><md-subheader class=\\\"md-no-sticky\\\"><span\\n translate=\\\"QUICKPANEL.USER_STATS\\\">User Stats</span></md-subheader><md-list-item class=\\\"stat md-2-line\\\" \\nng-repeat=\\\"stat in vm.activities.stats\\\"><div class=\\\"md-list-item-text\\\"><span>\\n{{stat.title}} ({{stat.current}} / {{stat.total}})</span><md-progress-linear ng-class=\\\"stat.status\\\" \\nmd-mode=\\\"determinate\\\" value=\\\"{{stat.percent}}\\\"></md-progress-linear></div></md-list-item></md-list>\");\n$templateCache.put(\"app/quick-panel/tabs/chat/chat-tab.html\",\"<div class=\\\"main animate-slide-left\\\" ng-hide=\\\"vm.chatActive\\\"><md-list class=\\\"recent\\\"><md-subheader \\nclass=\\\"md-no-sticky\\\"><span translate=\\\"QUICKPANEL.RECENT\\\">Recent</span></md-subheader><md-list-item \\nclass=\\\"contact md-3-line\\\" ng-repeat=\\\"contact in vm.contacts.recent\\\" ng-click=\\\"vm.toggleChat(contact)\\\"><img \\nng-src=\\\"{{contact.avatar}}\\\" class=\\\"md-avatar\\\" alt=\\\"{{contact.name}}\\\"><div class=\\\"status {{contact.status}}\\\"></div><div \\nng-if=\\\"contact.unread\\\" class=\\\"md-accent-bg unread-message-count\\\">{{contact.unread}}</div><div \\nclass=\\\"md-list-item-text\\\"><h3>{{contact.name}}</h3><p class=\\\"last-message\\\">{{contact.lastMessage}}</p></div>\\n</md-list-item></md-list><md-divider></md-divider><md-list class=\\\"all\\\"><md-subheader class=\\\"md-no-sticky\\\"><span \\ntranslate=\\\"QUICKPANEL.START_NEW_CHAT\\\">Start New Chat</span></md-subheader><md-list-item class=\\\"contact\\\" \\nng-repeat=\\\"contact in vm.contacts.all\\\" ng-click=\\\"vm.toggleChat(contact)\\\"><img ng-src=\\\"{{contact.avatar}}\\\" \\nclass=\\\"md-avatar\\\" alt=\\\"{{contact.name}}\\\"><div class=\\\"status {{contact.status}}\\\"></div><div class=\\\"md-list-item-text\\\">\\n<h3>{{contact.name}}</h3></div></md-list-item></md-list><md-divider></md-divider></div><div \\nclass=\\\"chat animate-slide-right\\\" ng-show=\\\"vm.chatActive\\\" layout=\\\"column\\\"><md-toolbar class=\\\"md-accent\\\"><div \\nclass=\\\"md-toolbar-tools\\\" layout=\\\"row\\\" layout-align=\\\"space-between center\\\"><div layout=\\\"row\\\" \\nlayout-align=\\\"start center\\\"><md-button class=\\\"md-icon-button\\\" ng-click=\\\"vm.toggleChat()\\\" aria-label=\\\"Back\\\" translate \\ntranslate-attr-aria-label=\\\"QUICKPANEL.BACK\\\"><md-icon md-font-icon=\\\"icon-keyboard-backspace\\\"></md-icon></md-button><h4>\\n<span>{{vm.chat.contact.name}}</span></h4></div><div layout=\\\"row\\\" layout-align=\\\"end center\\\"><md-button \\nclass=\\\"md-icon-button\\\" aria-label=\\\"Call\\\" translate translate-attr-aria-label=\\\"QUICKPANEL.CALL\\\"><md-icon \\nmd-font-icon=\\\"icon-phone\\\"></md-icon></md-button><md-button class=\\\"md-icon-button\\\" aria-label=\\\"More\\\" translate \\ntranslate-attr-aria-label=\\\"QUICKPANEL.MORE\\\"><md-icon md-font-icon=\\\"icon-dots-vertical\\\"></md-icon></md-button></div>\\n</div></md-toolbar><md-content flex layout-paddings ms-scroll id=\\\"chat-dialog\\\"><div layout=\\\"row\\\" \\nng-repeat=\\\"dialog in vm.chat.contact.dialog\\\" class=\\\"md-padding message-row\\\" ng-class=\\\"dialog.who\\\"><img \\nng-if=\\\"dialog.who ===\\'contact\\'\\\" ng-src=\\\"{{vm.chat.contact.avatar}}\\\" class=\\\"avatar\\\" alt=\\\"{{vm.chat.contact.name}}\\\"> <img\\n ng-if=\\\"dialog.who ===\\'user\\'\\\" class=\\\"avatar\\\" src=\\\"assets/images/avatars/profile.jpg\\\"><div class=\\\"bubble\\\" flex><div \\nclass=\\\"message\\\">{{dialog.message}}</div><div class=\\\"time secondary-text\\\">{{dialog.time}}</div></div></div></md-content>\\n<form ng-submit=\\\"vm.reply()\\\" layout=\\\"row\\\" class=\\\"reply\\\" layout-align=\\\"start center\\\"><textarea \\nng-keyup=\\\"$event.keyCode == 13 ? vm.reply() : null\\\" flex ng-model=\\\"vm.replyMessage\\\" \\nplaceholder=\\\"Type and hit enter to send message\\\" translate translate-attr-placeholder=\\\"QUICKPANEL.REPLY_PLACEHOLDER\\\">\\n</textarea><md-button class=\\\"md-fab\\\" type=\\\"submit\\\" aria-label=\\\"Send message\\\" translate \\ntranslate-attr-aria-label=\\\"QUICKPANEL.SEND_MESSAGE\\\"><md-icon md-font-icon=\\\"icon-send\\\"></md-icon></md-button></form>\\n</div>\");\n$templateCache.put(\"app/quick-panel/tabs/today/today-tab.html\",\"<md-list class=\\\"date\\\"><md-subheader class=\\\"md-no-sticky\\\"><span translate=\\\"QUICKPANEL.TODAY\\\">Today</span></md-subheader>\\n<md-list-item class=\\\"md-display-1 md-2-line\\\" layout=\\\"column\\\" layout-align=\\\"start start\\\"><div class=\\\"secondary-text\\\">\\n<div>{{vm.date | date:\\'EEEE\\'}}</div><div layout=\\\"row\\\" layout-align=\\\"start start\\\"><span>{{vm.date | date:\\'d\\'}}</span> \\n<span class=\\\"md-subhead\\\">th</span> <span>{{vm.date | date:\\'MMMM\\'}}</span></div></div></md-list-item></md-list>\\n<md-divider></md-divider><md-list><md-subheader class=\\\"md-no-sticky\\\"><span translate=\\\"QUICKPANEL.EVENTS\\\">Events</span>\\n</md-subheader><md-list-item class=\\\"md-2-line\\\" ng-repeat=\\\"event in vm.events\\\" ng-click=\\\"dummyFunction()\\\"><div \\nclass=\\\"md-list-item-text\\\"><h3>{{event.title}}</h3><p>{{event.detail}}</p></div></md-list-item></md-list><md-divider>\\n</md-divider><md-list><md-subheader class=\\\"md-no-sticky\\\"><span translate=\\\"QUICKPANEL.NOTES\\\">Notes</span></md-subheader>\\n<md-list-item class=\\\"md-2-line\\\" ng-repeat=\\\"note in vm.notes\\\" ng-click=\\\"dummyFunction()\\\"><div class=\\\"md-list-item-text\\\">\\n<h3>{{note.title}}</h3><p>{{note.detail}}</p></div></md-list-item></md-list><md-divider></md-divider><md-list>\\n<md-subheader class=\\\"md-no-sticky\\\"><span translate=\\\"QUICKPANEL.QUICK_SETTINGS\\\">Quick Settings</span></md-subheader>\\n<md-list-item><h3 translate=\\\"QUICKPANEL.NOTIFICATIONS\\\">Notifications</h3><md-switch class=\\\"md-secondary\\\" \\nng-model=\\\"vm.settings.notify\\\" aria-label=\\\"Notifications\\\" translate \\ntranslate-attr-aria-label=\\\"QUICKPANEL.NOTIFICATIONS\\\"></md-switch></md-list-item><md-list-item><h3 \\ntranslate=\\\"QUICKPANEL.CLOUD_SYNC\\\">Cloud Sync</h3><md-switch class=\\\"md-secondary\\\" ng-model=\\\"vm.settings.cloud\\\" \\naria-label=\\\"Cloud Sync\\\" translate translate-attr-aria-label=\\\"QUICKPANEL.CLOUD_SYNC\\\"></md-switch></md-list-item>\\n<md-list-item><h3 translate=\\\"QUICKPANEL.RETRO_THRUSTERS\\\">Retro Thrusters</h3><md-switch class=\\\"md-secondary md-warn\\\" \\nng-model=\\\"vm.settings.retro\\\" aria-label=\\\"Retro Thrusters\\\" translate \\ntranslate-attr-aria-label=\\\"QUICKPANEL.RETRO_THRUSTERS\\\"></md-switch></md-list-item></md-list>\");\n$templateCache.put(\"app/toolbar/layouts/content-with-toolbar/toolbar.html\",\"<div layout=\\\"row\\\" layout-align=\\\"space-between center\\\"><div layout=\\\"row\\\" layout-align=\\\"start center\\\"><div class=\\\"logo\\\" \\nlayout=\\\"row\\\" layout-align=\\\"start center\\\"><span class=\\\"logo-image\\\">F</span> <span class=\\\"logo-text\\\">FUSE</span></div>\\n<div class=\\\"toolbar-separator\\\"></div><ms-shortcuts></ms-shortcuts><div class=\\\"toolbar-separator\\\"></div></div><div \\nlayout=\\\"row\\\" layout-align=\\\"start center\\\"><md-progress-circular id=\\\"toolbar-progress\\\" ng-if=\\\"$root.loadingProgress\\\" \\nclass=\\\"md-accent\\\" md-mode=\\\"indeterminate\\\" md-diameter=\\\"64\\\"></md-progress-circular><div class=\\\"toolbar-separator\\\"></div>\\n<md-menu-bar id=\\\"user-menu\\\"><md-menu md-position-mode=\\\"left bottom\\\"><md-button class=\\\"user-button\\\" \\nng-click=\\\"$mdOpenMenu()\\\" aria-label=\\\"User settings\\\" translate translate-attr-aria-label=\\\"TOOLBAR.USER_SETTINGS\\\"><div \\nlayout=\\\"row\\\" layout-align=\\\"space-between center\\\"><div class=\\\"avatar-wrapper\\\"><img md-menu-align-target class=\\\"avatar\\\" \\nsrc=\\\"assets/images/avatars/profile.jpg\\\"><md-icon md-font-icon ng-class=\\\"vm.userStatus.icon\\\" \\nng-style=\\\"{\\'color\\': vm.userStatus.color }\\\" class=\\\"icon status s16\\\"></md-icon></div><span class=\\\"username\\\" hide-sm>\\nJohn Doe</span><md-icon md-font-icon=\\\"icon-chevron-down\\\" class=\\\"icon s16\\\" hide-sm></md-icon></div></md-button>\\n<md-menu-content width=\\\"3\\\"><md-menu-item class=\\\"md-indent\\\" ui-sref=\\\"app.pages_profile\\\"><md-icon \\nmd-font-icon=\\\"icon-account\\\" class=\\\"icon\\\"></md-icon><md-button>My Profile</md-button></md-menu-item><md-menu-item \\nclass=\\\"md-indent\\\" ui-sref=\\\"app.mail\\\"><md-icon md-font-icon=\\\"icon-email\\\" class=\\\"icon\\\"></md-icon><md-button>Inbox\\n</md-button></md-menu-item><md-menu-item class=\\\"md-indent\\\"><md-icon md-font-icon ng-class=\\\"vm.userStatus.icon\\\" \\nng-style=\\\"{\\'color\\': vm.userStatus.color }\\\" class=\\\"icon\\\"></md-icon><md-menu id=\\\"user-status-menu\\\"><md-button \\nng-click=\\\"$mdOpenMenu()\\\" class=\\\"status\\\" ng-class=\\\"vm.userStatus.class\\\">{{vm.userStatus.title}}</md-button>\\n<md-menu-content width=\\\"2\\\"><md-menu-item class=\\\"status md-indent\\\" ng-class=\\\"{\\'selected\\': status === vm.userStatus}\\\" \\nng-repeat=\\\"status in vm.userStatusOptions\\\"><md-icon md-font-icon=\\\"{{status.icon}}\\\" ng-style=\\\"{\\'color\\': status.color }\\\" \\nclass=\\\"icon\\\"></md-icon><md-button ng-click=\\\"vm.setUserStatus(status)\\\">{{status.title}}</md-button></md-menu-item>\\n</md-menu-content></md-menu></md-menu-item><md-menu-divider></md-menu-divider><md-menu-item class=\\\"md-indent\\\"><md-icon \\nmd-font-icon=\\\"icon-logout\\\" class=\\\"icon\\\"></md-icon><md-button ng-click=\\\"vm.logout()\\\">Logout</md-button></md-menu-item>\\n</md-menu-content></md-menu></md-menu-bar><div class=\\\"toolbar-separator\\\"></div><ms-search-bar \\non-search=\\\"vm.search(query)\\\" on-result-click=\\\"vm.searchResultClick(item)\\\" debounce=\\\"300\\\"></ms-search-bar><div \\nclass=\\\"toolbar-separator\\\"></div><md-menu id=\\\"language-menu\\\" md-offset=\\\"0 72\\\" md-position-mode=\\\"target-right target\\\">\\n<md-button class=\\\"language-button\\\" ng-click=\\\"$mdOpenMenu()\\\" aria-label=\\\"Language\\\" md-menu-origin md-menu-align-target>\\n<div layout=\\\"row\\\" layout-align=\\\"center center\\\"><img class=\\\"flag\\\" \\nng-src=\\\"assets/images/flags/{{vm.selectedLanguage.flag}}.png\\\"> <span class=\\\"iso\\\">{{vm.selectedLanguage.code}}</span>\\n</div></md-button><md-menu-content width=\\\"3\\\" id=\\\"language-menu-content\\\"><md-menu-item \\nng-repeat=\\\"(iso, lang) in vm.languages\\\"><md-button ng-click=\\\"vm.changeLanguage(lang)\\\" aria-label=\\\"{{lang.title}}\\\" \\ntranslate translate-attr-aria-label=\\\"{{lang.title}}\\\"><span layout=\\\"row\\\" layout-align=\\\"start center\\\"><img class=\\\"flag\\\" \\nng-src=\\\"assets/images/flags/{{lang.flag}}.png\\\"> <span translate=\\\"{{lang.translation}}\\\">{{lang.title}}</span></span>\\n</md-button></md-menu-item></md-menu-content></md-menu><div class=\\\"toolbar-separator\\\"></div><md-button \\nid=\\\"quick-panel-toggle\\\" class=\\\"md-icon-button\\\" ng-click=\\\"vm.toggleSidenav(\\'quick-panel\\')\\\" \\naria-label=\\\"Toggle quick panel\\\" translate translate-attr-aria-label=\\\"TOOLBAR.TOGGLE_QUICK_PANEL\\\"><md-icon \\nmd-font-icon=\\\"icon-format-list-bulleted\\\" class=\\\"icon\\\"></md-icon></md-button></div></div>\");\n$templateCache.put(\"app/toolbar/layouts/horizontal-navigation/toolbar.html\",\"<div layout=\\\"row\\\" layout-align=\\\"space-between center\\\"><div layout=\\\"row\\\" layout-align=\\\"start center\\\"><div \\nclass=\\\"navigation-toggle\\\" hide-gt-sm><md-button class=\\\"md-icon-button\\\" ng-click=\\\"vm.toggleHorizontalMobileMenu()\\\" \\naria-label=\\\"Toggle Mobile Navigation\\\"><md-icon md-font-icon=\\\"icon-menu\\\"></md-icon></md-button></div><div class=\\\"logo\\\" \\nlayout=\\\"row\\\" layout-align=\\\"start center\\\"><span class=\\\"logo-image\\\">F</span> <span class=\\\"logo-text\\\">FUSE</span></div>\\n<div class=\\\"toolbar-separator\\\"></div><ms-shortcuts></ms-shortcuts></div><div layout=\\\"row\\\" layout-align=\\\"start center\\\">\\n<md-progress-circular id=\\\"toolbar-progress\\\" ng-if=\\\"$root.loadingProgress\\\" class=\\\"md-accent\\\" md-mode=\\\"indeterminate\\\" \\nmd-diameter=\\\"64\\\"></md-progress-circular><md-menu-bar id=\\\"user-menu\\\"><md-menu md-position-mode=\\\"left bottom\\\"><md-button \\nclass=\\\"user-button\\\" ng-click=\\\"$mdOpenMenu()\\\" aria-label=\\\"User settings\\\" translate \\ntranslate-attr-aria-label=\\\"TOOLBAR.USER_SETTINGS\\\"><div layout=\\\"row\\\" layout-align=\\\"space-between center\\\"><div \\nclass=\\\"avatar-wrapper\\\"><img md-menu-align-target class=\\\"avatar\\\" src=\\\"assets/images/avatars/profile.jpg\\\"><md-icon \\nmd-font-icon ng-class=\\\"vm.userStatus.icon\\\" ng-style=\\\"{\\'color\\': vm.userStatus.color }\\\" class=\\\"icon status s16\\\">\\n</md-icon></div><span class=\\\"username\\\" hide-sm>John Doe</span><md-icon md-font-icon=\\\"icon-chevron-down\\\" \\nclass=\\\"icon s16\\\" hide-sm></md-icon></div></md-button><md-menu-content width=\\\"3\\\"><md-menu-item class=\\\"md-indent\\\" \\nui-sref=\\\"app.pages_profile\\\"><md-icon md-font-icon=\\\"icon-account\\\" class=\\\"icon\\\"></md-icon><md-button>My Profile\\n</md-button></md-menu-item><md-menu-item class=\\\"md-indent\\\" ui-sref=\\\"app.mail\\\"><md-icon md-font-icon=\\\"icon-email\\\" \\nclass=\\\"icon\\\"></md-icon><md-button>Inbox</md-button></md-menu-item><md-menu-item class=\\\"md-indent\\\"><md-icon \\nmd-font-icon ng-class=\\\"vm.userStatus.icon\\\" ng-style=\\\"{\\'color\\': vm.userStatus.color }\\\" class=\\\"icon\\\"></md-icon><md-menu \\nid=\\\"user-status-menu\\\"><md-button ng-click=\\\"$mdOpenMenu()\\\" class=\\\"status\\\" ng-class=\\\"vm.userStatus.class\\\">\\n{{vm.userStatus.title}}</md-button><md-menu-content width=\\\"2\\\"><md-menu-item class=\\\"status md-indent\\\" \\nng-class=\\\"{\\'selected\\': status === vm.userStatus}\\\" ng-repeat=\\\"status in vm.userStatusOptions\\\"><md-icon \\nmd-font-icon=\\\"{{status.icon}}\\\" ng-style=\\\"{\\'color\\': status.color }\\\" class=\\\"icon\\\"></md-icon><md-button \\nng-click=\\\"vm.setUserStatus(status)\\\">{{status.title}}</md-button></md-menu-item></md-menu-content></md-menu>\\n</md-menu-item><md-menu-divider></md-menu-divider><md-menu-item class=\\\"md-indent\\\"><md-icon md-font-icon=\\\"icon-logout\\\" \\nclass=\\\"icon\\\"></md-icon><md-button ng-click=\\\"vm.logout()\\\">Logout</md-button></md-menu-item></md-menu-content></md-menu>\\n</md-menu-bar><ms-search-bar on-search=\\\"vm.search(query)\\\" on-result-click=\\\"vm.searchResultClick(item)\\\" debounce=\\\"300\\\">\\n</ms-search-bar><md-menu id=\\\"language-menu\\\" md-offset=\\\"0 72\\\" md-position-mode=\\\"target-right target\\\"><md-button \\nclass=\\\"language-button\\\" ng-click=\\\"$mdOpenMenu()\\\" aria-label=\\\"Language\\\" md-menu-origin md-menu-align-target><div \\nlayout=\\\"row\\\" layout-align=\\\"center center\\\"><img class=\\\"flag\\\" \\nng-src=\\\"assets/images/flags/{{vm.selectedLanguage.flag}}.png\\\"> <span class=\\\"iso\\\">{{vm.selectedLanguage.code}}</span>\\n</div></md-button><md-menu-content width=\\\"3\\\" id=\\\"language-menu-content\\\"><md-menu-item \\nng-repeat=\\\"(iso, lang) in vm.languages\\\"><md-button ng-click=\\\"vm.changeLanguage(lang)\\\" aria-label=\\\"{{lang.title}}\\\" \\ntranslate translate-attr-aria-label=\\\"{{lang.title}}\\\"><span layout=\\\"row\\\" layout-align=\\\"start center\\\"><img class=\\\"flag\\\" \\nng-src=\\\"assets/images/flags/{{lang.flag}}.png\\\"> <span translate=\\\"{{lang.translation}}\\\">{{lang.title}}</span></span>\\n</md-button></md-menu-item></md-menu-content></md-menu><md-button id=\\\"quick-panel-toggle\\\" class=\\\"md-icon-button\\\" \\nng-click=\\\"vm.toggleSidenav(\\'quick-panel\\')\\\" aria-label=\\\"Toggle quick panel\\\" translate \\ntranslate-attr-aria-label=\\\"TOOLBAR.TOGGLE_QUICK_PANEL\\\"><md-icon md-font-icon=\\\"icon-format-list-bulleted\\\" class=\\\"icon\\\">\\n</md-icon></md-button></div></div>\");\n$templateCache.put(\"app/toolbar/layouts/vertical-navigation/toolbar.html\",\"<div layout=\\\"row\\\" layout-align=\\\"start center\\\"><div layout=\\\"row\\\" layout-align=\\\"start center\\\" flex><md-button \\nid=\\\"navigation-toggle\\\" class=\\\"md-icon-button\\\" ng-click=\\\"vm.toggleSidenav(\\'navigation\\')\\\" hide-gt-sm \\naria-label=\\\"Toggle navigation\\\" translate translate-attr-aria-label=\\\"TOOLBAR.TOGGLE_NAVIGATION\\\"><md-icon \\nmd-font-icon=\\\"icon-menu\\\" class=\\\"icon\\\"></md-icon></md-button><div class=\\\"toolbar-separator\\\"></div></div><div \\nlayout=\\\"row\\\" layout-align=\\\"start center\\\"><md-progress-circular id=\\\"toolbar-progress\\\" ng-if=\\\"$root.loadingProgress\\\" \\nclass=\\\"md-accent\\\" md-mode=\\\"indeterminate\\\" md-diameter=\\\"64\\\"></md-progress-circular><md-menu-bar id=\\\"user-menu\\\"><md-menu \\nmd-position-mode=\\\"left bottom\\\"><md-button class=\\\"user-button\\\" ng-click=\\\"$mdOpenMenu()\\\" aria-label=\\\"User settings\\\" \\ntranslate translate-attr-aria-label=\\\"TOOLBAR.USER_SETTINGS\\\"><div layout=\\\"row\\\" layout-align=\\\"space-between center\\\"><div \\nclass=\\\"avatar-wrapper\\\"><img md-menu-align-target class=\\\"avatar\\\" src=\\\"assets/images/avatars/profile.jpg\\\"></div><span \\nclass=\\\"username\\\" hide show-gt-sm>John Doe</span><md-icon md-font-icon=\\\"icon-chevron-down\\\" class=\\\"icon s16\\\" hide-xs>\\n</md-icon></div></md-button><md-menu-content width=\\\"3\\\"><md-menu-item class=\\\"md-indent\\\"><md-icon \\nmd-font-icon=\\\"icon-logout\\\" class=\\\"icon\\\"></md-icon><md-button ng-click=\\\"vm.logout()\\\">Logout</md-button></md-menu-item>\\n</md-menu-content></md-menu></md-menu-bar></div></div>\");\n$templateCache.put(\"app/toolbar/layouts/vertical-navigation-fullwidth-toolbar/toolbar.html\",\"<div layout=\\\"row\\\" layout-align=\\\"start center\\\"><div layout=\\\"row\\\" layout-align=\\\"start center\\\" flex><md-button \\nid=\\\"navigation-toggle\\\" class=\\\"md-icon-button\\\" ng-click=\\\"vm.toggleSidenav(\\'navigation\\')\\\" hide-gt-sm \\naria-label=\\\"Toggle navigation\\\" translate translate-attr-aria-label=\\\"TOOLBAR.TOGGLE_NAVIGATION\\\"><md-icon \\nmd-font-icon=\\\"icon-menu\\\" class=\\\"icon\\\"></md-icon></md-button><ms-search-bar on-search=\\\"vm.search(query)\\\" \\non-result-click=\\\"vm.searchResultClick(item)\\\" debounce=\\\"300\\\"></ms-search-bar><div class=\\\"toolbar-separator\\\"></div>\\n<ms-shortcuts></ms-shortcuts><div class=\\\"toolbar-separator\\\"></div></div><div layout=\\\"row\\\" layout-align=\\\"start center\\\">\\n<md-progress-circular id=\\\"toolbar-progress\\\" ng-if=\\\"$root.loadingProgress\\\" class=\\\"md-accent\\\" md-mode=\\\"indeterminate\\\" \\nmd-diameter=\\\"64\\\"></md-progress-circular><md-menu-bar id=\\\"user-menu\\\"><md-menu md-position-mode=\\\"left bottom\\\"><md-button \\nclass=\\\"user-button\\\" ng-click=\\\"$mdOpenMenu()\\\" aria-label=\\\"User settings\\\" translate \\ntranslate-attr-aria-label=\\\"TOOLBAR.USER_SETTINGS\\\"><div layout=\\\"row\\\" layout-align=\\\"space-between center\\\"><div \\nclass=\\\"avatar-wrapper\\\"><img md-menu-align-target class=\\\"avatar\\\" src=\\\"assets/images/avatars/profile.jpg\\\"><md-icon \\nmd-font-icon ng-class=\\\"vm.userStatus.icon\\\" ng-style=\\\"{\\'color\\': vm.userStatus.color }\\\" class=\\\"icon status s16\\\">\\n</md-icon></div><span class=\\\"username\\\" hide-sm>John Doe</span><md-icon md-font-icon=\\\"icon-chevron-down\\\" \\nclass=\\\"icon s16\\\" hide-sm></md-icon></div></md-button><md-menu-content width=\\\"3\\\"><md-menu-item class=\\\"md-indent\\\" \\nui-sref=\\\"app.pages_profile\\\"><md-icon md-font-icon=\\\"icon-account\\\" class=\\\"icon\\\"></md-icon><md-button>My Profile\\n</md-button></md-menu-item><md-menu-item class=\\\"md-indent\\\" ui-sref=\\\"app.mail\\\"><md-icon md-font-icon=\\\"icon-email\\\" \\nclass=\\\"icon\\\"></md-icon><md-button>Inbox</md-button></md-menu-item><md-menu-item class=\\\"md-indent\\\"><md-icon \\nmd-font-icon ng-class=\\\"vm.userStatus.icon\\\" ng-style=\\\"{\\'color\\': vm.userStatus.color }\\\" class=\\\"icon\\\"></md-icon><md-menu \\nid=\\\"user-status-menu\\\"><md-button ng-click=\\\"$mdOpenMenu()\\\" class=\\\"status\\\" ng-class=\\\"vm.userStatus.class\\\">\\n{{vm.userStatus.title}}</md-button><md-menu-content width=\\\"2\\\"><md-menu-item class=\\\"status md-indent\\\" \\nng-class=\\\"{\\'selected\\': status === vm.userStatus}\\\" ng-repeat=\\\"status in vm.userStatusOptions\\\"><md-icon \\nmd-font-icon=\\\"{{status.icon}}\\\" ng-style=\\\"{\\'color\\': status.color }\\\" class=\\\"icon\\\"></md-icon><md-button \\nng-click=\\\"vm.setUserStatus(status)\\\">{{status.title}}</md-button></md-menu-item></md-menu-content></md-menu>\\n</md-menu-item><md-menu-divider></md-menu-divider><md-menu-item class=\\\"md-indent\\\"><md-icon md-font-icon=\\\"icon-logout\\\" \\nclass=\\\"icon\\\"></md-icon><md-button ng-click=\\\"vm.logout()\\\">Logout</md-button></md-menu-item></md-menu-content></md-menu>\\n</md-menu-bar><div class=\\\"toolbar-separator\\\"></div><md-menu id=\\\"language-menu\\\" md-offset=\\\"0 72\\\" \\nmd-position-mode=\\\"target-right target\\\"><md-button class=\\\"language-button\\\" ng-click=\\\"$mdOpenMenu()\\\" \\naria-label=\\\"Language\\\" md-menu-origin md-menu-align-target><div layout=\\\"row\\\" layout-align=\\\"center center\\\"><img \\nclass=\\\"flag\\\" ng-src=\\\"assets/images/flags/{{vm.selectedLanguage.flag}}.png\\\"> <span class=\\\"iso\\\">\\n{{vm.selectedLanguage.code}}</span></div></md-button><md-menu-content width=\\\"3\\\" id=\\\"language-menu-content\\\">\\n<md-menu-item ng-repeat=\\\"(iso, lang) in vm.languages\\\"><md-button ng-click=\\\"vm.changeLanguage(lang)\\\" \\naria-label=\\\"{{lang.title}}\\\" translate translate-attr-aria-label=\\\"{{lang.title}}\\\"><span layout=\\\"row\\\" \\nlayout-align=\\\"start center\\\"><img class=\\\"flag\\\" ng-src=\\\"assets/images/flags/{{lang.flag}}.png\\\"> <span \\ntranslate=\\\"{{lang.translation}}\\\">{{lang.title}}</span></span></md-button></md-menu-item></md-menu-content></md-menu>\\n<div class=\\\"toolbar-separator\\\"></div><md-button id=\\\"quick-panel-toggle\\\" class=\\\"md-icon-button\\\" \\nng-click=\\\"vm.toggleSidenav(\\'quick-panel\\')\\\" aria-label=\\\"Toggle quick panel\\\" translate \\ntranslate-attr-aria-label=\\\"TOOLBAR.TOGGLE_QUICK_PANEL\\\"><md-icon md-font-icon=\\\"icon-format-list-bulleted\\\" class=\\\"icon\\\">\\n</md-icon></md-button></div></div>\");\n$templateCache.put(\"app/toolbar/layouts/vertical-navigation-fullwidth-toolbar-2/toolbar.html\",\"<div layout=\\\"row\\\" layout-align=\\\"start center\\\"><div layout=\\\"row\\\" layout-align=\\\"start center\\\" flex><div class=\\\"logo\\\" \\nlayout=\\\"row\\\" layout-align=\\\"start center\\\"><span class=\\\"logo-image\\\">F</span> <span class=\\\"logo-text\\\">FUSE</span></div>\\n<div class=\\\"toolbar-separator\\\"></div><md-button id=\\\"navigation-toggle\\\" class=\\\"md-icon-button\\\" \\nng-click=\\\"vm.toggleSidenav(\\'navigation\\')\\\" hide-gt-sm aria-label=\\\"Toggle navigation\\\" translate \\ntranslate-attr-aria-label=\\\"TOOLBAR.TOGGLE_NAVIGATION\\\"><md-icon md-font-icon=\\\"icon-menu\\\" class=\\\"icon\\\"></md-icon>\\n</md-button><md-button class=\\\"md-icon-button navigation-fold-toggle\\\" hide show-gt-sm \\naria-label=\\\"Toggle navigation fold\\\" translate translate-attr-aria-label=\\\"TOOLBAR.TOGGLE_NAVIGATION_FOLD\\\" \\nng-click=\\\"vm.toggleMsNavigationFolded()\\\"><md-icon class=\\\"s18\\\" md-font-icon=\\\"icon-backburger\\\"></md-icon></md-button>\\n<ms-shortcuts></ms-shortcuts><div class=\\\"toolbar-separator\\\"></div></div><div layout=\\\"row\\\" layout-align=\\\"start center\\\">\\n<md-progress-circular id=\\\"toolbar-progress\\\" ng-if=\\\"$root.loadingProgress\\\" class=\\\"md-accent\\\" md-mode=\\\"indeterminate\\\" \\nmd-diameter=\\\"64\\\"></md-progress-circular><md-menu-bar id=\\\"user-menu\\\"><md-menu md-position-mode=\\\"left bottom\\\"><md-button \\nclass=\\\"user-button\\\" ng-click=\\\"$mdOpenMenu()\\\" aria-label=\\\"User settings\\\" translate \\ntranslate-attr-aria-label=\\\"TOOLBAR.USER_SETTINGS\\\"><div layout=\\\"row\\\" layout-align=\\\"space-between center\\\"><div \\nclass=\\\"avatar-wrapper\\\"><img md-menu-align-target class=\\\"avatar\\\" src=\\\"assets/images/avatars/profile.jpg\\\"><md-icon \\nmd-font-icon ng-class=\\\"vm.userStatus.icon\\\" ng-style=\\\"{\\'color\\': vm.userStatus.color }\\\" class=\\\"icon status s16\\\">\\n</md-icon></div><span class=\\\"username\\\" hide-sm>John Doe</span><md-icon md-font-icon=\\\"icon-chevron-down\\\" \\nclass=\\\"icon s16\\\" hide-sm></md-icon></div></md-button><md-menu-content width=\\\"3\\\"><md-menu-item class=\\\"md-indent\\\" \\nui-sref=\\\"app.pages_profile\\\"><md-icon md-font-icon=\\\"icon-account\\\" class=\\\"icon\\\"></md-icon><md-button>My Profile\\n</md-button></md-menu-item><md-menu-item class=\\\"md-indent\\\" ui-sref=\\\"app.mail\\\"><md-icon md-font-icon=\\\"icon-email\\\" \\nclass=\\\"icon\\\"></md-icon><md-button>Inbox</md-button></md-menu-item><md-menu-item class=\\\"md-indent\\\"><md-icon \\nmd-font-icon ng-class=\\\"vm.userStatus.icon\\\" ng-style=\\\"{\\'color\\': vm.userStatus.color }\\\" class=\\\"icon\\\"></md-icon><md-menu \\nid=\\\"user-status-menu\\\"><md-button ng-click=\\\"$mdOpenMenu()\\\" class=\\\"status\\\" ng-class=\\\"vm.userStatus.class\\\">\\n{{vm.userStatus.title}}</md-button><md-menu-content width=\\\"2\\\"><md-menu-item class=\\\"status md-indent\\\" \\nng-class=\\\"{\\'selected\\': status === vm.userStatus}\\\" ng-repeat=\\\"status in vm.userStatusOptions\\\"><md-icon \\nmd-font-icon=\\\"{{status.icon}}\\\" ng-style=\\\"{\\'color\\': status.color }\\\" class=\\\"icon\\\"></md-icon><md-button \\nng-click=\\\"vm.setUserStatus(status)\\\">{{status.title}}</md-button></md-menu-item></md-menu-content></md-menu>\\n</md-menu-item><md-menu-divider></md-menu-divider><md-menu-item class=\\\"md-indent\\\"><md-icon md-font-icon=\\\"icon-logout\\\" \\nclass=\\\"icon\\\"></md-icon><md-button ng-click=\\\"vm.logout()\\\">Logout</md-button></md-menu-item></md-menu-content></md-menu>\\n</md-menu-bar><div class=\\\"toolbar-separator\\\"></div><ms-search-bar on-search=\\\"vm.search(query)\\\" \\non-result-click=\\\"vm.searchResultClick(item)\\\" debounce=\\\"300\\\"></ms-search-bar><div class=\\\"toolbar-separator\\\"></div>\\n<md-menu id=\\\"language-menu\\\" md-offset=\\\"0 72\\\" md-position-mode=\\\"target-right target\\\"><md-button class=\\\"language-button\\\" \\nng-click=\\\"$mdOpenMenu()\\\" aria-label=\\\"Language\\\" md-menu-origin md-menu-align-target><div layout=\\\"row\\\" \\nlayout-align=\\\"center center\\\"><img class=\\\"flag\\\" ng-src=\\\"assets/images/flags/{{vm.selectedLanguage.flag}}.png\\\"> <span \\nclass=\\\"iso\\\">{{vm.selectedLanguage.code}}</span></div></md-button><md-menu-content width=\\\"3\\\" id=\\\"language-menu-content\\\">\\n<md-menu-item ng-repeat=\\\"(iso, lang) in vm.languages\\\"><md-button ng-click=\\\"vm.changeLanguage(lang)\\\" \\naria-label=\\\"{{lang.title}}\\\" translate translate-attr-aria-label=\\\"{{lang.title}}\\\"><span layout=\\\"row\\\" \\nlayout-align=\\\"start center\\\"><img class=\\\"flag\\\" ng-src=\\\"assets/images/flags/{{lang.flag}}.png\\\"> <span \\ntranslate=\\\"{{lang.translation}}\\\">{{lang.title}}</span></span></md-button></md-menu-item></md-menu-content></md-menu>\\n<div class=\\\"toolbar-separator\\\"></div><md-button id=\\\"quick-panel-toggle\\\" class=\\\"md-icon-button\\\" \\nng-click=\\\"vm.toggleSidenav(\\'quick-panel\\')\\\" aria-label=\\\"Toggle quick panel\\\" translate \\ntranslate-attr-aria-label=\\\"TOOLBAR.TOGGLE_QUICK_PANEL\\\"><md-icon md-font-icon=\\\"icon-format-list-bulleted\\\" class=\\\"icon\\\">\\n</md-icon></md-button></div></div>\");\n$templateCache.put(\"app/core/directives/ms-navigation/templates/horizontal.html\",\"<div class=\\\"navigation-toggle\\\" hide-gt-sm><md-button class=\\\"md-icon-button\\\" ng-click=\\\"vm.toggleHorizontalMobileMenu()\\\" \\naria-label=\\\"Toggle Mobile Navigation\\\"><md-icon md-font-icon=\\\"icon-menu\\\"></md-icon></md-button></div><ul \\nclass=\\\"horizontal\\\"><li ng-repeat=\\\"node in vm.navigation\\\" ms-navigation-horizontal-node=\\\"node\\\" \\nng-class=\\\"{\\'has-children\\': vm.hasChildren}\\\" ng-include=\\\"\\'navigation-horizontal-nested.html\\'\\\"></li></ul><script \\ntype=\\\"text/ng-template\\\" id=\\\"navigation-horizontal-nested.html\\\">\\n<div ms-navigation-horizontal-item layout=\\\"row\\\" ng-if=\\\"!vm.isHidden()\\\">\\n\\n        <div class=\\\"ms-navigation-horizontal-button\\\" ng-if=\\\"!node.uisref && node.title\\\"\\n             ng-class=\\\"{\\'active md-accent-bg\\': vm.isActive}\\\">\\n            <i class=\\\"icon s18 {{node.icon}}\\\" ng-if=\\\"node.icon\\\"></i>\\n            <span class=\\\"title\\\" translate=\\\"{{node.translate}}\\\" flex>{{node.title}}</span>\\n            <span class=\\\"badge white-fg\\\" style=\\\"background: {{node.badge.color}}\\\" ng-if=\\\"node.badge\\\">{{node.badge.content}}</span>\\n            <i class=\\\"icon-chevron-right s18 arrow\\\" ng-if=\\\"vm.hasChildren\\\"></i>\\n        </div>\\n\\n        <a class=\\\"ms-navigation-horizontal-button\\\" ui-sref=\\\"{{node.uisref}}\\\" ui-sref-active=\\\"active md-accent-bg\\\"\\n           ng-class=\\\"{\\'active md-accent-bg\\': vm.isActive}\\\"\\n           ng-if=\\\"node.uisref && node.title\\\">\\n            <i class=\\\"icon s18 {{node.icon}}\\\" ng-if=\\\"node.icon\\\"></i>\\n            <span class=\\\"title\\\" translate=\\\"{{node.translate}}\\\" flex>{{node.title}}</span>\\n            <span class=\\\"badge white-fg\\\" style=\\\"background: {{node.badge.color}}\\\" ng-if=\\\"node.badge\\\">{{node.badge.content}}</span>\\n            <i class=\\\"icon-chevron-right s18 arrow\\\" ng-if=\\\"vm.hasChildren\\\"></i>\\n        </a>\\n\\n    </div>\\n\\n    <ul ng-if=\\\"vm.hasChildren && !vm.isHidden()\\\">\\n        <li ng-repeat=\\\"node in node.children\\\" ms-navigation-horizontal-node=\\\"node\\\"\\n            ng-class=\\\"{\\'has-children\\': vm.hasChildren}\\\"\\n            ng-include=\\\"\\'navigation-horizontal-nested.html\\'\\\"></li>\\n    </ul>\\n</script>\");\n$templateCache.put(\"app/core/directives/ms-navigation/templates/vertical.html\",\"<ul><li ng-repeat=\\\"node in vm.navigation\\\" ms-navigation-node=\\\"node\\\" \\nng-class=\\\"{\\'collapsed\\': vm.collapsed, \\'has-children\\': vm.hasChildren}\\\" ng-include=\\\"\\'navigation-nested.html\\'\\\"></li></ul>\\n<script type=\\\"text/ng-template\\\" id=\\\"navigation-nested.html\\\">\\n<div ms-navigation-item layout=\\\"row\\\" ng-if=\\\"!vm.isHidden()\\\">\\n\\n        <div class=\\\"ms-navigation-button\\\" ng-if=\\\"!node.uisref && node.title\\\">\\n            <i class=\\\"icon s16 {{node.icon}}\\\" ng-if=\\\"node.icon\\\"></i>\\n            <span class=\\\"title\\\" translate=\\\"{{node.translate}}\\\" flex>{{node.title}}</span>\\n            <span class=\\\"badge white-fg\\\" ng-style=\\\"{\\'background\\': node.badge.color}\\\" ng-if=\\\"node.badge\\\">{{node.badge.content}}</span>\\n            <i class=\\\"icon-chevron-right s16 arrow\\\" ng-if=\\\"vm.collapsable && vm.hasChildren\\\"></i>\\n        </div>\\n\\n        <a class=\\\"ms-navigation-button\\\" ui-sref=\\\"{{node.uisref}}\\\" ui-sref-active=\\\"active md-accent-bg\\\"\\n           ng-if=\\\"node.uisref && node.title\\\">\\n            <i class=\\\"icon s16 {{node.icon}}\\\" ng-if=\\\"node.icon\\\"></i>\\n            <span class=\\\"title\\\" translate=\\\"{{node.translate}}\\\" flex>{{node.title}}</span>\\n            <span class=\\\"badge white-fg\\\" ng-style=\\\"{\\'background\\': node.badge.color}\\\" ng-if=\\\"node.badge\\\">{{node.badge.content}}</span>\\n            <i class=\\\"icon-chevron-right s16 arrow\\\" ng-if=\\\"vm.collapsable && vm.hasChildren\\\"></i>\\n        </a>\\n\\n    </div>\\n\\n    <ul ng-if=\\\"vm.hasChildren && !vm.isHidden()\\\">\\n        <li ng-repeat=\\\"node in node.children\\\" ms-navigation-node=\\\"node\\\"\\n            ng-class=\\\"{\\'collapsed\\': vm.collapsed, \\'has-children\\': vm.hasChildren}\\\"\\n            ng-include=\\\"\\'navigation-nested.html\\'\\\"></li>\\n    </ul>\\n</script>\");\n$templateCache.put(\"app/core/directives/ms-card/templates/template-1/template-1.html\",\"<div class=\\\"template-1\\\"><div class=\\\"media\\\"><img class=\\\"image\\\" ng-src=\\\"{{card.media.image.src}}\\\" \\nalt=\\\"{{card.media.image.alt}}\\\" ng-show=\\\"card.media.image\\\"></div><div class=\\\"content pv-24 ph-16\\\"><div class=\\\"title h1\\\" \\nng-if=\\\"card.title\\\">{{card.title}}</div><div class=\\\"subtitle secondary-text\\\" ng-if=\\\"card.subtitle\\\">{{card.subtitle}}\\n</div><div class=\\\"text pt-16\\\" ng-if=\\\"card.text\\\">{{card.text}}</div></div></div>\");\n$templateCache.put(\"app/core/directives/ms-card/templates/template-10/template-10.html\",\"<div class=\\\"template-10 p-16\\\"><div class=\\\"pb-16\\\" layout=\\\"row\\\" layout-align=\\\"space-between center\\\"><div class=\\\"info\\\">\\n<div class=\\\"title secondary-text\\\" ng-if=\\\"card.title\\\">{{card.title}}</div><div class=\\\"subtitle h2\\\" \\nng-if=\\\"card.subtitle\\\">{{card.subtitle}}</div></div><div class=\\\"media ml-16\\\"><img class=\\\"image\\\" \\nng-src=\\\"{{card.media.image.src}}\\\" alt=\\\"{{card.media.image.alt}}\\\" ng-show=\\\"card.media.image\\\"></div></div><div \\nclass=\\\"text\\\">{{card.text}}</div></div>\");\n$templateCache.put(\"app/core/directives/ms-card/templates/template-2/template-2.html\",\"<div class=\\\"template-2\\\"><div class=\\\"header p-16\\\" layout=\\\"row\\\" layout-align=\\\"start center\\\"><div ng-if=\\\"card.avatar\\\"><img\\n class=\\\"avatar mr-16\\\" ng-src=\\\"{{card.avatar.src}}\\\" alt=\\\"{{card.avatar.alt}}\\\"></div><div class=\\\"info\\\"><div \\nclass=\\\"title\\\" ng-if=\\\"card.title\\\">{{card.title}}</div><div class=\\\"subtitle secondary-text\\\" ng-if=\\\"card.subtitle\\\">\\n{{card.subtitle}}</div></div></div><div class=\\\"media\\\"><img class=\\\"image\\\" ng-src=\\\"{{card.media.image.src}}\\\" \\nalt=\\\"{{card.media.image.alt}}\\\" ng-show=\\\"card.media.image\\\"></div><div class=\\\"text p-16\\\" ng-if=\\\"card.text\\\">{{card.text}}\\n</div></div>\");\n$templateCache.put(\"app/core/directives/ms-card/templates/template-3/template-3.html\",\"<div class=\\\"template-3 p-16 teal-bg white-fg\\\" layout=\\\"row\\\" layout-align=\\\"space-between\\\"><div layout=\\\"column\\\" \\nlayout-align=\\\"space-between\\\"><div class=\\\"info\\\"><div class=\\\"title h1\\\" ng-if=\\\"card.title\\\">{{card.title}}</div><div \\nclass=\\\"subtitle h3 secondary-text\\\" ng-if=\\\"card.subtitle\\\">{{card.subtitle}}</div></div><div class=\\\"cta\\\"><md-button \\nclass=\\\"m-0\\\">{{card.cta}}</md-button></div></div><div class=\\\"media pl-16\\\"><img class=\\\"image\\\" \\nng-src=\\\"{{card.media.image.src}}\\\" alt=\\\"{{card.media.image.alt}}\\\" ng-show=\\\"card.media.image\\\"></div></div>\");\n$templateCache.put(\"app/core/directives/ms-card/templates/template-4/template-4.html\",\"<div class=\\\"template-4\\\"><div class=\\\"info white-fg ph-16 pv-24\\\"><div class=\\\"title h1\\\" ng-if=\\\"card.title\\\">{{card.title}}\\n</div><div class=\\\"text\\\" ng-if=\\\"card.text\\\">{{card.text}}</div></div><div class=\\\"media\\\"><img class=\\\"image\\\" \\nng-src=\\\"{{card.media.image.src}}\\\" alt=\\\"{{card.media.image.alt}}\\\" ng-show=\\\"card.media.image\\\"></div></div>\");\n$templateCache.put(\"app/core/directives/ms-card/templates/template-5/template-5.html\",\"<div class=\\\"template-5 p-16\\\" layout=\\\"row\\\" layout-align=\\\"space-between start\\\"><div class=\\\"info\\\"><div \\nclass=\\\"title secondary-text\\\" ng-if=\\\"card.title\\\">{{card.title}}</div><div class=\\\"event h2\\\" ng-if=\\\"card.event\\\">\\n{{card.event}}</div></div><div class=\\\"media ml-16\\\"><img class=\\\"image\\\" ng-src=\\\"{{card.media.image.src}}\\\" \\nalt=\\\"{{card.media.image.alt}}\\\" ng-show=\\\"card.media.image\\\"></div></div>\");\n$templateCache.put(\"app/core/directives/ms-card/templates/template-6/template-6.html\",\"<div class=\\\"template-6\\\"><div class=\\\"content pv-24 ph-16\\\"><div class=\\\"subtitle secondary-text\\\" ng-if=\\\"card.subtitle\\\">\\n{{card.subtitle}}</div><div class=\\\"title h2\\\" ng-if=\\\"card.title\\\">{{card.title}}</div><div class=\\\"text pt-8\\\" \\nng-if=\\\"card.text\\\">{{card.text}}</div></div></div>\");\n$templateCache.put(\"app/core/directives/ms-card/templates/template-7/template-7.html\",\"<div class=\\\"template-7\\\" layout=\\\"row\\\" layout-align=\\\"space-between\\\"><div class=\\\"info\\\" layout=\\\"column\\\" \\nlayout-align=\\\"space-between\\\" layout-fill flex><div class=\\\"p-16\\\"><div class=\\\"title h1\\\" ng-if=\\\"card.title\\\">{{card.title}}\\n</div><div class=\\\"subtitle h4 secondary-text\\\" ng-if=\\\"card.subtitle\\\">{{card.subtitle}}</div><div class=\\\"text h4 pt-8\\\" \\nng-if=\\\"card.text\\\">{{card.text}}</div></div><div><md-divider></md-divider><div class=\\\"p-8\\\" layout=\\\"row\\\"><md-icon \\nmd-font-icon=\\\"icon-star-outline\\\" class=\\\"mh-5\\\"></md-icon><md-icon md-font-icon=\\\"icon-star-outline\\\" class=\\\"mh-5\\\">\\n</md-icon><md-icon md-font-icon=\\\"icon-star-outline\\\" class=\\\"mh-5\\\"></md-icon><md-icon md-font-icon=\\\"icon-star-outline\\\" \\nclass=\\\"mh-5\\\"></md-icon><md-icon md-font-icon=\\\"icon-star-outline\\\" class=\\\"mh-5\\\"></md-icon></div></div></div><div \\nclass=\\\"media\\\"><img class=\\\"image\\\" ng-src=\\\"{{card.media.image.src}}\\\" alt=\\\"{{card.media.image.alt}}\\\" \\nng-show=\\\"card.media.image\\\"></div></div>\");\n$templateCache.put(\"app/core/directives/ms-card/templates/template-8/template-8.html\",\"<div class=\\\"template-8\\\"><div class=\\\"media\\\"><img class=\\\"image\\\" ng-src=\\\"{{card.media.image.src}}\\\" \\nalt=\\\"{{card.media.image.alt}}\\\" ng-show=\\\"card.media.image\\\"></div><div class=\\\"content pv-24 ph-16\\\"><div class=\\\"title h1\\\" \\nng-if=\\\"card.title\\\">{{card.title}}</div><div class=\\\"subtitle secondary-text\\\" ng-if=\\\"card.subtitle\\\">{{card.subtitle}}\\n</div><div class=\\\"buttons pt-16\\\"><md-button class=\\\"m-0\\\">{{card.button1}}</md-button><md-button class=\\\"m-0 md-accent\\\">\\n{{card.button2}}</md-button></div><div class=\\\"text pt-16\\\" ng-if=\\\"card.text\\\">{{card.text}}</div></div></div>\");\n$templateCache.put(\"app/core/directives/ms-card/templates/template-9/template-9.html\",\"<div class=\\\"template-9\\\"><div class=\\\"header p-16\\\" layout=\\\"row\\\" layout-align=\\\"start center\\\"><div ng-if=\\\"card.avatar\\\"><img\\n class=\\\"avatar mr-16\\\" ng-src=\\\"{{card.avatar.src}}\\\" alt=\\\"{{card.avatar.alt}}\\\"></div><div class=\\\"info\\\"><div \\nclass=\\\"title\\\" ng-if=\\\"card.title\\\">{{card.title}}</div><div class=\\\"subtitle secondary-text\\\" ng-if=\\\"card.subtitle\\\">\\n{{card.subtitle}}</div></div></div><div class=\\\"text ph-16 pb-16\\\" ng-if=\\\"card.text\\\">{{card.text}}</div><div \\nclass=\\\"media\\\"><img class=\\\"image\\\" ng-src=\\\"{{card.media.image.src}}\\\" alt=\\\"{{card.media.image.alt}}\\\" \\nng-show=\\\"card.media.image\\\"></div><div class=\\\"buttons m-8\\\"><md-button class=\\\"md-icon-button mr-16\\\" \\naria-label=\\\"Favorite\\\"><md-icon md-font-icon=\\\"icon-heart-outline\\\" class=\\\"s24\\\"></md-icon></md-button><md-button \\nclass=\\\"md-icon-button\\\" aria-label=\\\"Share\\\"><md-icon md-font-icon=\\\"icon-share\\\" class=\\\"s24\\\"></md-icon></md-button></div>\\n</div>\");\n$templateCache.put(\"app/core/directives/ms-stepper/templates/horizontal/horizontal.html\",\"<div class=\\\"ms-stepper-horizontal\\\"><div class=\\\"ms-stepper-navigation-wrapper\\\"><div class=\\\"ms-stepper-navigation\\\" \\nlayout=\\\"row\\\" layout-align=\\\"center center\\\"><md-button class=\\\"ms-stepper-navigation-item\\\" \\nng-class=\\\"{\\'current\\': MsStepper.isStepCurrent(step.stepNumber), \\'valid\\': MsStepper.isStepValid(step.stepNumber), \\'disabled\\': MsStepper.isStepDisabled(step.stepNumber), \\'optional\\': MsStepper.isStepOptional(step.stepNumber)}\\\" \\nng-click=\\\"MsStepper.gotoStep(step.stepNumber)\\\" ng-disabled=\\\"MsStepper.isStepDisabled(step.stepNumber)\\\" \\nng-repeat=\\\"step in MsStepper.steps | filter:MsStepper.filterHiddenStep\\\" layout=\\\"row\\\" layout-align=\\\"start center\\\"><div \\nclass=\\\"step md-accent-bg\\\" layout=\\\"row\\\" layout-align=\\\"center center\\\"><span \\nng-if=\\\"!MsStepper.isStepValid(step.stepNumber) || MsStepper.isStepOptional(step.stepNumber)\\\">{{$index + 1}} </span>\\n<span ng-if=\\\"MsStepper.isStepValid(step.stepNumber) && !MsStepper.isStepOptional(step.stepNumber)\\\"><i \\nclass=\\\"icon icon-check s18\\\"></i></span></div><div layout=\\\"column\\\" layout-align=\\\"start start\\\"><div class=\\\"title\\\">\\n{{step.stepTitle}}</div><div class=\\\"subtitle\\\" ng-if=\\\"MsStepper.isStepOptional(step.stepNumber)\\\">Optional</div></div>\\n</md-button></div></div><div class=\\\"ms-stepper-steps\\\" ng-transclude></div><div class=\\\"ms-stepper-controls\\\" \\nlayout=\\\"row\\\" layout-align=\\\"center center\\\"><md-button class=\\\"md-accent md-raised\\\" ng-disabled=\\\"MsStepper.isFirstStep()\\\" \\nng-click=\\\"MsStepper.gotoPreviousStep()\\\">Back</md-button><div class=\\\"ms-stepper-dots\\\"><span \\nng-repeat=\\\"step in MsStepper.steps\\\" ng-hide=\\\"MsStepper.isStepHidden(step.stepNumber)\\\" \\nng-class=\\\"{\\'selected md-accent-bg\\':MsStepper.currentStepNumber === $index + 1}\\\"></span></div><md-button \\nclass=\\\"md-accent md-raised\\\" ng-if=\\\"!MsStepper.isLastStep()\\\" \\nng-disabled=\\\"!MsStepper.isStepValid(MsStepper.currentStepNumber)\\\" ng-click=\\\"MsStepper.gotoNextStep()\\\">Next</md-button>\\n<md-button type=\\\"submit\\\" class=\\\"md-accent md-raised\\\" ng-click=\\\"MsStepper.resetForm()\\\" ng-if=\\\"MsStepper.isLastStep()\\\" \\nng-disabled=\\\"!MsStepper.isFormValid()\\\">Submit</md-button></div></div>\");}]);"],"sourceRoot":"/source/"}